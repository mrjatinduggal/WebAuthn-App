"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@simplewebauthn";
exports.ids = ["vendor-chunks/@simplewebauthn"];
exports.modules = {

/***/ "(ssr)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/browser/dist/bundle/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebAuthnAbortService: () => (/* binding */ WebAuthnAbortService),\n/* harmony export */   WebAuthnError: () => (/* binding */ WebAuthnError),\n/* harmony export */   base64URLStringToBuffer: () => (/* binding */ base64URLStringToBuffer),\n/* harmony export */   browserSupportsWebAuthn: () => (/* binding */ browserSupportsWebAuthn),\n/* harmony export */   browserSupportsWebAuthnAutofill: () => (/* binding */ browserSupportsWebAuthnAutofill),\n/* harmony export */   bufferToBase64URLString: () => (/* binding */ bufferToBase64URLString),\n/* harmony export */   platformAuthenticatorIsAvailable: () => (/* binding */ platformAuthenticatorIsAvailable),\n/* harmony export */   startAuthentication: () => (/* binding */ startAuthentication),\n/* harmony export */   startRegistration: () => (/* binding */ startRegistration)\n/* harmony export */ });\n/* [@simplewebauthn/browser@10.0.0] */\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return (window?.PublicKeyCredential !== undefined &&\n        typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' ||\n        /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor({ message, code, cause, name, }) {\n        super(message, { cause });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nclass BaseWebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n    cancelCeremony() {\n        if (this.controller) {\n            const abortError = new Error('Manually cancelling existing WebAuthn API call');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n            this.controller = undefined;\n        }\n    }\n}\nconst WebAuthnAbortService = new BaseWebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(optionsJSON) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        user: {\n            ...optionsJSON.user,\n            id: base64URLStringToBuffer(optionsJSON.user.id),\n        },\n        excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    const options = { publicKey };\n    options.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(options));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        try {\n            responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n        }\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        try {\n            const _publicKey = response.getPublicKey();\n            if (_publicKey !== null) {\n                responsePublicKey = bufferToBase64URLString(_publicKey);\n            }\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKey()', error);\n        }\n    }\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        try {\n            responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getAuthenticatorData()', error);\n        }\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\nfunction warnOnBrokenImplementation(methodName, cause) {\n    console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\n\nfunction browserSupportsWebAuthnAutofill() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    const globalPublicKeyCredential = window\n        .PublicKeyCredential;\n    if (globalPublicKeyCredential.isConditionalMediationAvailable === undefined) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return globalPublicKeyCredential.isConditionalMediationAvailable();\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Authentication ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nasync function startAuthentication(optionsJSON, useBrowserAutofill = false) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (optionsJSON.allowCredentials?.length !== 0) {\n        allowCredentials = optionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        allowCredentials,\n    };\n    const options = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete$='webauthn']\");\n        if (eligibleInputs.length < 1) {\n            throw Error('No <input> with \"webauthn\" as the only or last value in its `autocomplete` attribute was detected');\n        }\n        options.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    options.publicKey = publicKey;\n    options.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(options));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToBase64URLString(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL2Jyb3dzZXIvZGlzdC9idW5kbGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMkNBQTJDLEdBQUc7QUFDOUM7O0FBRUE7QUFDQSxrQkFBa0IsNkJBQTZCO0FBQy9DLHlCQUF5QixPQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFDQUFxQyxpQkFBaUI7QUFDdEQsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMEJBQTBCO0FBQ3REO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdCQUFnQjtBQUN2RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxxQkFBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBHQUEwRyxXQUFXO0FBQ3JIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUNBQXVDLGlCQUFpQjtBQUN4RCxZQUFZLFlBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMEJBQTBCO0FBQ3REO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGVBQWU7QUFDdEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxxQkFBcUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXFPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9icm93c2VyL2Rpc3QvYnVuZGxlL2luZGV4LmpzP2E0ODciXSwic291cmNlc0NvbnRlbnQiOlsiLyogW0BzaW1wbGV3ZWJhdXRobi9icm93c2VyQDEwLjAuMF0gKi9cbmZ1bmN0aW9uIGJ1ZmZlclRvQmFzZTY0VVJMU3RyaW5nKGJ1ZmZlcikge1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKTtcbiAgICBsZXQgc3RyID0gJyc7XG4gICAgZm9yIChjb25zdCBjaGFyQ29kZSBvZiBieXRlcykge1xuICAgICAgICBzdHIgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSk7XG4gICAgfVxuICAgIGNvbnN0IGJhc2U2NFN0cmluZyA9IGJ0b2Eoc3RyKTtcbiAgICByZXR1cm4gYmFzZTY0U3RyaW5nLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpLnJlcGxhY2UoLz0vZywgJycpO1xufVxuXG5mdW5jdGlvbiBiYXNlNjRVUkxTdHJpbmdUb0J1ZmZlcihiYXNlNjRVUkxTdHJpbmcpIHtcbiAgICBjb25zdCBiYXNlNjQgPSBiYXNlNjRVUkxTdHJpbmcucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKTtcbiAgICBjb25zdCBwYWRMZW5ndGggPSAoNCAtIChiYXNlNjQubGVuZ3RoICUgNCkpICUgNDtcbiAgICBjb25zdCBwYWRkZWQgPSBiYXNlNjQucGFkRW5kKGJhc2U2NC5sZW5ndGggKyBwYWRMZW5ndGgsICc9Jyk7XG4gICAgY29uc3QgYmluYXJ5ID0gYXRvYihwYWRkZWQpO1xuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihiaW5hcnkubGVuZ3RoKTtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiaW5hcnkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYnl0ZXNbaV0gPSBiaW5hcnkuY2hhckNvZGVBdChpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn1cblxuZnVuY3Rpb24gYnJvd3NlclN1cHBvcnRzV2ViQXV0aG4oKSB7XG4gICAgcmV0dXJuICh3aW5kb3c/LlB1YmxpY0tleUNyZWRlbnRpYWwgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICB0eXBlb2Ygd2luZG93LlB1YmxpY0tleUNyZWRlbnRpYWwgPT09ICdmdW5jdGlvbicpO1xufVxuXG5mdW5jdGlvbiB0b1B1YmxpY0tleUNyZWRlbnRpYWxEZXNjcmlwdG9yKGRlc2NyaXB0b3IpIHtcbiAgICBjb25zdCB7IGlkIH0gPSBkZXNjcmlwdG9yO1xuICAgIHJldHVybiB7XG4gICAgICAgIC4uLmRlc2NyaXB0b3IsXG4gICAgICAgIGlkOiBiYXNlNjRVUkxTdHJpbmdUb0J1ZmZlcihpZCksXG4gICAgICAgIHRyYW5zcG9ydHM6IGRlc2NyaXB0b3IudHJhbnNwb3J0cyxcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBpc1ZhbGlkRG9tYWluKGhvc3RuYW1lKSB7XG4gICAgcmV0dXJuIChob3N0bmFtZSA9PT0gJ2xvY2FsaG9zdCcgfHxcbiAgICAgICAgL14oW2EtejAtOV0rKC1bYS16MC05XSspKlxcLikrW2Etel17Mix9JC9pLnRlc3QoaG9zdG5hbWUpKTtcbn1cblxuY2xhc3MgV2ViQXV0aG5FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IG1lc3NhZ2UsIGNvZGUsIGNhdXNlLCBuYW1lLCB9KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsIHsgY2F1c2UgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWUgPz8gY2F1c2UubmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGlkZW50aWZ5UmVnaXN0cmF0aW9uRXJyb3IoeyBlcnJvciwgb3B0aW9ucywgfSkge1xuICAgIGNvbnN0IHsgcHVibGljS2V5IH0gPSBvcHRpb25zO1xuICAgIGlmICghcHVibGljS2V5KSB7XG4gICAgICAgIHRocm93IEVycm9yKCdvcHRpb25zIHdhcyBtaXNzaW5nIHJlcXVpcmVkIHB1YmxpY0tleSBwcm9wZXJ0eScpO1xuICAgIH1cbiAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICAgIGlmIChvcHRpb25zLnNpZ25hbCBpbnN0YW5jZW9mIEFib3J0U2lnbmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFdlYkF1dGhuRXJyb3Ioe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdSZWdpc3RyYXRpb24gY2VyZW1vbnkgd2FzIHNlbnQgYW4gYWJvcnQgc2lnbmFsJyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnRVJST1JfQ0VSRU1PTllfQUJPUlRFRCcsXG4gICAgICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoZXJyb3IubmFtZSA9PT0gJ0NvbnN0cmFpbnRFcnJvcicpIHtcbiAgICAgICAgaWYgKHB1YmxpY0tleS5hdXRoZW50aWNhdG9yU2VsZWN0aW9uPy5yZXF1aXJlUmVzaWRlbnRLZXkgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Rpc2NvdmVyYWJsZSBjcmVkZW50aWFscyB3ZXJlIHJlcXVpcmVkIGJ1dCBubyBhdmFpbGFibGUgYXV0aGVudGljYXRvciBzdXBwb3J0ZWQgaXQnLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9BVVRIRU5USUNBVE9SX01JU1NJTkdfRElTQ09WRVJBQkxFX0NSRURFTlRJQUxfU1VQUE9SVCcsXG4gICAgICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocHVibGljS2V5LmF1dGhlbnRpY2F0b3JTZWxlY3Rpb24/LnVzZXJWZXJpZmljYXRpb24gPT09ICdyZXF1aXJlZCcpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1VzZXIgdmVyaWZpY2F0aW9uIHdhcyByZXF1aXJlZCBidXQgbm8gYXZhaWxhYmxlIGF1dGhlbnRpY2F0b3Igc3VwcG9ydGVkIGl0JyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnRVJST1JfQVVUSEVOVElDQVRPUl9NSVNTSU5HX1VTRVJfVkVSSUZJQ0FUSU9OX1NVUFBPUlQnLFxuICAgICAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGVycm9yLm5hbWUgPT09ICdJbnZhbGlkU3RhdGVFcnJvcicpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBXZWJBdXRobkVycm9yKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdUaGUgYXV0aGVudGljYXRvciB3YXMgcHJldmlvdXNseSByZWdpc3RlcmVkJyxcbiAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9BVVRIRU5USUNBVE9SX1BSRVZJT1VTTFlfUkVHSVNURVJFRCcsXG4gICAgICAgICAgICBjYXVzZTogZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChlcnJvci5uYW1lID09PSAnTm90QWxsb3dlZEVycm9yJykge1xuICAgICAgICByZXR1cm4gbmV3IFdlYkF1dGhuRXJyb3Ioe1xuICAgICAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9QQVNTVEhST1VHSF9TRUVfQ0FVU0VfUFJPUEVSVFknLFxuICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZXJyb3IubmFtZSA9PT0gJ05vdFN1cHBvcnRlZEVycm9yJykge1xuICAgICAgICBjb25zdCB2YWxpZFB1YktleUNyZWRQYXJhbXMgPSBwdWJsaWNLZXkucHViS2V5Q3JlZFBhcmFtcy5maWx0ZXIoKHBhcmFtKSA9PiBwYXJhbS50eXBlID09PSAncHVibGljLWtleScpO1xuICAgICAgICBpZiAodmFsaWRQdWJLZXlDcmVkUGFyYW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBXZWJBdXRobkVycm9yKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gZW50cnkgaW4gcHViS2V5Q3JlZFBhcmFtcyB3YXMgb2YgdHlwZSBcInB1YmxpYy1rZXlcIicsXG4gICAgICAgICAgICAgICAgY29kZTogJ0VSUk9SX01BTEZPUk1FRF9QVUJLRVlDUkVEUEFSQU1TJyxcbiAgICAgICAgICAgICAgICBjYXVzZTogZXJyb3IsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFdlYkF1dGhuRXJyb3Ioe1xuICAgICAgICAgICAgbWVzc2FnZTogJ05vIGF2YWlsYWJsZSBhdXRoZW50aWNhdG9yIHN1cHBvcnRlZCBhbnkgb2YgdGhlIHNwZWNpZmllZCBwdWJLZXlDcmVkUGFyYW1zIGFsZ29yaXRobXMnLFxuICAgICAgICAgICAgY29kZTogJ0VSUk9SX0FVVEhFTlRJQ0FUT1JfTk9fU1VQUE9SVEVEX1BVQktFWUNSRURQQVJBTVNfQUxHJyxcbiAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGVycm9yLm5hbWUgPT09ICdTZWN1cml0eUVycm9yJykge1xuICAgICAgICBjb25zdCBlZmZlY3RpdmVEb21haW4gPSB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWU7XG4gICAgICAgIGlmICghaXNWYWxpZERvbWFpbihlZmZlY3RpdmVEb21haW4pKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFdlYkF1dGhuRXJyb3Ioe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGAke3dpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZX0gaXMgYW4gaW52YWxpZCBkb21haW5gLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9JTlZBTElEX0RPTUFJTicsXG4gICAgICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocHVibGljS2V5LnJwLmlkICE9PSBlZmZlY3RpdmVEb21haW4pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogYFRoZSBSUCBJRCBcIiR7cHVibGljS2V5LnJwLmlkfVwiIGlzIGludmFsaWQgZm9yIHRoaXMgZG9tYWluYCxcbiAgICAgICAgICAgICAgICBjb2RlOiAnRVJST1JfSU5WQUxJRF9SUF9JRCcsXG4gICAgICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoZXJyb3IubmFtZSA9PT0gJ1R5cGVFcnJvcicpIHtcbiAgICAgICAgaWYgKHB1YmxpY0tleS51c2VyLmlkLmJ5dGVMZW5ndGggPCAxIHx8IHB1YmxpY0tleS51c2VyLmlkLmJ5dGVMZW5ndGggPiA2NCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBXZWJBdXRobkVycm9yKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVXNlciBJRCB3YXMgbm90IGJldHdlZW4gMSBhbmQgNjQgY2hhcmFjdGVycycsXG4gICAgICAgICAgICAgICAgY29kZTogJ0VSUk9SX0lOVkFMSURfVVNFUl9JRF9MRU5HVEgnLFxuICAgICAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGVycm9yLm5hbWUgPT09ICdVbmtub3duRXJyb3InKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICBtZXNzYWdlOiAnVGhlIGF1dGhlbnRpY2F0b3Igd2FzIHVuYWJsZSB0byBwcm9jZXNzIHRoZSBzcGVjaWZpZWQgb3B0aW9ucywgb3IgY291bGQgbm90IGNyZWF0ZSBhIG5ldyBjcmVkZW50aWFsJyxcbiAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9BVVRIRU5USUNBVE9SX0dFTkVSQUxfRVJST1InLFxuICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xufVxuXG5jbGFzcyBCYXNlV2ViQXV0aG5BYm9ydFNlcnZpY2Uge1xuICAgIGNyZWF0ZU5ld0Fib3J0U2lnbmFsKCkge1xuICAgICAgICBpZiAodGhpcy5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICBjb25zdCBhYm9ydEVycm9yID0gbmV3IEVycm9yKCdDYW5jZWxsaW5nIGV4aXN0aW5nIFdlYkF1dGhuIEFQSSBjYWxsIGZvciBuZXcgb25lJyk7XG4gICAgICAgICAgICBhYm9ydEVycm9yLm5hbWUgPSAnQWJvcnRFcnJvcic7XG4gICAgICAgICAgICB0aGlzLmNvbnRyb2xsZXIuYWJvcnQoYWJvcnRFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmV3Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyID0gbmV3Q29udHJvbGxlcjtcbiAgICAgICAgcmV0dXJuIG5ld0NvbnRyb2xsZXIuc2lnbmFsO1xuICAgIH1cbiAgICBjYW5jZWxDZXJlbW9ueSgpIHtcbiAgICAgICAgaWYgKHRoaXMuY29udHJvbGxlcikge1xuICAgICAgICAgICAgY29uc3QgYWJvcnRFcnJvciA9IG5ldyBFcnJvcignTWFudWFsbHkgY2FuY2VsbGluZyBleGlzdGluZyBXZWJBdXRobiBBUEkgY2FsbCcpO1xuICAgICAgICAgICAgYWJvcnRFcnJvci5uYW1lID0gJ0Fib3J0RXJyb3InO1xuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyLmFib3J0KGFib3J0RXJyb3IpO1xuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuY29uc3QgV2ViQXV0aG5BYm9ydFNlcnZpY2UgPSBuZXcgQmFzZVdlYkF1dGhuQWJvcnRTZXJ2aWNlKCk7XG5cbmNvbnN0IGF0dGFjaG1lbnRzID0gWydjcm9zcy1wbGF0Zm9ybScsICdwbGF0Zm9ybSddO1xuZnVuY3Rpb24gdG9BdXRoZW50aWNhdG9yQXR0YWNobWVudChhdHRhY2htZW50KSB7XG4gICAgaWYgKCFhdHRhY2htZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGF0dGFjaG1lbnRzLmluZGV4T2YoYXR0YWNobWVudCkgPCAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmV0dXJuIGF0dGFjaG1lbnQ7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN0YXJ0UmVnaXN0cmF0aW9uKG9wdGlvbnNKU09OKSB7XG4gICAgaWYgKCFicm93c2VyU3VwcG9ydHNXZWJBdXRobigpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignV2ViQXV0aG4gaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXInKTtcbiAgICB9XG4gICAgY29uc3QgcHVibGljS2V5ID0ge1xuICAgICAgICAuLi5vcHRpb25zSlNPTixcbiAgICAgICAgY2hhbGxlbmdlOiBiYXNlNjRVUkxTdHJpbmdUb0J1ZmZlcihvcHRpb25zSlNPTi5jaGFsbGVuZ2UpLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICAuLi5vcHRpb25zSlNPTi51c2VyLFxuICAgICAgICAgICAgaWQ6IGJhc2U2NFVSTFN0cmluZ1RvQnVmZmVyKG9wdGlvbnNKU09OLnVzZXIuaWQpLFxuICAgICAgICB9LFxuICAgICAgICBleGNsdWRlQ3JlZGVudGlhbHM6IG9wdGlvbnNKU09OLmV4Y2x1ZGVDcmVkZW50aWFscz8ubWFwKHRvUHVibGljS2V5Q3JlZGVudGlhbERlc2NyaXB0b3IpLFxuICAgIH07XG4gICAgY29uc3Qgb3B0aW9ucyA9IHsgcHVibGljS2V5IH07XG4gICAgb3B0aW9ucy5zaWduYWwgPSBXZWJBdXRobkFib3J0U2VydmljZS5jcmVhdGVOZXdBYm9ydFNpZ25hbCgpO1xuICAgIGxldCBjcmVkZW50aWFsO1xuICAgIHRyeSB7XG4gICAgICAgIGNyZWRlbnRpYWwgPSAoYXdhaXQgbmF2aWdhdG9yLmNyZWRlbnRpYWxzLmNyZWF0ZShvcHRpb25zKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgdGhyb3cgaWRlbnRpZnlSZWdpc3RyYXRpb25FcnJvcih7IGVycm9yOiBlcnIsIG9wdGlvbnMgfSk7XG4gICAgfVxuICAgIGlmICghY3JlZGVudGlhbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZ2lzdHJhdGlvbiB3YXMgbm90IGNvbXBsZXRlZCcpO1xuICAgIH1cbiAgICBjb25zdCB7IGlkLCByYXdJZCwgcmVzcG9uc2UsIHR5cGUgfSA9IGNyZWRlbnRpYWw7XG4gICAgbGV0IHRyYW5zcG9ydHMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5nZXRUcmFuc3BvcnRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRyYW5zcG9ydHMgPSByZXNwb25zZS5nZXRUcmFuc3BvcnRzKCk7XG4gICAgfVxuICAgIGxldCByZXNwb25zZVB1YmxpY0tleUFsZ29yaXRobSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmdldFB1YmxpY0tleUFsZ29yaXRobSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmVzcG9uc2VQdWJsaWNLZXlBbGdvcml0aG0gPSByZXNwb25zZS5nZXRQdWJsaWNLZXlBbGdvcml0aG0oKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHdhcm5PbkJyb2tlbkltcGxlbWVudGF0aW9uKCdnZXRQdWJsaWNLZXlBbGdvcml0aG0oKScsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgcmVzcG9uc2VQdWJsaWNLZXkgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5nZXRQdWJsaWNLZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IF9wdWJsaWNLZXkgPSByZXNwb25zZS5nZXRQdWJsaWNLZXkoKTtcbiAgICAgICAgICAgIGlmIChfcHVibGljS2V5ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2VQdWJsaWNLZXkgPSBidWZmZXJUb0Jhc2U2NFVSTFN0cmluZyhfcHVibGljS2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHdhcm5PbkJyb2tlbkltcGxlbWVudGF0aW9uKCdnZXRQdWJsaWNLZXkoKScsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgcmVzcG9uc2VBdXRoZW50aWNhdG9yRGF0YTtcbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmdldEF1dGhlbnRpY2F0b3JEYXRhID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXNwb25zZUF1dGhlbnRpY2F0b3JEYXRhID0gYnVmZmVyVG9CYXNlNjRVUkxTdHJpbmcocmVzcG9uc2UuZ2V0QXV0aGVudGljYXRvckRhdGEoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB3YXJuT25Ccm9rZW5JbXBsZW1lbnRhdGlvbignZ2V0QXV0aGVudGljYXRvckRhdGEoKScsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAgcmF3SWQ6IGJ1ZmZlclRvQmFzZTY0VVJMU3RyaW5nKHJhd0lkKSxcbiAgICAgICAgcmVzcG9uc2U6IHtcbiAgICAgICAgICAgIGF0dGVzdGF0aW9uT2JqZWN0OiBidWZmZXJUb0Jhc2U2NFVSTFN0cmluZyhyZXNwb25zZS5hdHRlc3RhdGlvbk9iamVjdCksXG4gICAgICAgICAgICBjbGllbnREYXRhSlNPTjogYnVmZmVyVG9CYXNlNjRVUkxTdHJpbmcocmVzcG9uc2UuY2xpZW50RGF0YUpTT04pLFxuICAgICAgICAgICAgdHJhbnNwb3J0cyxcbiAgICAgICAgICAgIHB1YmxpY0tleUFsZ29yaXRobTogcmVzcG9uc2VQdWJsaWNLZXlBbGdvcml0aG0sXG4gICAgICAgICAgICBwdWJsaWNLZXk6IHJlc3BvbnNlUHVibGljS2V5LFxuICAgICAgICAgICAgYXV0aGVudGljYXRvckRhdGE6IHJlc3BvbnNlQXV0aGVudGljYXRvckRhdGEsXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGUsXG4gICAgICAgIGNsaWVudEV4dGVuc2lvblJlc3VsdHM6IGNyZWRlbnRpYWwuZ2V0Q2xpZW50RXh0ZW5zaW9uUmVzdWx0cygpLFxuICAgICAgICBhdXRoZW50aWNhdG9yQXR0YWNobWVudDogdG9BdXRoZW50aWNhdG9yQXR0YWNobWVudChjcmVkZW50aWFsLmF1dGhlbnRpY2F0b3JBdHRhY2htZW50KSxcbiAgICB9O1xufVxuZnVuY3Rpb24gd2Fybk9uQnJva2VuSW1wbGVtZW50YXRpb24obWV0aG9kTmFtZSwgY2F1c2UpIHtcbiAgICBjb25zb2xlLndhcm4oYFRoZSBicm93c2VyIGV4dGVuc2lvbiB0aGF0IGludGVyY2VwdGVkIHRoaXMgV2ViQXV0aG4gQVBJIGNhbGwgaW5jb3JyZWN0bHkgaW1wbGVtZW50ZWQgJHttZXRob2ROYW1lfS4gWW91IHNob3VsZCByZXBvcnQgdGhpcyBlcnJvciB0byB0aGVtLlxcbmAsIGNhdXNlKTtcbn1cblxuZnVuY3Rpb24gYnJvd3NlclN1cHBvcnRzV2ViQXV0aG5BdXRvZmlsbCgpIHtcbiAgICBpZiAoIWJyb3dzZXJTdXBwb3J0c1dlYkF1dGhuKCkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXNvbHZlKGZhbHNlKSk7XG4gICAgfVxuICAgIGNvbnN0IGdsb2JhbFB1YmxpY0tleUNyZWRlbnRpYWwgPSB3aW5kb3dcbiAgICAgICAgLlB1YmxpY0tleUNyZWRlbnRpYWw7XG4gICAgaWYgKGdsb2JhbFB1YmxpY0tleUNyZWRlbnRpYWwuaXNDb25kaXRpb25hbE1lZGlhdGlvbkF2YWlsYWJsZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gcmVzb2x2ZShmYWxzZSkpO1xuICAgIH1cbiAgICByZXR1cm4gZ2xvYmFsUHVibGljS2V5Q3JlZGVudGlhbC5pc0NvbmRpdGlvbmFsTWVkaWF0aW9uQXZhaWxhYmxlKCk7XG59XG5cbmZ1bmN0aW9uIGlkZW50aWZ5QXV0aGVudGljYXRpb25FcnJvcih7IGVycm9yLCBvcHRpb25zLCB9KSB7XG4gICAgY29uc3QgeyBwdWJsaWNLZXkgfSA9IG9wdGlvbnM7XG4gICAgaWYgKCFwdWJsaWNLZXkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ29wdGlvbnMgd2FzIG1pc3NpbmcgcmVxdWlyZWQgcHVibGljS2V5IHByb3BlcnR5Jyk7XG4gICAgfVxuICAgIGlmIChlcnJvci5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMuc2lnbmFsIGluc3RhbmNlb2YgQWJvcnRTaWduYWwpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0F1dGhlbnRpY2F0aW9uIGNlcmVtb255IHdhcyBzZW50IGFuIGFib3J0IHNpZ25hbCcsXG4gICAgICAgICAgICAgICAgY29kZTogJ0VSUk9SX0NFUkVNT05ZX0FCT1JURUQnLFxuICAgICAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGVycm9yLm5hbWUgPT09ICdOb3RBbGxvd2VkRXJyb3InKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgICAgY29kZTogJ0VSUk9SX1BBU1NUSFJPVUdIX1NFRV9DQVVTRV9QUk9QRVJUWScsXG4gICAgICAgICAgICBjYXVzZTogZXJyb3IsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChlcnJvci5uYW1lID09PSAnU2VjdXJpdHlFcnJvcicpIHtcbiAgICAgICAgY29uc3QgZWZmZWN0aXZlRG9tYWluID0gd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lO1xuICAgICAgICBpZiAoIWlzVmFsaWREb21haW4oZWZmZWN0aXZlRG9tYWluKSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBXZWJBdXRobkVycm9yKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBgJHt3aW5kb3cubG9jYXRpb24uaG9zdG5hbWV9IGlzIGFuIGludmFsaWQgZG9tYWluYCxcbiAgICAgICAgICAgICAgICBjb2RlOiAnRVJST1JfSU5WQUxJRF9ET01BSU4nLFxuICAgICAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHB1YmxpY0tleS5ycElkICE9PSBlZmZlY3RpdmVEb21haW4pIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgV2ViQXV0aG5FcnJvcih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogYFRoZSBSUCBJRCBcIiR7cHVibGljS2V5LnJwSWR9XCIgaXMgaW52YWxpZCBmb3IgdGhpcyBkb21haW5gLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdFUlJPUl9JTlZBTElEX1JQX0lEJyxcbiAgICAgICAgICAgICAgICBjYXVzZTogZXJyb3IsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChlcnJvci5uYW1lID09PSAnVW5rbm93bkVycm9yJykge1xuICAgICAgICByZXR1cm4gbmV3IFdlYkF1dGhuRXJyb3Ioe1xuICAgICAgICAgICAgbWVzc2FnZTogJ1RoZSBhdXRoZW50aWNhdG9yIHdhcyB1bmFibGUgdG8gcHJvY2VzcyB0aGUgc3BlY2lmaWVkIG9wdGlvbnMsIG9yIGNvdWxkIG5vdCBjcmVhdGUgYSBuZXcgYXNzZXJ0aW9uIHNpZ25hdHVyZScsXG4gICAgICAgICAgICBjb2RlOiAnRVJST1JfQVVUSEVOVElDQVRPUl9HRU5FUkFMX0VSUk9SJyxcbiAgICAgICAgICAgIGNhdXNlOiBlcnJvcixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3RhcnRBdXRoZW50aWNhdGlvbihvcHRpb25zSlNPTiwgdXNlQnJvd3NlckF1dG9maWxsID0gZmFsc2UpIHtcbiAgICBpZiAoIWJyb3dzZXJTdXBwb3J0c1dlYkF1dGhuKCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJBdXRobiBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlcicpO1xuICAgIH1cbiAgICBsZXQgYWxsb3dDcmVkZW50aWFscztcbiAgICBpZiAob3B0aW9uc0pTT04uYWxsb3dDcmVkZW50aWFscz8ubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIGFsbG93Q3JlZGVudGlhbHMgPSBvcHRpb25zSlNPTi5hbGxvd0NyZWRlbnRpYWxzPy5tYXAodG9QdWJsaWNLZXlDcmVkZW50aWFsRGVzY3JpcHRvcik7XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IHtcbiAgICAgICAgLi4ub3B0aW9uc0pTT04sXG4gICAgICAgIGNoYWxsZW5nZTogYmFzZTY0VVJMU3RyaW5nVG9CdWZmZXIob3B0aW9uc0pTT04uY2hhbGxlbmdlKSxcbiAgICAgICAgYWxsb3dDcmVkZW50aWFscyxcbiAgICB9O1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7fTtcbiAgICBpZiAodXNlQnJvd3NlckF1dG9maWxsKSB7XG4gICAgICAgIGlmICghKGF3YWl0IGJyb3dzZXJTdXBwb3J0c1dlYkF1dGhuQXV0b2ZpbGwoKSkpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdCcm93c2VyIGRvZXMgbm90IHN1cHBvcnQgV2ViQXV0aG4gYXV0b2ZpbGwnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbGlnaWJsZUlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFthdXRvY29tcGxldGUkPSd3ZWJhdXRobiddXCIpO1xuICAgICAgICBpZiAoZWxpZ2libGVJbnB1dHMubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ05vIDxpbnB1dD4gd2l0aCBcIndlYmF1dGhuXCIgYXMgdGhlIG9ubHkgb3IgbGFzdCB2YWx1ZSBpbiBpdHMgYGF1dG9jb21wbGV0ZWAgYXR0cmlidXRlIHdhcyBkZXRlY3RlZCcpO1xuICAgICAgICB9XG4gICAgICAgIG9wdGlvbnMubWVkaWF0aW9uID0gJ2NvbmRpdGlvbmFsJztcbiAgICAgICAgcHVibGljS2V5LmFsbG93Q3JlZGVudGlhbHMgPSBbXTtcbiAgICB9XG4gICAgb3B0aW9ucy5wdWJsaWNLZXkgPSBwdWJsaWNLZXk7XG4gICAgb3B0aW9ucy5zaWduYWwgPSBXZWJBdXRobkFib3J0U2VydmljZS5jcmVhdGVOZXdBYm9ydFNpZ25hbCgpO1xuICAgIGxldCBjcmVkZW50aWFsO1xuICAgIHRyeSB7XG4gICAgICAgIGNyZWRlbnRpYWwgPSAoYXdhaXQgbmF2aWdhdG9yLmNyZWRlbnRpYWxzLmdldChvcHRpb25zKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgdGhyb3cgaWRlbnRpZnlBdXRoZW50aWNhdGlvbkVycm9yKHsgZXJyb3I6IGVyciwgb3B0aW9ucyB9KTtcbiAgICB9XG4gICAgaWYgKCFjcmVkZW50aWFsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQXV0aGVudGljYXRpb24gd2FzIG5vdCBjb21wbGV0ZWQnKTtcbiAgICB9XG4gICAgY29uc3QgeyBpZCwgcmF3SWQsIHJlc3BvbnNlLCB0eXBlIH0gPSBjcmVkZW50aWFsO1xuICAgIGxldCB1c2VySGFuZGxlID0gdW5kZWZpbmVkO1xuICAgIGlmIChyZXNwb25zZS51c2VySGFuZGxlKSB7XG4gICAgICAgIHVzZXJIYW5kbGUgPSBidWZmZXJUb0Jhc2U2NFVSTFN0cmluZyhyZXNwb25zZS51c2VySGFuZGxlKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQsXG4gICAgICAgIHJhd0lkOiBidWZmZXJUb0Jhc2U2NFVSTFN0cmluZyhyYXdJZCksXG4gICAgICAgIHJlc3BvbnNlOiB7XG4gICAgICAgICAgICBhdXRoZW50aWNhdG9yRGF0YTogYnVmZmVyVG9CYXNlNjRVUkxTdHJpbmcocmVzcG9uc2UuYXV0aGVudGljYXRvckRhdGEpLFxuICAgICAgICAgICAgY2xpZW50RGF0YUpTT046IGJ1ZmZlclRvQmFzZTY0VVJMU3RyaW5nKHJlc3BvbnNlLmNsaWVudERhdGFKU09OKSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogYnVmZmVyVG9CYXNlNjRVUkxTdHJpbmcocmVzcG9uc2Uuc2lnbmF0dXJlKSxcbiAgICAgICAgICAgIHVzZXJIYW5kbGUsXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGUsXG4gICAgICAgIGNsaWVudEV4dGVuc2lvblJlc3VsdHM6IGNyZWRlbnRpYWwuZ2V0Q2xpZW50RXh0ZW5zaW9uUmVzdWx0cygpLFxuICAgICAgICBhdXRoZW50aWNhdG9yQXR0YWNobWVudDogdG9BdXRoZW50aWNhdG9yQXR0YWNobWVudChjcmVkZW50aWFsLmF1dGhlbnRpY2F0b3JBdHRhY2htZW50KSxcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBwbGF0Zm9ybUF1dGhlbnRpY2F0b3JJc0F2YWlsYWJsZSgpIHtcbiAgICBpZiAoIWJyb3dzZXJTdXBwb3J0c1dlYkF1dGhuKCkpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiByZXNvbHZlKGZhbHNlKSk7XG4gICAgfVxuICAgIHJldHVybiBQdWJsaWNLZXlDcmVkZW50aWFsLmlzVXNlclZlcmlmeWluZ1BsYXRmb3JtQXV0aGVudGljYXRvckF2YWlsYWJsZSgpO1xufVxuXG5leHBvcnQgeyBXZWJBdXRobkFib3J0U2VydmljZSwgV2ViQXV0aG5FcnJvciwgYmFzZTY0VVJMU3RyaW5nVG9CdWZmZXIsIGJyb3dzZXJTdXBwb3J0c1dlYkF1dGhuLCBicm93c2VyU3VwcG9ydHNXZWJBdXRobkF1dG9maWxsLCBidWZmZXJUb0Jhc2U2NFVSTFN0cmluZywgcGxhdGZvcm1BdXRoZW50aWNhdG9ySXNBdmFpbGFibGUsIHN0YXJ0QXV0aGVudGljYXRpb24sIHN0YXJ0UmVnaXN0cmF0aW9uIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAuthenticationOptions: () => (/* binding */ generateAuthenticationOptions)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n\n\n/**\n * Prepare a value to pass into navigator.credentials.get(...) for authenticator authentication\n *\n * **Options:**\n *\n * @param rpID - Valid domain name (after `https://`)\n * @param allowCredentials **(Optional)** - Authenticators previously registered by the user, if any. If undefined the client will ask the user which credential they want to use\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back user for authentication. Defaults to generating a random value\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete authentication. Defaults to `60000`\n * @param userVerification **(Optional)** - Set to `'discouraged'` when asserting as part of a 2FA flow, otherwise set to `'preferred'` or `'required'` as desired. Defaults to `\"preferred\"`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during authentication\n */\nasync function generateAuthenticationOptions(options) {\n    const { allowCredentials, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__.generateChallenge)(), timeout = 60000, userVerification = 'preferred', extensions, rpID, } = options;\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        rpId: rpID,\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(_challenge),\n        allowCredentials: allowCredentials?.map((cred) => {\n            if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`excludeCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        timeout,\n        userVerification,\n        extensions,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vYXV0aGVudGljYXRpb24vZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNFO0FBQ0Y7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLG9DQUFvQyxnRkFBaUIseUVBQXlFO0FBQzFJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsK0VBQTRCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwwRUFBdUI7QUFDMUM7QUFDQSxpQkFBaUIsMkVBQXdCO0FBQ3pDLHlEQUF5RCxRQUFRO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyRUFBd0I7QUFDNUM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2F1dGhlbnRpY2F0aW9uL2dlbmVyYXRlQXV0aGVudGljYXRpb25PcHRpb25zLmpzPzcwYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQmFzZTY0VVJMLCBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVDaGFsbGVuZ2UgfSBmcm9tICcuLi9oZWxwZXJzL2dlbmVyYXRlQ2hhbGxlbmdlLmpzJztcbi8qKlxuICogUHJlcGFyZSBhIHZhbHVlIHRvIHBhc3MgaW50byBuYXZpZ2F0b3IuY3JlZGVudGlhbHMuZ2V0KC4uLikgZm9yIGF1dGhlbnRpY2F0b3IgYXV0aGVudGljYXRpb25cbiAqXG4gKiAqKk9wdGlvbnM6KipcbiAqXG4gKiBAcGFyYW0gcnBJRCAtIFZhbGlkIGRvbWFpbiBuYW1lIChhZnRlciBgaHR0cHM6Ly9gKVxuICogQHBhcmFtIGFsbG93Q3JlZGVudGlhbHMgKiooT3B0aW9uYWwpKiogLSBBdXRoZW50aWNhdG9ycyBwcmV2aW91c2x5IHJlZ2lzdGVyZWQgYnkgdGhlIHVzZXIsIGlmIGFueS4gSWYgdW5kZWZpbmVkIHRoZSBjbGllbnQgd2lsbCBhc2sgdGhlIHVzZXIgd2hpY2ggY3JlZGVudGlhbCB0aGV5IHdhbnQgdG8gdXNlXG4gKiBAcGFyYW0gY2hhbGxlbmdlICoqKE9wdGlvbmFsKSoqIC0gUmFuZG9tIHZhbHVlIHRoZSBhdXRoZW50aWNhdG9yIG5lZWRzIHRvIHNpZ24gYW5kIHBhc3MgYmFjayB1c2VyIGZvciBhdXRoZW50aWNhdGlvbi4gRGVmYXVsdHMgdG8gZ2VuZXJhdGluZyBhIHJhbmRvbSB2YWx1ZVxuICogQHBhcmFtIHRpbWVvdXQgKiooT3B0aW9uYWwpKiogLSBIb3cgbG9uZyAoaW4gbXMpIHRoZSB1c2VyIGNhbiB0YWtlIHRvIGNvbXBsZXRlIGF1dGhlbnRpY2F0aW9uLiBEZWZhdWx0cyB0byBgNjAwMDBgXG4gKiBAcGFyYW0gdXNlclZlcmlmaWNhdGlvbiAqKihPcHRpb25hbCkqKiAtIFNldCB0byBgJ2Rpc2NvdXJhZ2VkJ2Agd2hlbiBhc3NlcnRpbmcgYXMgcGFydCBvZiBhIDJGQSBmbG93LCBvdGhlcndpc2Ugc2V0IHRvIGAncHJlZmVycmVkJ2Agb3IgYCdyZXF1aXJlZCdgIGFzIGRlc2lyZWQuIERlZmF1bHRzIHRvIGBcInByZWZlcnJlZFwiYFxuICogQHBhcmFtIGV4dGVuc2lvbnMgKiooT3B0aW9uYWwpKiogLSBBZGRpdGlvbmFsIHBsdWdpbnMgdGhlIGF1dGhlbnRpY2F0b3Igb3IgYnJvd3NlciBzaG91bGQgdXNlIGR1cmluZyBhdXRoZW50aWNhdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYWxsb3dDcmVkZW50aWFscywgY2hhbGxlbmdlID0gYXdhaXQgZ2VuZXJhdGVDaGFsbGVuZ2UoKSwgdGltZW91dCA9IDYwMDAwLCB1c2VyVmVyaWZpY2F0aW9uID0gJ3ByZWZlcnJlZCcsIGV4dGVuc2lvbnMsIHJwSUQsIH0gPSBvcHRpb25zO1xuICAgIC8qKlxuICAgICAqIFByZXNlcnZlIGFiaWxpdHkgdG8gc3BlY2lmeSBgc3RyaW5nYCB2YWx1ZXMgZm9yIGNoYWxsZW5nZXNcbiAgICAgKi9cbiAgICBsZXQgX2NoYWxsZW5nZSA9IGNoYWxsZW5nZTtcbiAgICBpZiAodHlwZW9mIF9jaGFsbGVuZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIF9jaGFsbGVuZ2UgPSBpc29VaW50OEFycmF5LmZyb21VVEY4U3RyaW5nKF9jaGFsbGVuZ2UpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBycElkOiBycElELFxuICAgICAgICBjaGFsbGVuZ2U6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKF9jaGFsbGVuZ2UpLFxuICAgICAgICBhbGxvd0NyZWRlbnRpYWxzOiBhbGxvd0NyZWRlbnRpYWxzPy5tYXAoKGNyZWQpID0+IHtcbiAgICAgICAgICAgIGlmICghaXNvQmFzZTY0VVJMLmlzQmFzZTY0VVJMKGNyZWQuaWQpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBleGNsdWRlQ3JlZGVudGlhbCBpZCBcIiR7Y3JlZC5pZH1cIiBpcyBub3QgYSB2YWxpZCBiYXNlNjR1cmwgc3RyaW5nYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLmNyZWQsXG4gICAgICAgICAgICAgICAgaWQ6IGlzb0Jhc2U2NFVSTC50cmltUGFkZGluZyhjcmVkLmlkKSxcbiAgICAgICAgICAgICAgICB0eXBlOiAncHVibGljLWtleScsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KSxcbiAgICAgICAgdGltZW91dCxcbiAgICAgICAgdXNlclZlcmlmaWNhdGlvbixcbiAgICAgICAgZXh0ZW5zaW9ucyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuthenticationResponse: () => (/* binding */ verifyAuthenticationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the authentication process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAssertion()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateAuthenticationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param authenticator - An internal {@link AuthenticatorDevice} matching the credential's ID\n * @param expectedType **(Optional)** - The response type expected ('webauthn.get')\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param advancedFIDOConfig **(Optional)** - Options for satisfying more stringent FIDO RP feature requirements\n * @param advancedFIDOConfig.userVerification **(Optional)** - Enable alternative rules for evaluating the User Presence and User Verified flags in authenticator data: UV (and UP) flags are optional unless this value is `\"required\"`\n */\nasync function verifyAuthenticationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, authenticator, requireUserVerification = true, advancedFIDOConfig, } = options;\n    const { id, rawId, type: credentialType, response: assertionResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    if (!response) {\n        throw new Error('Credential missing response');\n    }\n    if (typeof assertionResponse?.clientDataJSON !== 'string') {\n        throw new Error('Credential response clientDataJSON was not a string');\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__.decodeClientDataJSON)(assertionResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an authentication\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected authentication response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected authentication response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.get') {\n        throw new Error(`Unexpected authentication response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected authentication response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            const joinedExpectedOrigin = expectedOrigin.join(', ');\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected one of: ${joinedExpectedOrigin}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64URL(assertionResponse.authenticatorData)) {\n        throw new Error('Credential response authenticatorData was not a base64url string');\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64URL(assertionResponse.signature)) {\n        throw new Error('Credential response signature was not a base64url string');\n    }\n    if (assertionResponse.userHandle &&\n        typeof assertionResponse.userHandle !== 'string') {\n        throw new Error('Credential response userHandle was not a string');\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error('ClientDataJSON tokenBinding was not an object');\n        }\n        if (['present', 'supported', 'notSupported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding status ${tokenBinding.status}`);\n        }\n    }\n    const authDataBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.authenticatorData);\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__.parseAuthenticatorData)(authDataBuffer);\n    const { rpIdHash, flags, counter, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let expectedRPIDs = [];\n    if (typeof expectedRPID === 'string') {\n        expectedRPIDs = [expectedRPID];\n    }\n    else {\n        expectedRPIDs = expectedRPID;\n    }\n    const matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    if (advancedFIDOConfig !== undefined) {\n        const { userVerification: fidoUserVerification } = advancedFIDOConfig;\n        /**\n         * Use FIDO Conformance-defined rules for verifying UP and UV flags\n         */\n        if (fidoUserVerification === 'required') {\n            // Require `flags.uv` be true (implies `flags.up` is true)\n            if (!flags.uv) {\n                throw new Error('User verification required, but user could not be verified');\n            }\n        }\n        else if (fidoUserVerification === 'preferred' ||\n            fidoUserVerification === 'discouraged') {\n            // Ignore `flags.uv`\n        }\n    }\n    else {\n        /**\n         * Use WebAuthn spec-defined rules for verifying UP and UV flags\n         */\n        // WebAuthn only requires the user presence flag be true\n        if (!flags.up) {\n            throw new Error('User not present during authentication');\n        }\n        // Enforce user verification if required\n        if (requireUserVerification && !flags.uv) {\n            throw new Error('User verification required, but user could not be verified');\n        }\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.clientDataJSON));\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([authDataBuffer, clientDataHash]);\n    const signature = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.signature);\n    if ((counter > 0 || authenticator.counter > 0) &&\n        counter <= authenticator.counter) {\n        // Error out when the counter in the DB is greater than or equal to the counter in the\n        // dataStruct. It's related to how the authenticator maintains the number of times its been\n        // used for this client. If this happens, then someone's somehow increased the counter\n        // on the device without going through this site\n        throw new Error(`Response counter value ${counter} was lower than expected ${authenticator.counter}`);\n    }\n    const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__.parseBackupFlags)(flags);\n    const toReturn = {\n        verified: await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            signature,\n            data: signatureBase,\n            credentialPublicKey: authenticator.credentialPublicKey,\n        }),\n        authenticationInfo: {\n            newCounter: counter,\n            credentialID: authenticator.credentialID,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            authenticatorExtensionResults: extensionsData,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n        },\n    };\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js":
/*!*********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/deps.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsnParser: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnParser),\n/* harmony export */   AsnSerializer: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnSerializer),\n/* harmony export */   AuthorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.AuthorityKeyIdentifier),\n/* harmony export */   BasicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.BasicConstraints),\n/* harmony export */   CRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CRLDistributionPoints),\n/* harmony export */   Certificate: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Certificate),\n/* harmony export */   CertificateList: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CertificateList),\n/* harmony export */   ECDSASigValue: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECDSASigValue),\n/* harmony export */   ECParameters: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECParameters),\n/* harmony export */   ExtendedKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.ExtendedKeyUsage),\n/* harmony export */   KeyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.KeyDescription),\n/* harmony export */   Name: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Name),\n/* harmony export */   RSAPublicKey: () => (/* reexport safe */ _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__.RSAPublicKey),\n/* harmony export */   SubjectAlternativeName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectAlternativeName),\n/* harmony export */   SubjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectKeyIdentifier),\n/* harmony export */   base64: () => (/* reexport safe */ _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   crossFetch: () => (/* reexport safe */ cross_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch),\n/* harmony export */   id_ce_authorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_authorityKeyIdentifier),\n/* harmony export */   id_ce_basicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_basicConstraints),\n/* harmony export */   id_ce_cRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_cRLDistributionPoints),\n/* harmony export */   id_ce_extKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_extKeyUsage),\n/* harmony export */   id_ce_keyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.id_ce_keyDescription),\n/* harmony export */   id_ce_subjectAltName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectAltName),\n/* harmony export */   id_ce_subjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectKeyIdentifier),\n/* harmony export */   id_ecPublicKey: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_ecPublicKey),\n/* harmony export */   id_secp256r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp256r1),\n/* harmony export */   id_secp384r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp384r1),\n/* harmony export */   tinyCbor: () => (/* reexport module object */ _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @levischuck/tiny-cbor */ \"(rsc)/./node_modules/@levischuck/tiny-cbor/esm/index.js\");\n/* harmony import */ var _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hexagon/base64 */ \"(rsc)/./node_modules/@hexagon/base64/src/base64.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @peculiar/asn1-schema */ \"(rsc)/./node_modules/@peculiar/asn1-schema/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @peculiar/asn1-x509 */ \"(rsc)/./node_modules/@peculiar/asn1-x509/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @peculiar/asn1-ecc */ \"(rsc)/./node_modules/@peculiar/asn1-ecc/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @peculiar/asn1-rsa */ \"(rsc)/./node_modules/@peculiar/asn1-rsa/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @peculiar/asn1-android */ \"(rsc)/./node_modules/@peculiar/asn1-android/build/es2015/index.js\");\n// tiny_cbor (a.k.a. tiny-cbor in Node land)\n\n// b64 (a.k.a. @hexagon/base64 in Node land)\n\n// cross-fetch\n\n// @peculiar libraries\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vZGVwcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNrRDtBQUNsRDtBQUNvRDtBQUNwRDtBQUNrRDtBQUNsRDtBQUNpRTtBQUNrUztBQUNyUDtBQUM1RDtBQUM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9kZXBzLmpzP2Y4YTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGlueV9jYm9yIChhLmsuYS4gdGlueS1jYm9yIGluIE5vZGUgbGFuZClcbmV4cG9ydCAqIGFzIHRpbnlDYm9yIGZyb20gJ0BsZXZpc2NodWNrL3RpbnktY2Jvcic7XG4vLyBiNjQgKGEuay5hLiBAaGV4YWdvbi9iYXNlNjQgaW4gTm9kZSBsYW5kKVxuZXhwb3J0IHsgZGVmYXVsdCBhcyBiYXNlNjQgfSBmcm9tICdAaGV4YWdvbi9iYXNlNjQnO1xuLy8gY3Jvc3MtZmV0Y2hcbmV4cG9ydCB7IGZldGNoIGFzIGNyb3NzRmV0Y2ggfSBmcm9tICdjcm9zcy1mZXRjaCc7XG4vLyBAcGVjdWxpYXIgbGlicmFyaWVzXG5leHBvcnQgeyBBc25QYXJzZXIsIEFzblNlcmlhbGl6ZXIgfSBmcm9tICdAcGVjdWxpYXIvYXNuMS1zY2hlbWEnO1xuZXhwb3J0IHsgQXV0aG9yaXR5S2V5SWRlbnRpZmllciwgQmFzaWNDb25zdHJhaW50cywgQ2VydGlmaWNhdGUsIENlcnRpZmljYXRlTGlzdCwgQ1JMRGlzdHJpYnV0aW9uUG9pbnRzLCBFeHRlbmRlZEtleVVzYWdlLCBpZF9jZV9hdXRob3JpdHlLZXlJZGVudGlmaWVyLCBpZF9jZV9iYXNpY0NvbnN0cmFpbnRzLCBpZF9jZV9jUkxEaXN0cmlidXRpb25Qb2ludHMsIGlkX2NlX2V4dEtleVVzYWdlLCBpZF9jZV9zdWJqZWN0QWx0TmFtZSwgaWRfY2Vfc3ViamVjdEtleUlkZW50aWZpZXIsIE5hbWUsIFN1YmplY3RBbHRlcm5hdGl2ZU5hbWUsIFN1YmplY3RLZXlJZGVudGlmaWVyLCB9IGZyb20gJ0BwZWN1bGlhci9hc24xLXg1MDknO1xuZXhwb3J0IHsgRUNEU0FTaWdWYWx1ZSwgRUNQYXJhbWV0ZXJzLCBpZF9lY1B1YmxpY0tleSwgaWRfc2VjcDI1NnIxLCBpZF9zZWNwMzg0cjEsIH0gZnJvbSAnQHBlY3VsaWFyL2FzbjEtZWNjJztcbmV4cG9ydCB7IFJTQVB1YmxpY0tleSB9IGZyb20gJ0BwZWN1bGlhci9hc24xLXJzYSc7XG5leHBvcnQgeyBpZF9jZV9rZXlEZXNjcmlwdGlvbiwgS2V5RGVzY3JpcHRpb24gfSBmcm9tICdAcGVjdWxpYXIvYXNuMS1hbmRyb2lkJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* binding */ convertAAGUIDToString)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nfunction convertAAGUIDToString(aaguid) {\n    // Raw Hex: adce000235bcc60a648b0b25f1f05503\n    const hex = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.toHex(aaguid);\n    const segments = [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32), // 8\n    ];\n    // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n    return segments.join('-');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0QUFHVUlEVG9TdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQiw4REFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0QUFHVUlEVG9TdHJpbmcuanM/OTZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBDb252ZXJ0IHRoZSBhYWd1aWQgYnVmZmVyIGluIGF1dGhEYXRhIGludG8gYSBVVUlEIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEFBR1VJRFRvU3RyaW5nKGFhZ3VpZCkge1xuICAgIC8vIFJhdyBIZXg6IGFkY2UwMDAyMzViY2M2MGE2NDhiMGIyNWYxZjA1NTAzXG4gICAgY29uc3QgaGV4ID0gaXNvVWludDhBcnJheS50b0hleChhYWd1aWQpO1xuICAgIGNvbnN0IHNlZ21lbnRzID0gW1xuICAgICAgICBoZXguc2xpY2UoMCwgOCksXG4gICAgICAgIGhleC5zbGljZSg4LCAxMiksXG4gICAgICAgIGhleC5zbGljZSgxMiwgMTYpLFxuICAgICAgICBoZXguc2xpY2UoMTYsIDIwKSxcbiAgICAgICAgaGV4LnNsaWNlKDIwLCAzMiksIC8vIDhcbiAgICBdO1xuICAgIC8vIEZvcm1hdHRlZDogYWRjZTAwMDItMzViYy1jNjBhLTY0OGItMGIyNWYxZjA1NTAzXG4gICAgcmV0dXJuIHNlZ21lbnRzLmpvaW4oJy0nKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCOSEtoPKCS: () => (/* binding */ convertCOSEtoPKCS)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n/**\n * Takes COSE-encoded public key and converts it to PKCS key\n */\nfunction convertCOSEtoPKCS(cosePublicKey) {\n    // This is a little sloppy, I'm using COSEPublicKeyEC2 since it could have both x and y, but when\n    // there's no y it means it's probably better typed as COSEPublicKeyOKP. I'll leave this for now\n    // and revisit it later if it ever becomes an actual problem.\n    const struct = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(cosePublicKey);\n    const tag = Uint8Array.from([0x04]);\n    const x = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x);\n    const y = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y);\n    if (!x) {\n        throw new Error('COSE public key was missing x');\n    }\n    if (y) {\n        return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([tag, x, y]);\n    }\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([tag, x]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDbkI7QUFDckM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOERBQW1CO0FBQ3RDO0FBQ0EseUJBQXlCLDhDQUFRO0FBQ2pDLHlCQUF5Qiw4Q0FBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQW9CO0FBQ25DO0FBQ0EsV0FBVywrREFBb0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcz9kZTBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IsIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBDT1NFS0VZUyB9IGZyb20gJy4vY29zZS5qcyc7XG4vKipcbiAqIFRha2VzIENPU0UtZW5jb2RlZCBwdWJsaWMga2V5IGFuZCBjb252ZXJ0cyBpdCB0byBQS0NTIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydENPU0V0b1BLQ1MoY29zZVB1YmxpY0tleSkge1xuICAgIC8vIFRoaXMgaXMgYSBsaXR0bGUgc2xvcHB5LCBJJ20gdXNpbmcgQ09TRVB1YmxpY0tleUVDMiBzaW5jZSBpdCBjb3VsZCBoYXZlIGJvdGggeCBhbmQgeSwgYnV0IHdoZW5cbiAgICAvLyB0aGVyZSdzIG5vIHkgaXQgbWVhbnMgaXQncyBwcm9iYWJseSBiZXR0ZXIgdHlwZWQgYXMgQ09TRVB1YmxpY0tleU9LUC4gSSdsbCBsZWF2ZSB0aGlzIGZvciBub3dcbiAgICAvLyBhbmQgcmV2aXNpdCBpdCBsYXRlciBpZiBpdCBldmVyIGJlY29tZXMgYW4gYWN0dWFsIHByb2JsZW0uXG4gICAgY29uc3Qgc3RydWN0ID0gaXNvQ0JPUi5kZWNvZGVGaXJzdChjb3NlUHVibGljS2V5KTtcbiAgICBjb25zdCB0YWcgPSBVaW50OEFycmF5LmZyb20oWzB4MDRdKTtcbiAgICBjb25zdCB4ID0gc3RydWN0LmdldChDT1NFS0VZUy54KTtcbiAgICBjb25zdCB5ID0gc3RydWN0LmdldChDT1NFS0VZUy55KTtcbiAgICBpZiAoIXgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDT1NFIHB1YmxpYyBrZXkgd2FzIG1pc3NpbmcgeCcpO1xuICAgIH1cbiAgICBpZiAoeSkge1xuICAgICAgICByZXR1cm4gaXNvVWludDhBcnJheS5jb25jYXQoW3RhZywgeCwgeV0pO1xuICAgIH1cbiAgICByZXR1cm4gaXNvVWludDhBcnJheS5jb25jYXQoW3RhZywgeF0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCertBufferToPEM: () => (/* binding */ convertCertBufferToPEM)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert buffer to an OpenSSL-compatible PEM text format.\n */\nfunction convertCertBufferToPEM(certBuffer) {\n    let b64cert;\n    /**\n     * Get certBuffer to a base64 representation\n     */\n    if (typeof certBuffer === 'string') {\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64URL(certBuffer)) {\n            b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBase64(certBuffer);\n        }\n        else if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64(certBuffer)) {\n            b64cert = certBuffer;\n        }\n        else {\n            throw new Error('Certificate is not a valid base64 or base64url string');\n        }\n    }\n    else {\n        b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(certBuffer, 'base64');\n    }\n    let PEMKey = '';\n    for (let i = 0; i < Math.ceil(b64cert.length / 64); i += 1) {\n        const start = 64 * i;\n        PEMKey += `${b64cert.substr(start, 64)}\\n`;\n    }\n    PEMKey = `-----BEGIN CERTIFICATE-----\\n${PEMKey}-----END CERTIFICATE-----\\n`;\n    return PEMKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUVBQXdCO0FBQ3BDLHNCQUFzQixnRUFBcUI7QUFDM0M7QUFDQSxpQkFBaUIsZ0VBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtFQUF1QjtBQUN6QztBQUNBO0FBQ0Esb0JBQW9CLG9DQUFvQztBQUN4RDtBQUNBLHFCQUFxQiwwQkFBMEI7QUFDL0M7QUFDQSw2Q0FBNkMsT0FBTztBQUNwRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcz80NWIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogQ29udmVydCBidWZmZXIgdG8gYW4gT3BlblNTTC1jb21wYXRpYmxlIFBFTSB0ZXh0IGZvcm1hdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0oY2VydEJ1ZmZlcikge1xuICAgIGxldCBiNjRjZXJ0O1xuICAgIC8qKlxuICAgICAqIEdldCBjZXJ0QnVmZmVyIHRvIGEgYmFzZTY0IHJlcHJlc2VudGF0aW9uXG4gICAgICovXG4gICAgaWYgKHR5cGVvZiBjZXJ0QnVmZmVyID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAoaXNvQmFzZTY0VVJMLmlzQmFzZTY0VVJMKGNlcnRCdWZmZXIpKSB7XG4gICAgICAgICAgICBiNjRjZXJ0ID0gaXNvQmFzZTY0VVJMLnRvQmFzZTY0KGNlcnRCdWZmZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzb0Jhc2U2NFVSTC5pc0Jhc2U2NChjZXJ0QnVmZmVyKSkge1xuICAgICAgICAgICAgYjY0Y2VydCA9IGNlcnRCdWZmZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIGlzIG5vdCBhIHZhbGlkIGJhc2U2NCBvciBiYXNlNjR1cmwgc3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGI2NGNlcnQgPSBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihjZXJ0QnVmZmVyLCAnYmFzZTY0Jyk7XG4gICAgfVxuICAgIGxldCBQRU1LZXkgPSAnJztcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE1hdGguY2VpbChiNjRjZXJ0Lmxlbmd0aCAvIDY0KTsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0ID0gNjQgKiBpO1xuICAgICAgICBQRU1LZXkgKz0gYCR7YjY0Y2VydC5zdWJzdHIoc3RhcnQsIDY0KX1cXG5gO1xuICAgIH1cbiAgICBQRU1LZXkgPSBgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXFxuJHtQRU1LZXl9LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxcbmA7XG4gICAgcmV0dXJuIFBFTUtleTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertPEMToBytes: () => (/* binding */ convertPEMToBytes)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Take a certificate in PEM format and convert it to bytes\n */\nfunction convertPEMToBytes(pem) {\n    const certBase64 = pem\n        .replace('-----BEGIN CERTIFICATE-----', '')\n        .replace('-----END CERTIFICATE-----', '')\n        .replace(/[\\n ]/g, '');\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBuffer(certBase64, 'base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0UEVNVG9CeXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBcUI7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0UEVNVG9CeXRlcy5qcz8wZTE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogVGFrZSBhIGNlcnRpZmljYXRlIGluIFBFTSBmb3JtYXQgYW5kIGNvbnZlcnQgaXQgdG8gYnl0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRQRU1Ub0J5dGVzKHBlbSkge1xuICAgIGNvbnN0IGNlcnRCYXNlNjQgPSBwZW1cbiAgICAgICAgLnJlcGxhY2UoJy0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLScsICcnKVxuICAgICAgICAucmVwbGFjZSgnLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLScsICcnKVxuICAgICAgICAucmVwbGFjZSgvW1xcbiBdL2csICcnKTtcbiAgICByZXR1cm4gaXNvQmFzZTY0VVJMLnRvQnVmZmVyKGNlcnRCYXNlNjQsICdiYXNlNjQnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertX509PublicKeyToCOSE: () => (/* binding */ convertX509PublicKeyToCOSE)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n\n\n\nfunction convertX509PublicKeyToCOSE(x509Certificate) {\n    let cosePublicKey = new Map();\n    /**\n     * Time to extract the public key from an X.509 certificate\n     */\n    const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x509Certificate, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { tbsCertificate } = x509;\n    const { subjectPublicKeyInfo, signature: _tbsSignature } = tbsCertificate;\n    const signatureAlgorithm = _tbsSignature.algorithm;\n    const publicKeyAlgorithmID = subjectPublicKeyInfo.algorithm.algorithm;\n    if (publicKeyAlgorithmID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ecPublicKey) {\n        /**\n         * EC2 Public Key\n         */\n        if (!subjectPublicKeyInfo.algorithm.parameters) {\n            throw new Error('Certificate public key was missing parameters (EC2)');\n        }\n        const ecParameters = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(new Uint8Array(subjectPublicKeyInfo.algorithm.parameters), _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECParameters);\n        let crv = -999;\n        const { namedCurve } = ecParameters;\n        if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp256r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P256;\n        }\n        else if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp384r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P384;\n        }\n        else {\n            throw new Error(`Certificate public key contained unexpected namedCurve ${namedCurve} (EC2)`);\n        }\n        const subjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n        let x;\n        let y;\n        if (subjectPublicKey[0] === 0x04) {\n            // Public key is in \"uncompressed form\", so we can split the remaining bytes in half\n            let pointer = 1;\n            const halfLength = (subjectPublicKey.length - 1) / 2;\n            x = subjectPublicKey.slice(pointer, pointer += halfLength);\n            y = subjectPublicKey.slice(pointer);\n        }\n        else {\n            throw new Error('TODO: Figure out how to handle public keys in \"compressed form\"');\n        }\n        const coseEC2PubKey = new Map();\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.EC2);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.crv, crv);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x, x);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y, y);\n        cosePublicKey = coseEC2PubKey;\n    }\n    else if (publicKeyAlgorithmID === '1.2.840.113549.1.1.1') {\n        /**\n         * RSA public key\n         */\n        const rsaPublicKey = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(subjectPublicKeyInfo.subjectPublicKey, _deps_js__WEBPACK_IMPORTED_MODULE_0__.RSAPublicKey);\n        const coseRSAPubKey = new Map();\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.RSA);\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.n, new Uint8Array(rsaPublicKey.modulus));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.e, new Uint8Array(rsaPublicKey.publicExponent));\n        cosePublicKey = coseRSAPubKey;\n    }\n    else {\n        throw new Error(`Certificate public key contained unexpected algorithm ID ${publicKeyAlgorithmID}`);\n    }\n    return cosePublicKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZIO0FBQ3JFO0FBQ3lCO0FBQzFFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0NBQVMsd0JBQXdCLGlEQUFXO0FBQzdELFlBQVksaUJBQWlCO0FBQzdCLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSxpQ0FBaUMsb0RBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLCtDQUFTLGtFQUFrRSxrREFBWTtBQUNwSDtBQUNBLGdCQUFnQixhQUFhO0FBQzdCLDJCQUEyQixrREFBWTtBQUN2QyxrQkFBa0IsNkNBQU87QUFDekI7QUFDQSxnQ0FBZ0Msa0RBQVk7QUFDNUMsa0JBQWtCLDZDQUFPO0FBQ3pCO0FBQ0E7QUFDQSxzRkFBc0YsWUFBWTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOENBQVEsTUFBTSw2Q0FBTztBQUMvQywwQkFBMEIsOENBQVEsTUFBTSw4RkFBNEI7QUFDcEUsMEJBQTBCLDhDQUFRO0FBQ2xDLDBCQUEwQiw4Q0FBUTtBQUNsQywwQkFBMEIsOENBQVE7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLCtDQUFTLDhDQUE4QyxrREFBWTtBQUNoRztBQUNBLDBCQUEwQiw4Q0FBUSxNQUFNLDZDQUFPO0FBQy9DLDBCQUEwQiw4Q0FBUSxNQUFNLDhGQUE0QjtBQUNwRSwwQkFBMEIsOENBQVE7QUFDbEMsMEJBQTBCLDhDQUFRO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixxQkFBcUI7QUFDekc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UuanM/MjcxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc25QYXJzZXIsIENlcnRpZmljYXRlLCBFQ1BhcmFtZXRlcnMsIGlkX2VjUHVibGljS2V5LCBpZF9zZWNwMjU2cjEsIGlkX3NlY3AzODRyMSwgUlNBUHVibGljS2V5LCB9IGZyb20gJy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgQ09TRUNSViwgQ09TRUtFWVMsIENPU0VLVFksIH0gZnJvbSAnLi9jb3NlLmpzJztcbmltcG9ydCB7IG1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcgfSBmcm9tICcuL21hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFKHg1MDlDZXJ0aWZpY2F0ZSkge1xuICAgIGxldCBjb3NlUHVibGljS2V5ID0gbmV3IE1hcCgpO1xuICAgIC8qKlxuICAgICAqIFRpbWUgdG8gZXh0cmFjdCB0aGUgcHVibGljIGtleSBmcm9tIGFuIFguNTA5IGNlcnRpZmljYXRlXG4gICAgICovXG4gICAgY29uc3QgeDUwOSA9IEFzblBhcnNlci5wYXJzZSh4NTA5Q2VydGlmaWNhdGUsIENlcnRpZmljYXRlKTtcbiAgICBjb25zdCB7IHRic0NlcnRpZmljYXRlIH0gPSB4NTA5O1xuICAgIGNvbnN0IHsgc3ViamVjdFB1YmxpY0tleUluZm8sIHNpZ25hdHVyZTogX3Ric1NpZ25hdHVyZSB9ID0gdGJzQ2VydGlmaWNhdGU7XG4gICAgY29uc3Qgc2lnbmF0dXJlQWxnb3JpdGhtID0gX3Ric1NpZ25hdHVyZS5hbGdvcml0aG07XG4gICAgY29uc3QgcHVibGljS2V5QWxnb3JpdGhtSUQgPSBzdWJqZWN0UHVibGljS2V5SW5mby5hbGdvcml0aG0uYWxnb3JpdGhtO1xuICAgIGlmIChwdWJsaWNLZXlBbGdvcml0aG1JRCA9PT0gaWRfZWNQdWJsaWNLZXkpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVDMiBQdWJsaWMgS2V5XG4gICAgICAgICAqL1xuICAgICAgICBpZiAoIXN1YmplY3RQdWJsaWNLZXlJbmZvLmFsZ29yaXRobS5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIHB1YmxpYyBrZXkgd2FzIG1pc3NpbmcgcGFyYW1ldGVycyAoRUMyKScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVjUGFyYW1ldGVycyA9IEFzblBhcnNlci5wYXJzZShuZXcgVWludDhBcnJheShzdWJqZWN0UHVibGljS2V5SW5mby5hbGdvcml0aG0ucGFyYW1ldGVycyksIEVDUGFyYW1ldGVycyk7XG4gICAgICAgIGxldCBjcnYgPSAtOTk5O1xuICAgICAgICBjb25zdCB7IG5hbWVkQ3VydmUgfSA9IGVjUGFyYW1ldGVycztcbiAgICAgICAgaWYgKG5hbWVkQ3VydmUgPT09IGlkX3NlY3AyNTZyMSkge1xuICAgICAgICAgICAgY3J2ID0gQ09TRUNSVi5QMjU2O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5hbWVkQ3VydmUgPT09IGlkX3NlY3AzODRyMSkge1xuICAgICAgICAgICAgY3J2ID0gQ09TRUNSVi5QMzg0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDZXJ0aWZpY2F0ZSBwdWJsaWMga2V5IGNvbnRhaW5lZCB1bmV4cGVjdGVkIG5hbWVkQ3VydmUgJHtuYW1lZEN1cnZlfSAoRUMyKWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN1YmplY3RQdWJsaWNLZXkgPSBuZXcgVWludDhBcnJheShzdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5KTtcbiAgICAgICAgbGV0IHg7XG4gICAgICAgIGxldCB5O1xuICAgICAgICBpZiAoc3ViamVjdFB1YmxpY0tleVswXSA9PT0gMHgwNCkge1xuICAgICAgICAgICAgLy8gUHVibGljIGtleSBpcyBpbiBcInVuY29tcHJlc3NlZCBmb3JtXCIsIHNvIHdlIGNhbiBzcGxpdCB0aGUgcmVtYWluaW5nIGJ5dGVzIGluIGhhbGZcbiAgICAgICAgICAgIGxldCBwb2ludGVyID0gMTtcbiAgICAgICAgICAgIGNvbnN0IGhhbGZMZW5ndGggPSAoc3ViamVjdFB1YmxpY0tleS5sZW5ndGggLSAxKSAvIDI7XG4gICAgICAgICAgICB4ID0gc3ViamVjdFB1YmxpY0tleS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IGhhbGZMZW5ndGgpO1xuICAgICAgICAgICAgeSA9IHN1YmplY3RQdWJsaWNLZXkuc2xpY2UocG9pbnRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RPRE86IEZpZ3VyZSBvdXQgaG93IHRvIGhhbmRsZSBwdWJsaWMga2V5cyBpbiBcImNvbXByZXNzZWQgZm9ybVwiJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29zZUVDMlB1YktleSA9IG5ldyBNYXAoKTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMua3R5LCBDT1NFS1RZLkVDMik7XG4gICAgICAgIGNvc2VFQzJQdWJLZXkuc2V0KENPU0VLRVlTLmFsZywgbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyhzaWduYXR1cmVBbGdvcml0aG0pKTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMuY3J2LCBjcnYpO1xuICAgICAgICBjb3NlRUMyUHViS2V5LnNldChDT1NFS0VZUy54LCB4KTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMueSwgeSk7XG4gICAgICAgIGNvc2VQdWJsaWNLZXkgPSBjb3NlRUMyUHViS2V5O1xuICAgIH1cbiAgICBlbHNlIGlmIChwdWJsaWNLZXlBbGdvcml0aG1JRCA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS4xJykge1xuICAgICAgICAvKipcbiAgICAgICAgICogUlNBIHB1YmxpYyBrZXlcbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IHJzYVB1YmxpY0tleSA9IEFzblBhcnNlci5wYXJzZShzdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5LCBSU0FQdWJsaWNLZXkpO1xuICAgICAgICBjb25zdCBjb3NlUlNBUHViS2V5ID0gbmV3IE1hcCgpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5rdHksIENPU0VLVFkuUlNBKTtcbiAgICAgICAgY29zZVJTQVB1YktleS5zZXQoQ09TRUtFWVMuYWxnLCBtYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnKHNpZ25hdHVyZUFsZ29yaXRobSkpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5uLCBuZXcgVWludDhBcnJheShyc2FQdWJsaWNLZXkubW9kdWx1cykpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5lLCBuZXcgVWludDhBcnJheShyc2FQdWJsaWNLZXkucHVibGljRXhwb25lbnQpKTtcbiAgICAgICAgY29zZVB1YmxpY0tleSA9IGNvc2VSU0FQdWJLZXk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENlcnRpZmljYXRlIHB1YmxpYyBrZXkgY29udGFpbmVkIHVuZXhwZWN0ZWQgYWxnb3JpdGhtIElEICR7cHVibGljS2V5QWxnb3JpdGhtSUR9YCk7XG4gICAgfVxuICAgIHJldHVybiBjb3NlUHVibGljS2V5O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/cose.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COSEALG: () => (/* binding */ COSEALG),\n/* harmony export */   COSECRV: () => (/* binding */ COSECRV),\n/* harmony export */   COSEKEYS: () => (/* binding */ COSEKEYS),\n/* harmony export */   COSEKTY: () => (/* binding */ COSEKTY),\n/* harmony export */   isCOSEAlg: () => (/* binding */ isCOSEAlg),\n/* harmony export */   isCOSECrv: () => (/* binding */ isCOSECrv),\n/* harmony export */   isCOSEKty: () => (/* binding */ isCOSEKty),\n/* harmony export */   isCOSEPublicKeyEC2: () => (/* binding */ isCOSEPublicKeyEC2),\n/* harmony export */   isCOSEPublicKeyOKP: () => (/* binding */ isCOSEPublicKeyOKP),\n/* harmony export */   isCOSEPublicKeyRSA: () => (/* binding */ isCOSEPublicKeyRSA)\n/* harmony export */ });\nfunction isCOSEPublicKeyOKP(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.OKP;\n}\nfunction isCOSEPublicKeyEC2(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.EC2;\n}\nfunction isCOSEPublicKeyRSA(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.RSA;\n}\n/**\n * COSE Keys\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-common-parameters\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type-parameters\n */\nvar COSEKEYS;\n(function (COSEKEYS) {\n    COSEKEYS[COSEKEYS[\"kty\"] = 1] = \"kty\";\n    COSEKEYS[COSEKEYS[\"alg\"] = 3] = \"alg\";\n    COSEKEYS[COSEKEYS[\"crv\"] = -1] = \"crv\";\n    COSEKEYS[COSEKEYS[\"x\"] = -2] = \"x\";\n    COSEKEYS[COSEKEYS[\"y\"] = -3] = \"y\";\n    COSEKEYS[COSEKEYS[\"n\"] = -1] = \"n\";\n    COSEKEYS[COSEKEYS[\"e\"] = -2] = \"e\";\n})(COSEKEYS || (COSEKEYS = {}));\n/**\n * COSE Key Types\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type\n */\nvar COSEKTY;\n(function (COSEKTY) {\n    COSEKTY[COSEKTY[\"OKP\"] = 1] = \"OKP\";\n    COSEKTY[COSEKTY[\"EC2\"] = 2] = \"EC2\";\n    COSEKTY[COSEKTY[\"RSA\"] = 3] = \"RSA\";\n})(COSEKTY || (COSEKTY = {}));\nfunction isCOSEKty(kty) {\n    return Object.values(COSEKTY).indexOf(kty) >= 0;\n}\n/**\n * COSE Curves\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#elliptic-curves\n */\nvar COSECRV;\n(function (COSECRV) {\n    COSECRV[COSECRV[\"P256\"] = 1] = \"P256\";\n    COSECRV[COSECRV[\"P384\"] = 2] = \"P384\";\n    COSECRV[COSECRV[\"P521\"] = 3] = \"P521\";\n    COSECRV[COSECRV[\"ED25519\"] = 6] = \"ED25519\";\n    COSECRV[COSECRV[\"SECP256K1\"] = 8] = \"SECP256K1\";\n})(COSECRV || (COSECRV = {}));\nfunction isCOSECrv(crv) {\n    return Object.values(COSECRV).indexOf(crv) >= 0;\n}\n/**\n * COSE Algorithms\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nvar COSEALG;\n(function (COSEALG) {\n    COSEALG[COSEALG[\"ES256\"] = -7] = \"ES256\";\n    COSEALG[COSEALG[\"EdDSA\"] = -8] = \"EdDSA\";\n    COSEALG[COSEALG[\"ES384\"] = -35] = \"ES384\";\n    COSEALG[COSEALG[\"ES512\"] = -36] = \"ES512\";\n    COSEALG[COSEALG[\"PS256\"] = -37] = \"PS256\";\n    COSEALG[COSEALG[\"PS384\"] = -38] = \"PS384\";\n    COSEALG[COSEALG[\"PS512\"] = -39] = \"PS512\";\n    COSEALG[COSEALG[\"ES256K\"] = -47] = \"ES256K\";\n    COSEALG[COSEALG[\"RS256\"] = -257] = \"RS256\";\n    COSEALG[COSEALG[\"RS384\"] = -258] = \"RS384\";\n    COSEALG[COSEALG[\"RS512\"] = -259] = \"RS512\";\n    COSEALG[COSEALG[\"RS1\"] = -65535] = \"RS1\";\n})(COSEALG || (COSEALG = {}));\nfunction isCOSEAlg(alg) {\n    return Object.values(COSEALG).indexOf(alg) >= 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQ3BCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQ3BCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEI7QUFDcEI7QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29zZS5qcz9hMDhiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0NPU0VQdWJsaWNLZXlPS1AoY29zZVB1YmxpY0tleSkge1xuICAgIGNvbnN0IGt0eSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgcmV0dXJuIGlzQ09TRUt0eShrdHkpICYmIGt0eSA9PT0gQ09TRUtUWS5PS1A7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFUHVibGljS2V5RUMyKGNvc2VQdWJsaWNLZXkpIHtcbiAgICBjb25zdCBrdHkgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5rdHkpO1xuICAgIHJldHVybiBpc0NPU0VLdHkoa3R5KSAmJiBrdHkgPT09IENPU0VLVFkuRUMyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRVB1YmxpY0tleVJTQShjb3NlUHVibGljS2V5KSB7XG4gICAgY29uc3Qga3R5ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMua3R5KTtcbiAgICByZXR1cm4gaXNDT1NFS3R5KGt0eSkgJiYga3R5ID09PSBDT1NFS1RZLlJTQTtcbn1cbi8qKlxuICogQ09TRSBLZXlzXG4gKlxuICogaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvY29zZS9jb3NlLnhodG1sI2tleS1jb21tb24tcGFyYW1ldGVyc1xuICogaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvY29zZS9jb3NlLnhodG1sI2tleS10eXBlLXBhcmFtZXRlcnNcbiAqL1xuZXhwb3J0IHZhciBDT1NFS0VZUztcbihmdW5jdGlvbiAoQ09TRUtFWVMpIHtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcImt0eVwiXSA9IDFdID0gXCJrdHlcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcImFsZ1wiXSA9IDNdID0gXCJhbGdcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcImNydlwiXSA9IC0xXSA9IFwiY3J2XCI7XG4gICAgQ09TRUtFWVNbQ09TRUtFWVNbXCJ4XCJdID0gLTJdID0gXCJ4XCI7XG4gICAgQ09TRUtFWVNbQ09TRUtFWVNbXCJ5XCJdID0gLTNdID0gXCJ5XCI7XG4gICAgQ09TRUtFWVNbQ09TRUtFWVNbXCJuXCJdID0gLTFdID0gXCJuXCI7XG4gICAgQ09TRUtFWVNbQ09TRUtFWVNbXCJlXCJdID0gLTJdID0gXCJlXCI7XG59KShDT1NFS0VZUyB8fCAoQ09TRUtFWVMgPSB7fSkpO1xuLyoqXG4gKiBDT1NFIEtleSBUeXBlc1xuICpcbiAqIGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL2Nvc2UvY29zZS54aHRtbCNrZXktdHlwZVxuICovXG5leHBvcnQgdmFyIENPU0VLVFk7XG4oZnVuY3Rpb24gKENPU0VLVFkpIHtcbiAgICBDT1NFS1RZW0NPU0VLVFlbXCJPS1BcIl0gPSAxXSA9IFwiT0tQXCI7XG4gICAgQ09TRUtUWVtDT1NFS1RZW1wiRUMyXCJdID0gMl0gPSBcIkVDMlwiO1xuICAgIENPU0VLVFlbQ09TRUtUWVtcIlJTQVwiXSA9IDNdID0gXCJSU0FcIjtcbn0pKENPU0VLVFkgfHwgKENPU0VLVFkgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRUt0eShrdHkpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhDT1NFS1RZKS5pbmRleE9mKGt0eSkgPj0gMDtcbn1cbi8qKlxuICogQ09TRSBDdXJ2ZXNcbiAqXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwjZWxsaXB0aWMtY3VydmVzXG4gKi9cbmV4cG9ydCB2YXIgQ09TRUNSVjtcbihmdW5jdGlvbiAoQ09TRUNSVikge1xuICAgIENPU0VDUlZbQ09TRUNSVltcIlAyNTZcIl0gPSAxXSA9IFwiUDI1NlwiO1xuICAgIENPU0VDUlZbQ09TRUNSVltcIlAzODRcIl0gPSAyXSA9IFwiUDM4NFwiO1xuICAgIENPU0VDUlZbQ09TRUNSVltcIlA1MjFcIl0gPSAzXSA9IFwiUDUyMVwiO1xuICAgIENPU0VDUlZbQ09TRUNSVltcIkVEMjU1MTlcIl0gPSA2XSA9IFwiRUQyNTUxOVwiO1xuICAgIENPU0VDUlZbQ09TRUNSVltcIlNFQ1AyNTZLMVwiXSA9IDhdID0gXCJTRUNQMjU2SzFcIjtcbn0pKENPU0VDUlYgfHwgKENPU0VDUlYgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRUNydihjcnYpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhDT1NFQ1JWKS5pbmRleE9mKGNydikgPj0gMDtcbn1cbi8qKlxuICogQ09TRSBBbGdvcml0aG1zXG4gKlxuICogaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvY29zZS9jb3NlLnhodG1sI2FsZ29yaXRobXNcbiAqL1xuZXhwb3J0IHZhciBDT1NFQUxHO1xuKGZ1bmN0aW9uIChDT1NFQUxHKSB7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiRVMyNTZcIl0gPSAtN10gPSBcIkVTMjU2XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiRWREU0FcIl0gPSAtOF0gPSBcIkVkRFNBXCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiRVMzODRcIl0gPSAtMzVdID0gXCJFUzM4NFwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIkVTNTEyXCJdID0gLTM2XSA9IFwiRVM1MTJcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJQUzI1NlwiXSA9IC0zN10gPSBcIlBTMjU2XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUFMzODRcIl0gPSAtMzhdID0gXCJQUzM4NFwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlBTNTEyXCJdID0gLTM5XSA9IFwiUFM1MTJcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFUzI1NktcIl0gPSAtNDddID0gXCJFUzI1NktcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJSUzI1NlwiXSA9IC0yNTddID0gXCJSUzI1NlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlJTMzg0XCJdID0gLTI1OF0gPSBcIlJTMzg0XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUlM1MTJcIl0gPSAtMjU5XSA9IFwiUlM1MTJcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJSUzFcIl0gPSAtNjU1MzVdID0gXCJSUzFcIjtcbn0pKENPU0VBTEcgfHwgKENPU0VBTEcgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRUFsZyhhbGcpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhDT1NFQUxHKS5pbmRleE9mKGFsZykgPj0gMDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeAttestationObjectInternals: () => (/* binding */ _decodeAttestationObjectInternals),\n/* harmony export */   decodeAttestationObject: () => (/* binding */ decodeAttestationObject)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert an AttestationObject buffer to a proper object\n *\n * @param base64AttestationObject Attestation Object buffer\n */\nfunction decodeAttestationObject(attestationObject) {\n    return _decodeAttestationObjectInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(attestationObject));\n}\n// Make it possible to stub the return value during testing\nconst _decodeAttestationObjectInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asc0RBQXNELDhEQUFtQjtBQUN6RTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZGVjb2RlQXR0ZXN0YXRpb25PYmplY3QuanM/YTU5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DQk9SIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBDb252ZXJ0IGFuIEF0dGVzdGF0aW9uT2JqZWN0IGJ1ZmZlciB0byBhIHByb3BlciBvYmplY3RcbiAqXG4gKiBAcGFyYW0gYmFzZTY0QXR0ZXN0YXRpb25PYmplY3QgQXR0ZXN0YXRpb24gT2JqZWN0IGJ1ZmZlclxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQXR0ZXN0YXRpb25PYmplY3QoYXR0ZXN0YXRpb25PYmplY3QpIHtcbiAgICByZXR1cm4gX2RlY29kZUF0dGVzdGF0aW9uT2JqZWN0SW50ZXJuYWxzLnN0dWJUaGlzKGlzb0NCT1IuZGVjb2RlRmlyc3QoYXR0ZXN0YXRpb25PYmplY3QpKTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX2RlY29kZUF0dGVzdGF0aW9uT2JqZWN0SW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzOiAodmFsdWUpID0+IHZhbHVlLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAuthenticatorExtensions: () => (/* binding */ decodeAuthenticatorExtensions)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert authenticator extension data buffer to a proper object\n *\n * @param extensionData Authenticator Extension Data buffer\n */\nfunction decodeAuthenticatorExtensions(extensionData) {\n    let toCBOR;\n    try {\n        toCBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(extensionData);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`Error decoding authenticator extensions: ${_err.message}`);\n    }\n    return convertMapToObjectDeep(toCBOR);\n}\n/**\n * CBOR-encoded extensions can be deeply-nested Maps, which are too deep for a simple\n * `Object.entries()`. This method will recursively make sure that all Maps are converted into\n * basic objects.\n */\nfunction convertMapToObjectDeep(input) {\n    const mapped = {};\n    for (const [key, value] of input) {\n        if (value instanceof Map) {\n            mapped[key] = convertMapToObjectDeep(value);\n        }\n        else {\n            mapped[key] = value;\n        }\n    }\n    return mapped;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLDhEQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsYUFBYTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZGVjb2RlQXV0aGVudGljYXRvckV4dGVuc2lvbnMuanM/NzI4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DQk9SIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBDb252ZXJ0IGF1dGhlbnRpY2F0b3IgZXh0ZW5zaW9uIGRhdGEgYnVmZmVyIHRvIGEgcHJvcGVyIG9iamVjdFxuICpcbiAqIEBwYXJhbSBleHRlbnNpb25EYXRhIEF1dGhlbnRpY2F0b3IgRXh0ZW5zaW9uIERhdGEgYnVmZmVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucyhleHRlbnNpb25EYXRhKSB7XG4gICAgbGV0IHRvQ0JPUjtcbiAgICB0cnkge1xuICAgICAgICB0b0NCT1IgPSBpc29DQk9SLmRlY29kZUZpcnN0KGV4dGVuc2lvbkRhdGEpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXJyb3IgZGVjb2RpbmcgYXV0aGVudGljYXRvciBleHRlbnNpb25zOiAke19lcnIubWVzc2FnZX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnZlcnRNYXBUb09iamVjdERlZXAodG9DQk9SKTtcbn1cbi8qKlxuICogQ0JPUi1lbmNvZGVkIGV4dGVuc2lvbnMgY2FuIGJlIGRlZXBseS1uZXN0ZWQgTWFwcywgd2hpY2ggYXJlIHRvbyBkZWVwIGZvciBhIHNpbXBsZVxuICogYE9iamVjdC5lbnRyaWVzKClgLiBUaGlzIG1ldGhvZCB3aWxsIHJlY3Vyc2l2ZWx5IG1ha2Ugc3VyZSB0aGF0IGFsbCBNYXBzIGFyZSBjb252ZXJ0ZWQgaW50b1xuICogYmFzaWMgb2JqZWN0cy5cbiAqL1xuZnVuY3Rpb24gY29udmVydE1hcFRvT2JqZWN0RGVlcChpbnB1dCkge1xuICAgIGNvbnN0IG1hcHBlZCA9IHt9O1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGlucHV0KSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIE1hcCkge1xuICAgICAgICAgICAgbWFwcGVkW2tleV0gPSBjb252ZXJ0TWFwVG9PYmplY3REZWVwKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hcHBlZFtrZXldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1hcHBlZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeClientDataJSONInternals: () => (/* binding */ _decodeClientDataJSONInternals),\n/* harmony export */   decodeClientDataJSON: () => (/* binding */ decodeClientDataJSON)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Decode an authenticator's base64url-encoded clientDataJSON to JSON\n */\nfunction decodeClientDataJSON(data) {\n    const toString = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toUTF8String(data);\n    const clientData = JSON.parse(toString);\n    return _decodeClientDataJSONInternals.stubThis(clientData);\n}\n// Make it possible to stub the return value during testing\nconst _decodeClientDataJSONInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDbGllbnREYXRhSlNPTi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsb0VBQXlCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZGVjb2RlQ2xpZW50RGF0YUpTT04uanM/ZWMxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIERlY29kZSBhbiBhdXRoZW50aWNhdG9yJ3MgYmFzZTY0dXJsLWVuY29kZWQgY2xpZW50RGF0YUpTT04gdG8gSlNPTlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQ2xpZW50RGF0YUpTT04oZGF0YSkge1xuICAgIGNvbnN0IHRvU3RyaW5nID0gaXNvQmFzZTY0VVJMLnRvVVRGOFN0cmluZyhkYXRhKTtcbiAgICBjb25zdCBjbGllbnREYXRhID0gSlNPTi5wYXJzZSh0b1N0cmluZyk7XG4gICAgcmV0dXJuIF9kZWNvZGVDbGllbnREYXRhSlNPTkludGVybmFscy5zdHViVGhpcyhjbGllbnREYXRhKTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX2RlY29kZUNsaWVudERhdGFKU09OSW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzOiAodmFsdWUpID0+IHZhbHVlLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeCredentialPublicKeyInternals: () => (/* binding */ _decodeCredentialPublicKeyInternals),\n/* harmony export */   decodeCredentialPublicKey: () => (/* binding */ decodeCredentialPublicKey)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\nfunction decodeCredentialPublicKey(publicKey) {\n    return _decodeCredentialPublicKeyInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(publicKey));\n}\n// Make it possible to stub the return value during testing\nconst _decodeCredentialPublicKeyInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNsQztBQUNQLHdEQUF3RCw4REFBbUI7QUFDM0U7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkuanM/MDNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DQk9SIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkocHVibGljS2V5KSB7XG4gICAgcmV0dXJuIF9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5SW50ZXJuYWxzLnN0dWJUaGlzKGlzb0NCT1IuZGVjb2RlRmlyc3QocHVibGljS2V5KSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5SW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzOiAodmFsdWUpID0+IHZhbHVlLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/fetch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _fetchInternals: () => (/* binding */ _fetchInternals),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * A simple method for requesting data via standard `fetch`. Should work\n * across multiple runtimes.\n */\nfunction fetch(url) {\n    return _fetchInternals.stubThis(url);\n}\n// Make it possible to stub the return value during testing\nconst _fetchInternals = {\n    stubThis: (url) => (0,_deps_js__WEBPACK_IMPORTED_MODULE_0__.crossFetch)(url),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLG9EQUFVO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZmV0Y2guanM/ODdmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcm9zc0ZldGNoIH0gZnJvbSAnLi4vZGVwcy5qcyc7XG4vKipcbiAqIEEgc2ltcGxlIG1ldGhvZCBmb3IgcmVxdWVzdGluZyBkYXRhIHZpYSBzdGFuZGFyZCBgZmV0Y2hgLiBTaG91bGQgd29ya1xuICogYWNyb3NzIG11bHRpcGxlIHJ1bnRpbWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmV0Y2godXJsKSB7XG4gICAgcmV0dXJuIF9mZXRjaEludGVybmFscy5zdHViVGhpcyh1cmwpO1xufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHRoZSByZXR1cm4gdmFsdWUgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfZmV0Y2hJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh1cmwpID0+IGNyb3NzRmV0Y2godXJsKSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateChallengeInternals: () => (/* binding */ _generateChallengeInternals),\n/* harmony export */   generateChallenge: () => (/* binding */ generateChallenge)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Generate a suitably random value to be used as an attestation or assertion challenge\n */\nasync function generateChallenge() {\n    /**\n     * WebAuthn spec says that 16 bytes is a good minimum:\n     *\n     * \"In order to prevent replay attacks, the challenges MUST contain enough entropy to make\n     * guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.\"\n     *\n     * Just in case, let's double it\n     */\n    const challenge = new Uint8Array(32);\n    await _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.getRandomValues(challenge);\n    return _generateChallengeInternals.stubThis(challenge);\n}\n// Make it possible to stub the return value during testing\nconst _generateChallengeInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZW5lcmF0ZUNoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG9FQUF5QjtBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZW5lcmF0ZUNoYWxsZW5nZS5qcz8yZDlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NyeXB0byB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogR2VuZXJhdGUgYSBzdWl0YWJseSByYW5kb20gdmFsdWUgdG8gYmUgdXNlZCBhcyBhbiBhdHRlc3RhdGlvbiBvciBhc3NlcnRpb24gY2hhbGxlbmdlXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUNoYWxsZW5nZSgpIHtcbiAgICAvKipcbiAgICAgKiBXZWJBdXRobiBzcGVjIHNheXMgdGhhdCAxNiBieXRlcyBpcyBhIGdvb2QgbWluaW11bTpcbiAgICAgKlxuICAgICAqIFwiSW4gb3JkZXIgdG8gcHJldmVudCByZXBsYXkgYXR0YWNrcywgdGhlIGNoYWxsZW5nZXMgTVVTVCBjb250YWluIGVub3VnaCBlbnRyb3B5IHRvIG1ha2VcbiAgICAgKiBndWVzc2luZyB0aGVtIGluZmVhc2libGUuIENoYWxsZW5nZXMgU0hPVUxEIHRoZXJlZm9yZSBiZSBhdCBsZWFzdCAxNiBieXRlcyBsb25nLlwiXG4gICAgICpcbiAgICAgKiBKdXN0IGluIGNhc2UsIGxldCdzIGRvdWJsZSBpdFxuICAgICAqL1xuICAgIGNvbnN0IGNoYWxsZW5nZSA9IG5ldyBVaW50OEFycmF5KDMyKTtcbiAgICBhd2FpdCBpc29DcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGNoYWxsZW5nZSk7XG4gICAgcmV0dXJuIF9nZW5lcmF0ZUNoYWxsZW5nZUludGVybmFscy5zdHViVGhpcyhjaGFsbGVuZ2UpO1xufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHRoZSByZXR1cm4gdmFsdWUgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfZ2VuZXJhdGVDaGFsbGVuZ2VJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateUserIDInternals: () => (/* binding */ _generateUserIDInternals),\n/* harmony export */   generateUserID: () => (/* binding */ generateUserID)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Generate a suitably random value to be used as user ID\n */\nasync function generateUserID() {\n    /**\n     * WebAuthn spec says user.id has a max length of 64 bytes. I prefer how 32 random bytes look\n     * after they're base64url-encoded so I'm choosing to go with that here.\n     */\n    const newUserID = new Uint8Array(32);\n    await _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.getRandomValues(newUserID);\n    return _generateUserIDInternals.stubThis(newUserID);\n}\n// Make it possible to stub the return value during testing\nconst _generateUserIDInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZW5lcmF0ZVVzZXJJRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxvRUFBeUI7QUFDbkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZ2VuZXJhdGVVc2VySUQuanM/Y2FlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DcnlwdG8gfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIEdlbmVyYXRlIGEgc3VpdGFibHkgcmFuZG9tIHZhbHVlIHRvIGJlIHVzZWQgYXMgdXNlciBJRFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVVc2VySUQoKSB7XG4gICAgLyoqXG4gICAgICogV2ViQXV0aG4gc3BlYyBzYXlzIHVzZXIuaWQgaGFzIGEgbWF4IGxlbmd0aCBvZiA2NCBieXRlcy4gSSBwcmVmZXIgaG93IDMyIHJhbmRvbSBieXRlcyBsb29rXG4gICAgICogYWZ0ZXIgdGhleSdyZSBiYXNlNjR1cmwtZW5jb2RlZCBzbyBJJ20gY2hvb3NpbmcgdG8gZ28gd2l0aCB0aGF0IGhlcmUuXG4gICAgICovXG4gICAgY29uc3QgbmV3VXNlcklEID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuICAgIGF3YWl0IGlzb0NyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3VXNlcklEKTtcbiAgICByZXR1cm4gX2dlbmVyYXRlVXNlcklESW50ZXJuYWxzLnN0dWJUaGlzKG5ld1VzZXJJRCk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9nZW5lcmF0ZVVzZXJJREludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCertificateInfo: () => (/* binding */ getCertificateInfo)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\nconst issuerSubjectIDKey = {\n    '2.5.4.6': 'C',\n    '2.5.4.10': 'O',\n    '2.5.4.11': 'OU',\n    '2.5.4.3': 'CN',\n};\n/**\n * Extract PEM certificate info\n *\n * @param pemCertificate Result from call to `convertASN1toPEM(x5c[0])`\n */\nfunction getCertificateInfo(leafCertBuffer) {\n    const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(leafCertBuffer, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCert = x509.tbsCertificate;\n    // Issuer\n    const issuer = { combined: '' };\n    parsedCert.issuer.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            issuer[key] = iss.value.toString();\n        }\n    });\n    issuer.combined = issuerSubjectToString(issuer);\n    // Subject\n    const subject = { combined: '' };\n    parsedCert.subject.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            subject[key] = iss.value.toString();\n        }\n    });\n    subject.combined = issuerSubjectToString(subject);\n    let basicConstraintsCA = false;\n    if (parsedCert.extensions) {\n        // console.log(parsedCert.extensions);\n        for (const ext of parsedCert.extensions) {\n            if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_basicConstraints) {\n                const basicConstraints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.BasicConstraints);\n                basicConstraintsCA = basicConstraints.cA;\n            }\n        }\n    }\n    return {\n        issuer,\n        subject,\n        version: parsedCert.version,\n        basicConstraintsCA,\n        notBefore: parsedCert.validity.notBefore.getTime(),\n        notAfter: parsedCert.validity.notAfter.getTime(),\n        parsedCertificate: x509,\n    };\n}\n/**\n * Stringify the parts of Issuer or Subject info for easier comparison of subject issuers with\n * issuer subjects.\n *\n * The order might seem arbitrary, because it is. It should be enough that the two are stringified\n * in the same order.\n */\nfunction issuerSubjectToString(input) {\n    const parts = [];\n    if (input.C) {\n        parts.push(input.C);\n    }\n    if (input.O) {\n        parts.push(input.O);\n    }\n    if (input.OU) {\n        parts.push(input.OU);\n    }\n    if (input.CN) {\n        parts.push(input.CN);\n    }\n    return parts.join(' : ');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEY7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLCtDQUFTLHVCQUF1QixpREFBVztBQUM1RDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQXNCO0FBQ3JELHlDQUF5QywrQ0FBUyxzQkFBc0Isc0RBQWdCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZ2V0Q2VydGlmaWNhdGVJbmZvLmpzPzY0NmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBCYXNpY0NvbnN0cmFpbnRzLCBDZXJ0aWZpY2F0ZSwgaWRfY2VfYmFzaWNDb25zdHJhaW50cyB9IGZyb20gJy4uL2RlcHMuanMnO1xuY29uc3QgaXNzdWVyU3ViamVjdElES2V5ID0ge1xuICAgICcyLjUuNC42JzogJ0MnLFxuICAgICcyLjUuNC4xMCc6ICdPJyxcbiAgICAnMi41LjQuMTEnOiAnT1UnLFxuICAgICcyLjUuNC4zJzogJ0NOJyxcbn07XG4vKipcbiAqIEV4dHJhY3QgUEVNIGNlcnRpZmljYXRlIGluZm9cbiAqXG4gKiBAcGFyYW0gcGVtQ2VydGlmaWNhdGUgUmVzdWx0IGZyb20gY2FsbCB0byBgY29udmVydEFTTjF0b1BFTSh4NWNbMF0pYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2VydGlmaWNhdGVJbmZvKGxlYWZDZXJ0QnVmZmVyKSB7XG4gICAgY29uc3QgeDUwOSA9IEFzblBhcnNlci5wYXJzZShsZWFmQ2VydEJ1ZmZlciwgQ2VydGlmaWNhdGUpO1xuICAgIGNvbnN0IHBhcnNlZENlcnQgPSB4NTA5LnRic0NlcnRpZmljYXRlO1xuICAgIC8vIElzc3VlclxuICAgIGNvbnN0IGlzc3VlciA9IHsgY29tYmluZWQ6ICcnIH07XG4gICAgcGFyc2VkQ2VydC5pc3N1ZXIuZm9yRWFjaCgoW2lzc10pID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0gaXNzdWVyU3ViamVjdElES2V5W2lzcy50eXBlXTtcbiAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgaXNzdWVyW2tleV0gPSBpc3MudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlzc3Vlci5jb21iaW5lZCA9IGlzc3VlclN1YmplY3RUb1N0cmluZyhpc3N1ZXIpO1xuICAgIC8vIFN1YmplY3RcbiAgICBjb25zdCBzdWJqZWN0ID0geyBjb21iaW5lZDogJycgfTtcbiAgICBwYXJzZWRDZXJ0LnN1YmplY3QuZm9yRWFjaCgoW2lzc10pID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0gaXNzdWVyU3ViamVjdElES2V5W2lzcy50eXBlXTtcbiAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgc3ViamVjdFtrZXldID0gaXNzLnZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBzdWJqZWN0LmNvbWJpbmVkID0gaXNzdWVyU3ViamVjdFRvU3RyaW5nKHN1YmplY3QpO1xuICAgIGxldCBiYXNpY0NvbnN0cmFpbnRzQ0EgPSBmYWxzZTtcbiAgICBpZiAocGFyc2VkQ2VydC5leHRlbnNpb25zKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhcnNlZENlcnQuZXh0ZW5zaW9ucyk7XG4gICAgICAgIGZvciAoY29uc3QgZXh0IG9mIHBhcnNlZENlcnQuZXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgaWYgKGV4dC5leHRuSUQgPT09IGlkX2NlX2Jhc2ljQ29uc3RyYWludHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiYXNpY0NvbnN0cmFpbnRzID0gQXNuUGFyc2VyLnBhcnNlKGV4dC5leHRuVmFsdWUsIEJhc2ljQ29uc3RyYWludHMpO1xuICAgICAgICAgICAgICAgIGJhc2ljQ29uc3RyYWludHNDQSA9IGJhc2ljQ29uc3RyYWludHMuY0E7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICBzdWJqZWN0LFxuICAgICAgICB2ZXJzaW9uOiBwYXJzZWRDZXJ0LnZlcnNpb24sXG4gICAgICAgIGJhc2ljQ29uc3RyYWludHNDQSxcbiAgICAgICAgbm90QmVmb3JlOiBwYXJzZWRDZXJ0LnZhbGlkaXR5Lm5vdEJlZm9yZS5nZXRUaW1lKCksXG4gICAgICAgIG5vdEFmdGVyOiBwYXJzZWRDZXJ0LnZhbGlkaXR5Lm5vdEFmdGVyLmdldFRpbWUoKSxcbiAgICAgICAgcGFyc2VkQ2VydGlmaWNhdGU6IHg1MDksXG4gICAgfTtcbn1cbi8qKlxuICogU3RyaW5naWZ5IHRoZSBwYXJ0cyBvZiBJc3N1ZXIgb3IgU3ViamVjdCBpbmZvIGZvciBlYXNpZXIgY29tcGFyaXNvbiBvZiBzdWJqZWN0IGlzc3VlcnMgd2l0aFxuICogaXNzdWVyIHN1YmplY3RzLlxuICpcbiAqIFRoZSBvcmRlciBtaWdodCBzZWVtIGFyYml0cmFyeSwgYmVjYXVzZSBpdCBpcy4gSXQgc2hvdWxkIGJlIGVub3VnaCB0aGF0IHRoZSB0d28gYXJlIHN0cmluZ2lmaWVkXG4gKiBpbiB0aGUgc2FtZSBvcmRlci5cbiAqL1xuZnVuY3Rpb24gaXNzdWVyU3ViamVjdFRvU3RyaW5nKGlucHV0KSB7XG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBpZiAoaW5wdXQuQykge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0LkMpO1xuICAgIH1cbiAgICBpZiAoaW5wdXQuTykge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0Lk8pO1xuICAgIH1cbiAgICBpZiAoaW5wdXQuT1UpIHtcbiAgICAgICAgcGFydHMucHVzaChpbnB1dC5PVSk7XG4gICAgfVxuICAgIGlmIChpbnB1dC5DTikge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0LkNOKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oJyA6ICcpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* reexport safe */ _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__.convertAAGUIDToString),\n/* harmony export */   convertCOSEtoPKCS: () => (/* reexport safe */ _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__.convertCOSEtoPKCS),\n/* harmony export */   convertCertBufferToPEM: () => (/* reexport safe */ _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM),\n/* harmony export */   cose: () => (/* reexport module object */ _cose_js__WEBPACK_IMPORTED_MODULE_15__),\n/* harmony export */   decodeAttestationObject: () => (/* reexport safe */ _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__.decodeAttestationObject),\n/* harmony export */   decodeClientDataJSON: () => (/* reexport safe */ _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__.decodeClientDataJSON),\n/* harmony export */   decodeCredentialPublicKey: () => (/* reexport safe */ _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__.decodeCredentialPublicKey),\n/* harmony export */   generateChallenge: () => (/* reexport safe */ _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__.generateChallenge),\n/* harmony export */   generateUserID: () => (/* reexport safe */ _generateUserID_js__WEBPACK_IMPORTED_MODULE_7__.generateUserID),\n/* harmony export */   getCertificateInfo: () => (/* reexport safe */ _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_8__.getCertificateInfo),\n/* harmony export */   isCertRevoked: () => (/* reexport safe */ _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_9__.isCertRevoked),\n/* harmony export */   isoBase64URL: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_14__.isoBase64URL),\n/* harmony export */   isoCBOR: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_14__.isoCBOR),\n/* harmony export */   isoCrypto: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_14__.isoCrypto),\n/* harmony export */   isoUint8Array: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_14__.isoUint8Array),\n/* harmony export */   parseAuthenticatorData: () => (/* reexport safe */ _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_10__.parseAuthenticatorData),\n/* harmony export */   toHash: () => (/* reexport safe */ _toHash_js__WEBPACK_IMPORTED_MODULE_11__.toHash),\n/* harmony export */   validateCertificatePath: () => (/* reexport safe */ _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_12__.validateCertificatePath),\n/* harmony export */   verifySignature: () => (/* reexport safe */ _verifySignature_js__WEBPACK_IMPORTED_MODULE_13__.verifySignature)\n/* harmony export */ });\n/* harmony import */ var _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _generateUserID_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./generateUserID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFtRTtBQUNFO0FBQ1Y7QUFDWTtBQUNOO0FBQ1U7QUFDaEI7QUFDTjtBQUNRO0FBQ1Y7QUFDa0I7QUFDaEM7QUFDa0M7QUFDaEI7QUFDMEI7QUFDL0M7QUFDNFQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pbmRleC5qcz85NjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRBQUdVSURUb1N0cmluZyB9IGZyb20gJy4vY29udmVydEFBR1VJRFRvU3RyaW5nLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0gfSBmcm9tICcuL2NvbnZlcnRDZXJ0QnVmZmVyVG9QRU0uanMnO1xuaW1wb3J0IHsgY29udmVydENPU0V0b1BLQ1MgfSBmcm9tICcuL2NvbnZlcnRDT1NFdG9QS0NTLmpzJztcbmltcG9ydCB7IGRlY29kZUF0dGVzdGF0aW9uT2JqZWN0IH0gZnJvbSAnLi9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdC5qcyc7XG5pbXBvcnQgeyBkZWNvZGVDbGllbnREYXRhSlNPTiB9IGZyb20gJy4vZGVjb2RlQ2xpZW50RGF0YUpTT04uanMnO1xuaW1wb3J0IHsgZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleSB9IGZyb20gJy4vZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleS5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUNoYWxsZW5nZSB9IGZyb20gJy4vZ2VuZXJhdGVDaGFsbGVuZ2UuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVVc2VySUQgfSBmcm9tICcuL2dlbmVyYXRlVXNlcklELmpzJztcbmltcG9ydCB7IGdldENlcnRpZmljYXRlSW5mbyB9IGZyb20gJy4vZ2V0Q2VydGlmaWNhdGVJbmZvLmpzJztcbmltcG9ydCB7IGlzQ2VydFJldm9rZWQgfSBmcm9tICcuL2lzQ2VydFJldm9rZWQuanMnO1xuaW1wb3J0IHsgcGFyc2VBdXRoZW50aWNhdG9yRGF0YSB9IGZyb20gJy4vcGFyc2VBdXRoZW50aWNhdG9yRGF0YS5qcyc7XG5pbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4vdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMLCBpc29DQk9SLCBpc29DcnlwdG8sIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgKiBhcyBjb3NlIGZyb20gJy4vY29zZS5qcyc7XG5leHBvcnQgeyBjb252ZXJ0QUFHVUlEVG9TdHJpbmcsIGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0sIGNvbnZlcnRDT1NFdG9QS0NTLCBjb3NlLCBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdCwgZGVjb2RlQ2xpZW50RGF0YUpTT04sIGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXksIGdlbmVyYXRlQ2hhbGxlbmdlLCBnZW5lcmF0ZVVzZXJJRCwgZ2V0Q2VydGlmaWNhdGVJbmZvLCBpc0NlcnRSZXZva2VkLCBpc29CYXNlNjRVUkwsIGlzb0NCT1IsIGlzb0NyeXB0bywgaXNvVWludDhBcnJheSwgcGFyc2VBdXRoZW50aWNhdG9yRGF0YSwgdG9IYXNoLCB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCwgdmVyaWZ5U2lnbmF0dXJlLCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCertRevoked: () => (/* binding */ isCertRevoked)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n\n\n\nconst cacheRevokedCerts = {};\n/**\n * A method to pull a CRL from a certificate and compare its serial number to the list of revoked\n * certificate serial numbers within the CRL.\n *\n * CRL certificate structure referenced from https://tools.ietf.org/html/rfc5280#page-117\n */\nasync function isCertRevoked(cert) {\n    const { extensions } = cert.tbsCertificate;\n    if (!extensions) {\n        return false;\n    }\n    let extAuthorityKeyID;\n    let extSubjectKeyID;\n    let extCRLDistributionPoints;\n    extensions.forEach((ext) => {\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_authorityKeyIdentifier) {\n            extAuthorityKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.AuthorityKeyIdentifier);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectKeyIdentifier) {\n            extSubjectKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectKeyIdentifier);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_cRLDistributionPoints) {\n            extCRLDistributionPoints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CRLDistributionPoints);\n        }\n    });\n    // Check to see if we've got cached info for the cert's CA\n    let keyIdentifier = undefined;\n    if (extAuthorityKeyID && extAuthorityKeyID.keyIdentifier) {\n        keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extAuthorityKeyID.keyIdentifier.buffer));\n    }\n    else if (extSubjectKeyID) {\n        /**\n         * We might be dealing with a self-signed root certificate. Check the\n         * Subject key Identifier extension next.\n         */\n        keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extSubjectKeyID.buffer));\n    }\n    const certSerialHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.tbsCertificate.serialNumber));\n    if (keyIdentifier) {\n        const cached = cacheRevokedCerts[keyIdentifier];\n        if (cached) {\n            const now = new Date();\n            // If there's a nextUpdate then make sure we're before it\n            if (!cached.nextUpdate || cached.nextUpdate > now) {\n                return cached.revokedCerts.indexOf(certSerialHex) >= 0;\n            }\n        }\n    }\n    const crlURL = extCRLDistributionPoints?.[0].distributionPoint?.fullName?.[0]\n        .uniformResourceIdentifier;\n    // If no URL is provided then we have nothing to check\n    if (!crlURL) {\n        return false;\n    }\n    // Download and read the CRL\n    let certListBytes;\n    try {\n        const respCRL = await (0,_fetch_js__WEBPACK_IMPORTED_MODULE_2__.fetch)(crlURL);\n        certListBytes = await respCRL.arrayBuffer();\n    }\n    catch (_err) {\n        return false;\n    }\n    let data;\n    try {\n        data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(certListBytes, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CertificateList);\n    }\n    catch (_err) {\n        // Something was malformed with the CRL, so pass\n        return false;\n    }\n    const newCached = {\n        revokedCerts: [],\n        nextUpdate: undefined,\n    };\n    // nextUpdate\n    if (data.tbsCertList.nextUpdate) {\n        newCached.nextUpdate = data.tbsCertList.nextUpdate.getTime();\n    }\n    // revokedCertificates\n    const revokedCerts = data.tbsCertList.revokedCertificates;\n    if (revokedCerts) {\n        for (const cert of revokedCerts) {\n            const revokedHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.userCertificate));\n            newCached.revokedCerts.push(revokedHex);\n        }\n        // Cache the results\n        if (keyIdentifier) {\n            cacheRevokedCerts[keyIdentifier] = newCached;\n        }\n        return newCached.revokedCerts.indexOf(certSerialHex) >= 0;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc0NlcnRSZXZva2VkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcU47QUFDdEs7QUFDWjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGtFQUE0QjtBQUN2RCxnQ0FBZ0MsK0NBQVMsc0JBQXNCLDREQUFzQjtBQUNyRjtBQUNBLGdDQUFnQyxnRUFBMEI7QUFDMUQsOEJBQThCLCtDQUFTLHNCQUFzQiwwREFBb0I7QUFDakY7QUFDQSxnQ0FBZ0MsaUVBQTJCO0FBQzNELHVDQUF1QywrQ0FBUyxzQkFBc0IsMkRBQXFCO0FBQzNGO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4REFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhEQUFtQjtBQUMzQztBQUNBLDBCQUEwQiw4REFBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0RBQUs7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtDQUFTLHNCQUFzQixxREFBZTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFtQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzQ2VydFJldm9rZWQuanM/MDI4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc25QYXJzZXIsIEF1dGhvcml0eUtleUlkZW50aWZpZXIsIENlcnRpZmljYXRlTGlzdCwgQ1JMRGlzdHJpYnV0aW9uUG9pbnRzLCBpZF9jZV9hdXRob3JpdHlLZXlJZGVudGlmaWVyLCBpZF9jZV9jUkxEaXN0cmlidXRpb25Qb2ludHMsIGlkX2NlX3N1YmplY3RLZXlJZGVudGlmaWVyLCBTdWJqZWN0S2V5SWRlbnRpZmllciwgfSBmcm9tICcuLi9kZXBzLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBmZXRjaCB9IGZyb20gJy4vZmV0Y2guanMnO1xuY29uc3QgY2FjaGVSZXZva2VkQ2VydHMgPSB7fTtcbi8qKlxuICogQSBtZXRob2QgdG8gcHVsbCBhIENSTCBmcm9tIGEgY2VydGlmaWNhdGUgYW5kIGNvbXBhcmUgaXRzIHNlcmlhbCBudW1iZXIgdG8gdGhlIGxpc3Qgb2YgcmV2b2tlZFxuICogY2VydGlmaWNhdGUgc2VyaWFsIG51bWJlcnMgd2l0aGluIHRoZSBDUkwuXG4gKlxuICogQ1JMIGNlcnRpZmljYXRlIHN0cnVjdHVyZSByZWZlcmVuY2VkIGZyb20gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzUyODAjcGFnZS0xMTdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzQ2VydFJldm9rZWQoY2VydCkge1xuICAgIGNvbnN0IHsgZXh0ZW5zaW9ucyB9ID0gY2VydC50YnNDZXJ0aWZpY2F0ZTtcbiAgICBpZiAoIWV4dGVuc2lvbnMpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgZXh0QXV0aG9yaXR5S2V5SUQ7XG4gICAgbGV0IGV4dFN1YmplY3RLZXlJRDtcbiAgICBsZXQgZXh0Q1JMRGlzdHJpYnV0aW9uUG9pbnRzO1xuICAgIGV4dGVuc2lvbnMuZm9yRWFjaCgoZXh0KSA9PiB7XG4gICAgICAgIGlmIChleHQuZXh0bklEID09PSBpZF9jZV9hdXRob3JpdHlLZXlJZGVudGlmaWVyKSB7XG4gICAgICAgICAgICBleHRBdXRob3JpdHlLZXlJRCA9IEFzblBhcnNlci5wYXJzZShleHQuZXh0blZhbHVlLCBBdXRob3JpdHlLZXlJZGVudGlmaWVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChleHQuZXh0bklEID09PSBpZF9jZV9zdWJqZWN0S2V5SWRlbnRpZmllcikge1xuICAgICAgICAgICAgZXh0U3ViamVjdEtleUlEID0gQXNuUGFyc2VyLnBhcnNlKGV4dC5leHRuVmFsdWUsIFN1YmplY3RLZXlJZGVudGlmaWVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChleHQuZXh0bklEID09PSBpZF9jZV9jUkxEaXN0cmlidXRpb25Qb2ludHMpIHtcbiAgICAgICAgICAgIGV4dENSTERpc3RyaWJ1dGlvblBvaW50cyA9IEFzblBhcnNlci5wYXJzZShleHQuZXh0blZhbHVlLCBDUkxEaXN0cmlidXRpb25Qb2ludHMpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHdlJ3ZlIGdvdCBjYWNoZWQgaW5mbyBmb3IgdGhlIGNlcnQncyBDQVxuICAgIGxldCBrZXlJZGVudGlmaWVyID0gdW5kZWZpbmVkO1xuICAgIGlmIChleHRBdXRob3JpdHlLZXlJRCAmJiBleHRBdXRob3JpdHlLZXlJRC5rZXlJZGVudGlmaWVyKSB7XG4gICAgICAgIGtleUlkZW50aWZpZXIgPSBpc29VaW50OEFycmF5LnRvSGV4KG5ldyBVaW50OEFycmF5KGV4dEF1dGhvcml0eUtleUlELmtleUlkZW50aWZpZXIuYnVmZmVyKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGV4dFN1YmplY3RLZXlJRCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogV2UgbWlnaHQgYmUgZGVhbGluZyB3aXRoIGEgc2VsZi1zaWduZWQgcm9vdCBjZXJ0aWZpY2F0ZS4gQ2hlY2sgdGhlXG4gICAgICAgICAqIFN1YmplY3Qga2V5IElkZW50aWZpZXIgZXh0ZW5zaW9uIG5leHQuXG4gICAgICAgICAqL1xuICAgICAgICBrZXlJZGVudGlmaWVyID0gaXNvVWludDhBcnJheS50b0hleChuZXcgVWludDhBcnJheShleHRTdWJqZWN0S2V5SUQuYnVmZmVyKSk7XG4gICAgfVxuICAgIGNvbnN0IGNlcnRTZXJpYWxIZXggPSBpc29VaW50OEFycmF5LnRvSGV4KG5ldyBVaW50OEFycmF5KGNlcnQudGJzQ2VydGlmaWNhdGUuc2VyaWFsTnVtYmVyKSk7XG4gICAgaWYgKGtleUlkZW50aWZpZXIpIHtcbiAgICAgICAgY29uc3QgY2FjaGVkID0gY2FjaGVSZXZva2VkQ2VydHNba2V5SWRlbnRpZmllcl07XG4gICAgICAgIGlmIChjYWNoZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICAvLyBJZiB0aGVyZSdzIGEgbmV4dFVwZGF0ZSB0aGVuIG1ha2Ugc3VyZSB3ZSdyZSBiZWZvcmUgaXRcbiAgICAgICAgICAgIGlmICghY2FjaGVkLm5leHRVcGRhdGUgfHwgY2FjaGVkLm5leHRVcGRhdGUgPiBub3cpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkLnJldm9rZWRDZXJ0cy5pbmRleE9mKGNlcnRTZXJpYWxIZXgpID49IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgY3JsVVJMID0gZXh0Q1JMRGlzdHJpYnV0aW9uUG9pbnRzPy5bMF0uZGlzdHJpYnV0aW9uUG9pbnQ/LmZ1bGxOYW1lPy5bMF1cbiAgICAgICAgLnVuaWZvcm1SZXNvdXJjZUlkZW50aWZpZXI7XG4gICAgLy8gSWYgbm8gVVJMIGlzIHByb3ZpZGVkIHRoZW4gd2UgaGF2ZSBub3RoaW5nIHRvIGNoZWNrXG4gICAgaWYgKCFjcmxVUkwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBEb3dubG9hZCBhbmQgcmVhZCB0aGUgQ1JMXG4gICAgbGV0IGNlcnRMaXN0Qnl0ZXM7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcENSTCA9IGF3YWl0IGZldGNoKGNybFVSTCk7XG4gICAgICAgIGNlcnRMaXN0Qnl0ZXMgPSBhd2FpdCByZXNwQ1JMLmFycmF5QnVmZmVyKCk7XG4gICAgfVxuICAgIGNhdGNoIChfZXJyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IGRhdGE7XG4gICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEFzblBhcnNlci5wYXJzZShjZXJ0TGlzdEJ5dGVzLCBDZXJ0aWZpY2F0ZUxpc3QpO1xuICAgIH1cbiAgICBjYXRjaCAoX2Vycikge1xuICAgICAgICAvLyBTb21ldGhpbmcgd2FzIG1hbGZvcm1lZCB3aXRoIHRoZSBDUkwsIHNvIHBhc3NcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBuZXdDYWNoZWQgPSB7XG4gICAgICAgIHJldm9rZWRDZXJ0czogW10sXG4gICAgICAgIG5leHRVcGRhdGU6IHVuZGVmaW5lZCxcbiAgICB9O1xuICAgIC8vIG5leHRVcGRhdGVcbiAgICBpZiAoZGF0YS50YnNDZXJ0TGlzdC5uZXh0VXBkYXRlKSB7XG4gICAgICAgIG5ld0NhY2hlZC5uZXh0VXBkYXRlID0gZGF0YS50YnNDZXJ0TGlzdC5uZXh0VXBkYXRlLmdldFRpbWUoKTtcbiAgICB9XG4gICAgLy8gcmV2b2tlZENlcnRpZmljYXRlc1xuICAgIGNvbnN0IHJldm9rZWRDZXJ0cyA9IGRhdGEudGJzQ2VydExpc3QucmV2b2tlZENlcnRpZmljYXRlcztcbiAgICBpZiAocmV2b2tlZENlcnRzKSB7XG4gICAgICAgIGZvciAoY29uc3QgY2VydCBvZiByZXZva2VkQ2VydHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJldm9rZWRIZXggPSBpc29VaW50OEFycmF5LnRvSGV4KG5ldyBVaW50OEFycmF5KGNlcnQudXNlckNlcnRpZmljYXRlKSk7XG4gICAgICAgICAgICBuZXdDYWNoZWQucmV2b2tlZENlcnRzLnB1c2gocmV2b2tlZEhleCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2FjaGUgdGhlIHJlc3VsdHNcbiAgICAgICAgaWYgKGtleUlkZW50aWZpZXIpIHtcbiAgICAgICAgICAgIGNhY2hlUmV2b2tlZENlcnRzW2tleUlkZW50aWZpZXJdID0gbmV3Q2FjaGVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXdDYWNoZWQucmV2b2tlZENlcnRzLmluZGV4T2YoY2VydFNlcmlhbEhleCkgPj0gMDtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isoBase64URL: () => (/* reexport module object */ _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   isoCBOR: () => (/* reexport module object */ _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   isoCrypto: () => (/* reexport module object */ _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   isoUint8Array: () => (/* reexport module object */ _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoBase64URL.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\");\n/* harmony import */ var _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isoCBOR.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\");\n/* harmony import */ var _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoCrypto/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\");\n/* harmony import */ var _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoUint8Array.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\");\n/**\n * A collection of methods for isomorphic manipulation of trickier data types\n *\n * The goal with these is to make it easier to replace dependencies later that might not play well\n * with specific server-like runtimes that expose global Web APIs (CloudFlare Workers, Deno, Bun,\n * etc...), while also supporting execution in Node.\n */\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNWO0FBQ1U7QUFDRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pbmRleC5qcz80M2VjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBjb2xsZWN0aW9uIG9mIG1ldGhvZHMgZm9yIGlzb21vcnBoaWMgbWFuaXB1bGF0aW9uIG9mIHRyaWNraWVyIGRhdGEgdHlwZXNcbiAqXG4gKiBUaGUgZ29hbCB3aXRoIHRoZXNlIGlzIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHJlcGxhY2UgZGVwZW5kZW5jaWVzIGxhdGVyIHRoYXQgbWlnaHQgbm90IHBsYXkgd2VsbFxuICogd2l0aCBzcGVjaWZpYyBzZXJ2ZXItbGlrZSBydW50aW1lcyB0aGF0IGV4cG9zZSBnbG9iYWwgV2ViIEFQSXMgKENsb3VkRmxhcmUgV29ya2VycywgRGVubywgQnVuLFxuICogZXRjLi4uKSwgd2hpbGUgYWxzbyBzdXBwb3J0aW5nIGV4ZWN1dGlvbiBpbiBOb2RlLlxuICovXG5leHBvcnQgKiBhcyBpc29CYXNlNjRVUkwgZnJvbSAnLi9pc29CYXNlNjRVUkwuanMnO1xuZXhwb3J0ICogYXMgaXNvQ0JPUiBmcm9tICcuL2lzb0NCT1IuanMnO1xuZXhwb3J0ICogYXMgaXNvQ3J5cHRvIGZyb20gJy4vaXNvQ3J5cHRvL2luZGV4LmpzJztcbmV4cG9ydCAqIGFzIGlzb1VpbnQ4QXJyYXkgZnJvbSAnLi9pc29VaW50OEFycmF5LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBuffer: () => (/* binding */ fromBuffer),\n/* harmony export */   fromUTF8String: () => (/* binding */ fromUTF8String),\n/* harmony export */   isBase64: () => (/* binding */ isBase64),\n/* harmony export */   isBase64URL: () => (/* binding */ isBase64URL),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toBuffer: () => (/* binding */ toBuffer),\n/* harmony export */   toUTF8String: () => (/* binding */ toUTF8String),\n/* harmony export */   trimPadding: () => (/* binding */ trimPadding)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Decode from a Base64URL-encoded string to an ArrayBuffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials.\n *\n * @param buffer Value to decode from base64\n * @param to (optional) The decoding to use, in case it's desirable to decode from base64 instead\n */\nfunction toBuffer(base64urlString, from = 'base64url') {\n    const _buffer = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, from === 'base64url');\n    return new Uint8Array(_buffer);\n}\n/**\n * Encode the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * @param buffer Value to encode to base64\n * @param to (optional) The encoding to use, in case it's desirable to encode to base64 instead\n */\nfunction fromBuffer(buffer, to = 'base64url') {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(buffer, to === 'base64url');\n}\n/**\n * Convert a base64url string into base64\n */\nfunction toBase64(base64urlString) {\n    const fromBase64Url = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, true);\n    const toBase64 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(fromBase64Url);\n    return toBase64;\n}\n/**\n * Encode a UTF-8 string to base64url\n */\nfunction fromUTF8String(utf8String) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromString(utf8String, true);\n}\n/**\n * Decode a base64url string into its original UTF-8 string\n */\nfunction toUTF8String(base64urlString) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toString(base64urlString, true);\n}\n/**\n * Confirm that the string is encoded into base64\n */\nfunction isBase64(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, false);\n}\n/**\n * Confirm that the string is encoded into base64url, with support for optional padding\n */\nfunction isBase64URL(input) {\n    // Trim padding characters from the string if present\n    input = trimPadding(input);\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, true);\n}\n/**\n * Remove optional padding from a base64url-encoded string\n */\nfunction trimPadding(input) {\n    return input.replace(/=/g, '');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQmFzZTY0VVJMLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IsNENBQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLDRDQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCwwQkFBMEIsNENBQU07QUFDaEMscUJBQXFCLDRDQUFNO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsNENBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsNENBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsNENBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxXQUFXLDRDQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0Jhc2U2NFVSTC5qcz8wMDRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2U2NCB9IGZyb20gJy4uLy4uL2RlcHMuanMnO1xuLyoqXG4gKiBEZWNvZGUgZnJvbSBhIEJhc2U2NFVSTC1lbmNvZGVkIHN0cmluZyB0byBhbiBBcnJheUJ1ZmZlci4gQmVzdCB1c2VkIHdoZW4gY29udmVydGluZyBhXG4gKiBjcmVkZW50aWFsIElEIGZyb20gYSBKU09OIHN0cmluZyB0byBhbiBBcnJheUJ1ZmZlciwgbGlrZSBpbiBhbGxvd0NyZWRlbnRpYWxzIG9yXG4gKiBleGNsdWRlQ3JlZGVudGlhbHMuXG4gKlxuICogQHBhcmFtIGJ1ZmZlciBWYWx1ZSB0byBkZWNvZGUgZnJvbSBiYXNlNjRcbiAqIEBwYXJhbSB0byAob3B0aW9uYWwpIFRoZSBkZWNvZGluZyB0byB1c2UsIGluIGNhc2UgaXQncyBkZXNpcmFibGUgdG8gZGVjb2RlIGZyb20gYmFzZTY0IGluc3RlYWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQnVmZmVyKGJhc2U2NHVybFN0cmluZywgZnJvbSA9ICdiYXNlNjR1cmwnKSB7XG4gICAgY29uc3QgX2J1ZmZlciA9IGJhc2U2NC50b0FycmF5QnVmZmVyKGJhc2U2NHVybFN0cmluZywgZnJvbSA9PT0gJ2Jhc2U2NHVybCcpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShfYnVmZmVyKTtcbn1cbi8qKlxuICogRW5jb2RlIHRoZSBnaXZlbiBhcnJheSBidWZmZXIgaW50byBhIEJhc2U2NFVSTC1lbmNvZGVkIHN0cmluZy4gSWRlYWwgZm9yIGNvbnZlcnRpbmcgdmFyaW91c1xuICogY3JlZGVudGlhbCByZXNwb25zZSBBcnJheUJ1ZmZlcnMgdG8gc3RyaW5nIGZvciBzZW5kaW5nIGJhY2sgdG8gdGhlIHNlcnZlciBhcyBKU09OLlxuICpcbiAqIEBwYXJhbSBidWZmZXIgVmFsdWUgdG8gZW5jb2RlIHRvIGJhc2U2NFxuICogQHBhcmFtIHRvIChvcHRpb25hbCkgVGhlIGVuY29kaW5nIHRvIHVzZSwgaW4gY2FzZSBpdCdzIGRlc2lyYWJsZSB0byBlbmNvZGUgdG8gYmFzZTY0IGluc3RlYWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21CdWZmZXIoYnVmZmVyLCB0byA9ICdiYXNlNjR1cmwnKSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQXJyYXlCdWZmZXIoYnVmZmVyLCB0byA9PT0gJ2Jhc2U2NHVybCcpO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgYmFzZTY0dXJsIHN0cmluZyBpbnRvIGJhc2U2NFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjQoYmFzZTY0dXJsU3RyaW5nKSB7XG4gICAgY29uc3QgZnJvbUJhc2U2NFVybCA9IGJhc2U2NC50b0FycmF5QnVmZmVyKGJhc2U2NHVybFN0cmluZywgdHJ1ZSk7XG4gICAgY29uc3QgdG9CYXNlNjQgPSBiYXNlNjQuZnJvbUFycmF5QnVmZmVyKGZyb21CYXNlNjRVcmwpO1xuICAgIHJldHVybiB0b0Jhc2U2NDtcbn1cbi8qKlxuICogRW5jb2RlIGEgVVRGLTggc3RyaW5nIHRvIGJhc2U2NHVybFxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbVVURjhTdHJpbmcodXRmOFN0cmluZykge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbVN0cmluZyh1dGY4U3RyaW5nLCB0cnVlKTtcbn1cbi8qKlxuICogRGVjb2RlIGEgYmFzZTY0dXJsIHN0cmluZyBpbnRvIGl0cyBvcmlnaW5hbCBVVEYtOCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvVVRGOFN0cmluZyhiYXNlNjR1cmxTdHJpbmcpIHtcbiAgICByZXR1cm4gYmFzZTY0LnRvU3RyaW5nKGJhc2U2NHVybFN0cmluZywgdHJ1ZSk7XG59XG4vKipcbiAqIENvbmZpcm0gdGhhdCB0aGUgc3RyaW5nIGlzIGVuY29kZWQgaW50byBiYXNlNjRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZTY0KGlucHV0KSB7XG4gICAgcmV0dXJuIGJhc2U2NC52YWxpZGF0ZShpbnB1dCwgZmFsc2UpO1xufVxuLyoqXG4gKiBDb25maXJtIHRoYXQgdGhlIHN0cmluZyBpcyBlbmNvZGVkIGludG8gYmFzZTY0dXJsLCB3aXRoIHN1cHBvcnQgZm9yIG9wdGlvbmFsIHBhZGRpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZTY0VVJMKGlucHV0KSB7XG4gICAgLy8gVHJpbSBwYWRkaW5nIGNoYXJhY3RlcnMgZnJvbSB0aGUgc3RyaW5nIGlmIHByZXNlbnRcbiAgICBpbnB1dCA9IHRyaW1QYWRkaW5nKGlucHV0KTtcbiAgICByZXR1cm4gYmFzZTY0LnZhbGlkYXRlKGlucHV0LCB0cnVlKTtcbn1cbi8qKlxuICogUmVtb3ZlIG9wdGlvbmFsIHBhZGRpbmcgZnJvbSBhIGJhc2U2NHVybC1lbmNvZGVkIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdHJpbVBhZGRpbmcoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQucmVwbGFjZSgvPS9nLCAnJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js":
/*!************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Whatever CBOR encoder is used should keep CBOR data the same length when data is re-encoded\n *\n * MOST CRITICALLY, this means the following needs to be true of whatever CBOR library we use:\n * - CBOR Map type values MUST decode to JavaScript Maps\n * - CBOR tag 64 (uint8 Typed Array) MUST NOT be used when encoding Uint8Arrays back to CBOR\n *\n * So long as these requirements are maintained, then CBOR sequences can be encoded and decoded\n * freely while maintaining their lengths for the most accurate pointer movement across them.\n */\n/**\n * Decode and return the first item in a sequence of CBOR-encoded values\n *\n * @param input The CBOR data to decode\n * @param asObject (optional) Whether to convert any CBOR Maps into JavaScript Objects. Defaults to\n * `false`\n */\nfunction decodeFirst(input) {\n    // Make a copy so we don't mutate the original\n    const _input = new Uint8Array(input);\n    const decoded = _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.decodePartialCBOR(_input, 0);\n    const [first] = decoded;\n    return first;\n}\n/**\n * Encode data to CBOR\n */\nfunction encode(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.encodeCBOR(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ0JPUi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixnRUFBMEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFtQjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DQk9SLmpzPzFhMjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGlueUNib3IgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbi8qKlxuICogV2hhdGV2ZXIgQ0JPUiBlbmNvZGVyIGlzIHVzZWQgc2hvdWxkIGtlZXAgQ0JPUiBkYXRhIHRoZSBzYW1lIGxlbmd0aCB3aGVuIGRhdGEgaXMgcmUtZW5jb2RlZFxuICpcbiAqIE1PU1QgQ1JJVElDQUxMWSwgdGhpcyBtZWFucyB0aGUgZm9sbG93aW5nIG5lZWRzIHRvIGJlIHRydWUgb2Ygd2hhdGV2ZXIgQ0JPUiBsaWJyYXJ5IHdlIHVzZTpcbiAqIC0gQ0JPUiBNYXAgdHlwZSB2YWx1ZXMgTVVTVCBkZWNvZGUgdG8gSmF2YVNjcmlwdCBNYXBzXG4gKiAtIENCT1IgdGFnIDY0ICh1aW50OCBUeXBlZCBBcnJheSkgTVVTVCBOT1QgYmUgdXNlZCB3aGVuIGVuY29kaW5nIFVpbnQ4QXJyYXlzIGJhY2sgdG8gQ0JPUlxuICpcbiAqIFNvIGxvbmcgYXMgdGhlc2UgcmVxdWlyZW1lbnRzIGFyZSBtYWludGFpbmVkLCB0aGVuIENCT1Igc2VxdWVuY2VzIGNhbiBiZSBlbmNvZGVkIGFuZCBkZWNvZGVkXG4gKiBmcmVlbHkgd2hpbGUgbWFpbnRhaW5pbmcgdGhlaXIgbGVuZ3RocyBmb3IgdGhlIG1vc3QgYWNjdXJhdGUgcG9pbnRlciBtb3ZlbWVudCBhY3Jvc3MgdGhlbS5cbiAqL1xuLyoqXG4gKiBEZWNvZGUgYW5kIHJldHVybiB0aGUgZmlyc3QgaXRlbSBpbiBhIHNlcXVlbmNlIG9mIENCT1ItZW5jb2RlZCB2YWx1ZXNcbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIENCT1IgZGF0YSB0byBkZWNvZGVcbiAqIEBwYXJhbSBhc09iamVjdCAob3B0aW9uYWwpIFdoZXRoZXIgdG8gY29udmVydCBhbnkgQ0JPUiBNYXBzIGludG8gSmF2YVNjcmlwdCBPYmplY3RzLiBEZWZhdWx0cyB0b1xuICogYGZhbHNlYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlRmlyc3QoaW5wdXQpIHtcbiAgICAvLyBNYWtlIGEgY29weSBzbyB3ZSBkb24ndCBtdXRhdGUgdGhlIG9yaWdpbmFsXG4gICAgY29uc3QgX2lucHV0ID0gbmV3IFVpbnQ4QXJyYXkoaW5wdXQpO1xuICAgIGNvbnN0IGRlY29kZWQgPSB0aW55Q2Jvci5kZWNvZGVQYXJ0aWFsQ0JPUihfaW5wdXQsIDApO1xuICAgIGNvbnN0IFtmaXJzdF0gPSBkZWNvZGVkO1xuICAgIHJldHVybiBmaXJzdDtcbn1cbi8qKlxuICogRW5jb2RlIGRhdGEgdG8gQ0JPUlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7XG4gICAgcmV0dXJuIHRpbnlDYm9yLmVuY29kZUNCT1IoaW5wdXQpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n/**\n * Generate a digest of the provided data.\n *\n * @param data The data to generate a digest of\n * @param algorithm A COSE algorithm ID that maps to a desired SHA algorithm\n */\nasync function digest(data, algorithm) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__.getWebCrypto)();\n    const subtleAlgorithm = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__.mapCoseAlgToWebCryptoAlg)(algorithm);\n    const hashed = await WebCrypto.subtle.digest(subtleAlgorithm, data);\n    return new Uint8Array(hashed);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUU7QUFDeEI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsOERBQVk7QUFDeEMsNEJBQTRCLHNGQUF3QjtBQUNwRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2RpZ2VzdC5qcz9kN2M4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyB9IGZyb20gJy4vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnLmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbi8qKlxuICogR2VuZXJhdGUgYSBkaWdlc3Qgb2YgdGhlIHByb3ZpZGVkIGRhdGEuXG4gKlxuICogQHBhcmFtIGRhdGEgVGhlIGRhdGEgdG8gZ2VuZXJhdGUgYSBkaWdlc3Qgb2ZcbiAqIEBwYXJhbSBhbGdvcml0aG0gQSBDT1NFIGFsZ29yaXRobSBJRCB0aGF0IG1hcHMgdG8gYSBkZXNpcmVkIFNIQSBhbGdvcml0aG1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpZ2VzdChkYXRhLCBhbGdvcml0aG0pIHtcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICBjb25zdCBzdWJ0bGVBbGdvcml0aG0gPSBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoYWxnb3JpdGhtKTtcbiAgICBjb25zdCBoYXNoZWQgPSBhd2FpdCBXZWJDcnlwdG8uc3VidGxlLmRpZ2VzdChzdWJ0bGVBbGdvcml0aG0sIGRhdGEpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShoYXNoZWQpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n/**\n * Fill up the provided bytes array with random bytes equal to its length.\n *\n * @returns the same bytes array passed into the method\n */\nasync function getRandomValues(array) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    WebCrypto.getRandomValues(array);\n    return array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFJhbmRvbVZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsOERBQVk7QUFDeEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9nZXRSYW5kb21WYWx1ZXMuanM/NDk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG4vKipcbiAqIEZpbGwgdXAgdGhlIHByb3ZpZGVkIGJ5dGVzIGFycmF5IHdpdGggcmFuZG9tIGJ5dGVzIGVxdWFsIHRvIGl0cyBsZW5ndGguXG4gKlxuICogQHJldHVybnMgdGhlIHNhbWUgYnl0ZXMgYXJyYXkgcGFzc2VkIGludG8gdGhlIG1ldGhvZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UmFuZG9tVmFsdWVzKGFycmF5KSB7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgV2ViQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyhhcnJheSk7XG4gICAgcmV0dXJuIGFycmF5O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MissingWebCrypto: () => (/* binding */ MissingWebCrypto),\n/* harmony export */   _getWebCryptoInternals: () => (/* binding */ _getWebCryptoInternals),\n/* harmony export */   getWebCrypto: () => (/* binding */ getWebCrypto)\n/* harmony export */ });\nlet webCrypto = undefined;\n/**\n * Try to get an instance of the Crypto API from the current runtime. Should support Node,\n * as well as others, like Deno, that implement Web APIs.\n */\nfunction getWebCrypto() {\n    /**\n     * Hello there! If you came here wondering why this method is asynchronous when use of\n     * `globalThis.crypto` is not, it's to minimize a bunch of refactor related to making this\n     * synchronous. For example, `generateRegistrationOptions()` and `generateAuthenticationOptions()`\n     * become synchronous if we make this synchronous (since nothing else in that method is async)\n     * which represents a breaking API change in this library's core API.\n     *\n     * TODO: If it's after February 2025 when you read this then consider whether it still makes sense\n     * to keep this method asynchronous.\n     */\n    const toResolve = new Promise((resolve, reject) => {\n        if (webCrypto) {\n            return resolve(webCrypto);\n        }\n        /**\n         * Naively attempt to access Crypto as a global object, which popular ESM-centric run-times\n         * support (and Node v20+)\n         */\n        const _globalThisCrypto = _getWebCryptoInternals.stubThisGlobalThisCrypto();\n        if (_globalThisCrypto) {\n            webCrypto = _globalThisCrypto;\n            return resolve(webCrypto);\n        }\n        // We tried to access it both in Node and globally, so bail out\n        return reject(new MissingWebCrypto());\n    });\n    return toResolve;\n}\nclass MissingWebCrypto extends Error {\n    constructor() {\n        const message = 'An instance of the Crypto API could not be located';\n        super(message);\n        this.name = 'MissingWebCrypto';\n    }\n}\n// Make it possible to stub return values during testing\nconst _getWebCryptoInternals = {\n    stubThisGlobalThisCrypto: () => globalThis.crypto,\n    // Make it possible to reset the `webCrypto` at the top of the file\n    setCachedCrypto: (newCrypto) => {\n        webCrypto = newCrypto;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFdlYkNyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFdlYkNyeXB0by5qcz82ZjUzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCB3ZWJDcnlwdG8gPSB1bmRlZmluZWQ7XG4vKipcbiAqIFRyeSB0byBnZXQgYW4gaW5zdGFuY2Ugb2YgdGhlIENyeXB0byBBUEkgZnJvbSB0aGUgY3VycmVudCBydW50aW1lLiBTaG91bGQgc3VwcG9ydCBOb2RlLFxuICogYXMgd2VsbCBhcyBvdGhlcnMsIGxpa2UgRGVubywgdGhhdCBpbXBsZW1lbnQgV2ViIEFQSXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXZWJDcnlwdG8oKSB7XG4gICAgLyoqXG4gICAgICogSGVsbG8gdGhlcmUhIElmIHlvdSBjYW1lIGhlcmUgd29uZGVyaW5nIHdoeSB0aGlzIG1ldGhvZCBpcyBhc3luY2hyb25vdXMgd2hlbiB1c2Ugb2ZcbiAgICAgKiBgZ2xvYmFsVGhpcy5jcnlwdG9gIGlzIG5vdCwgaXQncyB0byBtaW5pbWl6ZSBhIGJ1bmNoIG9mIHJlZmFjdG9yIHJlbGF0ZWQgdG8gbWFraW5nIHRoaXNcbiAgICAgKiBzeW5jaHJvbm91cy4gRm9yIGV4YW1wbGUsIGBnZW5lcmF0ZVJlZ2lzdHJhdGlvbk9wdGlvbnMoKWAgYW5kIGBnZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucygpYFxuICAgICAqIGJlY29tZSBzeW5jaHJvbm91cyBpZiB3ZSBtYWtlIHRoaXMgc3luY2hyb25vdXMgKHNpbmNlIG5vdGhpbmcgZWxzZSBpbiB0aGF0IG1ldGhvZCBpcyBhc3luYylcbiAgICAgKiB3aGljaCByZXByZXNlbnRzIGEgYnJlYWtpbmcgQVBJIGNoYW5nZSBpbiB0aGlzIGxpYnJhcnkncyBjb3JlIEFQSS5cbiAgICAgKlxuICAgICAqIFRPRE86IElmIGl0J3MgYWZ0ZXIgRmVicnVhcnkgMjAyNSB3aGVuIHlvdSByZWFkIHRoaXMgdGhlbiBjb25zaWRlciB3aGV0aGVyIGl0IHN0aWxsIG1ha2VzIHNlbnNlXG4gICAgICogdG8ga2VlcCB0aGlzIG1ldGhvZCBhc3luY2hyb25vdXMuXG4gICAgICovXG4gICAgY29uc3QgdG9SZXNvbHZlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBpZiAod2ViQ3J5cHRvKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZSh3ZWJDcnlwdG8pO1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOYWl2ZWx5IGF0dGVtcHQgdG8gYWNjZXNzIENyeXB0byBhcyBhIGdsb2JhbCBvYmplY3QsIHdoaWNoIHBvcHVsYXIgRVNNLWNlbnRyaWMgcnVuLXRpbWVzXG4gICAgICAgICAqIHN1cHBvcnQgKGFuZCBOb2RlIHYyMCspXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBfZ2xvYmFsVGhpc0NyeXB0byA9IF9nZXRXZWJDcnlwdG9JbnRlcm5hbHMuc3R1YlRoaXNHbG9iYWxUaGlzQ3J5cHRvKCk7XG4gICAgICAgIGlmIChfZ2xvYmFsVGhpc0NyeXB0bykge1xuICAgICAgICAgICAgd2ViQ3J5cHRvID0gX2dsb2JhbFRoaXNDcnlwdG87XG4gICAgICAgICAgICByZXR1cm4gcmVzb2x2ZSh3ZWJDcnlwdG8pO1xuICAgICAgICB9XG4gICAgICAgIC8vIFdlIHRyaWVkIHRvIGFjY2VzcyBpdCBib3RoIGluIE5vZGUgYW5kIGdsb2JhbGx5LCBzbyBiYWlsIG91dFxuICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBNaXNzaW5nV2ViQ3J5cHRvKCkpO1xuICAgIH0pO1xuICAgIHJldHVybiB0b1Jlc29sdmU7XG59XG5leHBvcnQgY2xhc3MgTWlzc2luZ1dlYkNyeXB0byBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9ICdBbiBpbnN0YW5jZSBvZiB0aGUgQ3J5cHRvIEFQSSBjb3VsZCBub3QgYmUgbG9jYXRlZCc7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnTWlzc2luZ1dlYkNyeXB0byc7XG4gICAgfVxufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHJldHVybiB2YWx1ZXMgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfZ2V0V2ViQ3J5cHRvSW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzR2xvYmFsVGhpc0NyeXB0bzogKCkgPT4gZ2xvYmFsVGhpcy5jcnlwdG8sXG4gICAgLy8gTWFrZSBpdCBwb3NzaWJsZSB0byByZXNldCB0aGUgYHdlYkNyeXB0b2AgYXQgdGhlIHRvcCBvZiB0aGUgZmlsZVxuICAgIHNldENhY2hlZENyeXB0bzogKG5ld0NyeXB0bykgPT4ge1xuICAgICAgICB3ZWJDcnlwdG8gPSBuZXdDcnlwdG87XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importKey: () => (/* binding */ importKey)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\nasync function importKey(opts) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    const { keyData, algorithm } = opts;\n    return WebCrypto.subtle.importKey('jwk', keyData, algorithm, false, [\n        'verify',\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2ltcG9ydEtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQztBQUNQLDRCQUE0Qiw4REFBWTtBQUN4QyxZQUFZLHFCQUFxQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vaW1wb3J0S2V5LmpzP2FjNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0V2ViQ3J5cHRvIH0gZnJvbSAnLi9nZXRXZWJDcnlwdG8uanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcG9ydEtleShvcHRzKSB7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgY29uc3QgeyBrZXlEYXRhLCBhbGdvcml0aG0gfSA9IG9wdHM7XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdqd2snLCBrZXlEYXRhLCBhbGdvcml0aG0sIGZhbHNlLCBbXG4gICAgICAgICd2ZXJpZnknLFxuICAgIF0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* reexport safe */ _digest_js__WEBPACK_IMPORTED_MODULE_0__.digest),\n/* harmony export */   getRandomValues: () => (/* reexport safe */ _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__.getRandomValues),\n/* harmony export */   verify: () => (/* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_2__.verify)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\");\n/* harmony import */ var _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRandomValues.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verify.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUNrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vaW5kZXguanM/NThmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkaWdlc3QgfSBmcm9tICcuL2RpZ2VzdC5qcyc7XG5leHBvcnQgeyBnZXRSYW5kb21WYWx1ZXMgfSBmcm9tICcuL2dldFJhbmRvbVZhbHVlcy5qcyc7XG5leHBvcnQgeyB2ZXJpZnkgfSBmcm9tICcuL3ZlcmlmeS5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoAlg: () => (/* binding */ mapCoseAlgToWebCryptoAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding string value that WebCrypto APIs expect\n */\nfunction mapCoseAlgToWebCryptoAlg(alg) {\n    if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'SHA-1';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256].indexOf(alg) >= 0) {\n        return 'SHA-256';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384].indexOf(alg) >= 0) {\n        return 'SHA-384';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA].indexOf(alg) >=\n        0) {\n        return 'SHA-512';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto alg`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMsNkNBQU87QUFDaEI7QUFDQTtBQUNBLGNBQWMsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ25EO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNuRDtBQUNBO0FBQ0EsY0FBYyw2Q0FBTyxRQUFRLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNsRTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsS0FBSztBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnLmpzPzRkNTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUFMRyB9IGZyb20gJy4uLy4uL2Nvc2UuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGEgQ09TRSBhbGcgSUQgaW50byBhIGNvcnJlc3BvbmRpbmcgc3RyaW5nIHZhbHVlIHRoYXQgV2ViQ3J5cHRvIEFQSXMgZXhwZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoYWxnKSB7XG4gICAgaWYgKFtDT1NFQUxHLlJTMV0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdTSEEtMSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLkVTMjU2LCBDT1NFQUxHLlBTMjU2LCBDT1NFQUxHLlJTMjU2XS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1NIQS0yNTYnO1xuICAgIH1cbiAgICBlbHNlIGlmIChbQ09TRUFMRy5FUzM4NCwgQ09TRUFMRy5QUzM4NCwgQ09TRUFMRy5SUzM4NF0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdTSEEtMzg0JztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuRVM1MTIsIENPU0VBTEcuUFM1MTIsIENPU0VBTEcuUlM1MTIsIENPU0VBTEcuRWREU0FdLmluZGV4T2YoYWxnKSA+PVxuICAgICAgICAwKSB7XG4gICAgICAgIHJldHVybiAnU0hBLTUxMic7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IG1hcCBDT1NFIGFsZyB2YWx1ZSBvZiAke2FsZ30gdG8gYSBXZWJDcnlwdG8gYWxnYCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoKeyAlgName: () => (/* binding */ mapCoseAlgToWebCryptoKeyAlgName)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding key algorithm string value that WebCrypto APIs expect\n */\nfunction mapCoseAlgToWebCryptoKeyAlgName(alg) {\n    if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA].indexOf(alg) >= 0) {\n        return 'Ed25519';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256K].indexOf(alg) >= 0) {\n        return 'ECDSA';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'RSASSA-PKCS1-v1_5';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512].indexOf(alg) >= 0) {\n        return 'RSA-PSS';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto key alg name`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDZDQUFPO0FBQ2hCO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ2xFO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ2xFO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNuRDtBQUNBO0FBQ0EsdURBQXVELEtBQUs7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUuanM/ZWMzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQUxHIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYSBDT1NFIGFsZyBJRCBpbnRvIGEgY29ycmVzcG9uZGluZyBrZXkgYWxnb3JpdGhtIHN0cmluZyB2YWx1ZSB0aGF0IFdlYkNyeXB0byBBUElzIGV4cGVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZShhbGcpIHtcbiAgICBpZiAoW0NPU0VBTEcuRWREU0FdLmluZGV4T2YoYWxnKSA+PSAwKSB7XG4gICAgICAgIHJldHVybiAnRWQyNTUxOSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLkVTMjU2LCBDT1NFQUxHLkVTMzg0LCBDT1NFQUxHLkVTNTEyLCBDT1NFQUxHLkVTMjU2S10uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdFQ0RTQSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLlJTMjU2LCBDT1NFQUxHLlJTMzg0LCBDT1NFQUxHLlJTNTEyLCBDT1NFQUxHLlJTMV0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdSU0FTU0EtUEtDUzEtdjFfNSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLlBTMjU2LCBDT1NFQUxHLlBTMzg0LCBDT1NFQUxHLlBTNTEyXS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1JTQS1QU1MnO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBtYXAgQ09TRSBhbGcgdmFsdWUgb2YgJHthbGd9IHRvIGEgV2ViQ3J5cHRvIGtleSBhbGcgbmFtZWApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrapEC2Signature: () => (/* binding */ unwrapEC2Signature)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * In WebAuthn, EC2 signatures are wrapped in ASN.1 structure so we need to peel r and s apart.\n *\n * See https://www.w3.org/TR/webauthn-2/#sctn-signature-attestation-types\n */\nfunction unwrapEC2Signature(signature) {\n    const parsedSignature = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(signature, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECDSASigValue);\n    let rBytes = new Uint8Array(parsedSignature.r);\n    let sBytes = new Uint8Array(parsedSignature.s);\n    if (shouldRemoveLeadingZero(rBytes)) {\n        rBytes = rBytes.slice(1);\n    }\n    if (shouldRemoveLeadingZero(sBytes)) {\n        sBytes = sBytes.slice(1);\n    }\n    const finalSignature = _index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([rBytes, sBytes]);\n    return finalSignature;\n}\n/**\n * Determine if the DER-specific `00` byte at the start of an ECDSA signature byte sequence\n * should be removed based on the following logic:\n *\n * \"If the leading byte is 0x0, and the the high order bit on the second byte is not set to 0,\n * then remove the leading 0x0 byte\"\n */\nfunction shouldRemoveLeadingZero(bytes) {\n    return bytes[0] === 0x0 && (bytes[1] & (1 << 7)) !== 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3Vud3JhcEVDMlNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEQ7QUFDaEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLCtDQUFTLGtCQUFrQixtREFBYTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3Vud3JhcEVDMlNpZ25hdHVyZS5qcz83MmQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgRUNEU0FTaWdWYWx1ZSB9IGZyb20gJy4uLy4uLy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uL2luZGV4LmpzJztcbi8qKlxuICogSW4gV2ViQXV0aG4sIEVDMiBzaWduYXR1cmVzIGFyZSB3cmFwcGVkIGluIEFTTi4xIHN0cnVjdHVyZSBzbyB3ZSBuZWVkIHRvIHBlZWwgciBhbmQgcyBhcGFydC5cbiAqXG4gKiBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL3dlYmF1dGhuLTIvI3NjdG4tc2lnbmF0dXJlLWF0dGVzdGF0aW9uLXR5cGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bndyYXBFQzJTaWduYXR1cmUoc2lnbmF0dXJlKSB7XG4gICAgY29uc3QgcGFyc2VkU2lnbmF0dXJlID0gQXNuUGFyc2VyLnBhcnNlKHNpZ25hdHVyZSwgRUNEU0FTaWdWYWx1ZSk7XG4gICAgbGV0IHJCeXRlcyA9IG5ldyBVaW50OEFycmF5KHBhcnNlZFNpZ25hdHVyZS5yKTtcbiAgICBsZXQgc0J5dGVzID0gbmV3IFVpbnQ4QXJyYXkocGFyc2VkU2lnbmF0dXJlLnMpO1xuICAgIGlmIChzaG91bGRSZW1vdmVMZWFkaW5nWmVybyhyQnl0ZXMpKSB7XG4gICAgICAgIHJCeXRlcyA9IHJCeXRlcy5zbGljZSgxKTtcbiAgICB9XG4gICAgaWYgKHNob3VsZFJlbW92ZUxlYWRpbmdaZXJvKHNCeXRlcykpIHtcbiAgICAgICAgc0J5dGVzID0gc0J5dGVzLnNsaWNlKDEpO1xuICAgIH1cbiAgICBjb25zdCBmaW5hbFNpZ25hdHVyZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFtyQnl0ZXMsIHNCeXRlc10pO1xuICAgIHJldHVybiBmaW5hbFNpZ25hdHVyZTtcbn1cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHRoZSBERVItc3BlY2lmaWMgYDAwYCBieXRlIGF0IHRoZSBzdGFydCBvZiBhbiBFQ0RTQSBzaWduYXR1cmUgYnl0ZSBzZXF1ZW5jZVxuICogc2hvdWxkIGJlIHJlbW92ZWQgYmFzZWQgb24gdGhlIGZvbGxvd2luZyBsb2dpYzpcbiAqXG4gKiBcIklmIHRoZSBsZWFkaW5nIGJ5dGUgaXMgMHgwLCBhbmQgdGhlIHRoZSBoaWdoIG9yZGVyIGJpdCBvbiB0aGUgc2Vjb25kIGJ5dGUgaXMgbm90IHNldCB0byAwLFxuICogdGhlbiByZW1vdmUgdGhlIGxlYWRpbmcgMHgwIGJ5dGVcIlxuICovXG5mdW5jdGlvbiBzaG91bGRSZW1vdmVMZWFkaW5nWmVybyhieXRlcykge1xuICAgIHJldHVybiBieXRlc1swXSA9PT0gMHgwICYmIChieXRlc1sxXSAmICgxIDw8IDcpKSAhPT0gMDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verify: () => (/* binding */ verify)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n/* harmony import */ var _verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verifyOKP.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\");\n/* harmony import */ var _unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unwrapEC2Signature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\");\n\n\n\n\n\n/**\n * Verify signatures with their public key. Supports EC2 and RSA public keys.\n */\nfunction verify(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n        const unwrappedSignature = (0,_unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__.unwrapEC2Signature)(signature);\n        return (0,_verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__.verifyEC2)({\n            cosePublicKey,\n            signature: unwrappedSignature,\n            data,\n            shaHashOverride,\n        });\n    }\n    else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n        return (0,_verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__.verifyRSA)({ cosePublicKey, signature, data, shaHashOverride });\n    }\n    else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyOKP)(cosePublicKey)) {\n        return (0,_verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__.verifyOKP)({ cosePublicKey, signature, data });\n    }\n    const kty = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.kty);\n    throw new Error(`Signature verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0c7QUFDM0Q7QUFDQTtBQUNBO0FBQ2tCO0FBQzdEO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxrREFBa0Q7QUFDOUQsUUFBUSw0REFBa0I7QUFDMUIsbUNBQW1DLDBFQUFrQjtBQUNyRCxlQUFlLHdEQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsYUFBYSw0REFBa0I7QUFDL0IsZUFBZSx3REFBUyxHQUFHLGlEQUFpRDtBQUM1RTtBQUNBLGFBQWEsNERBQWtCO0FBQy9CLGVBQWUsd0RBQVMsR0FBRyxnQ0FBZ0M7QUFDM0Q7QUFDQSxrQ0FBa0MsOENBQVE7QUFDMUMscUVBQXFFLEtBQUs7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeS5qcz8yNjFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VLRVlTLCBpc0NPU0VQdWJsaWNLZXlFQzIsIGlzQ09TRVB1YmxpY0tleU9LUCwgaXNDT1NFUHVibGljS2V5UlNBLCB9IGZyb20gJy4uLy4uL2Nvc2UuanMnO1xuaW1wb3J0IHsgdmVyaWZ5RUMyIH0gZnJvbSAnLi92ZXJpZnlFQzIuanMnO1xuaW1wb3J0IHsgdmVyaWZ5UlNBIH0gZnJvbSAnLi92ZXJpZnlSU0EuanMnO1xuaW1wb3J0IHsgdmVyaWZ5T0tQIH0gZnJvbSAnLi92ZXJpZnlPS1AuanMnO1xuaW1wb3J0IHsgdW53cmFwRUMyU2lnbmF0dXJlIH0gZnJvbSAnLi91bndyYXBFQzJTaWduYXR1cmUuanMnO1xuLyoqXG4gKiBWZXJpZnkgc2lnbmF0dXJlcyB3aXRoIHRoZWlyIHB1YmxpYyBrZXkuIFN1cHBvcnRzIEVDMiBhbmQgUlNBIHB1YmxpYyBrZXlzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5KG9wdHMpIHtcbiAgICBjb25zdCB7IGNvc2VQdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YSwgc2hhSGFzaE92ZXJyaWRlIH0gPSBvcHRzO1xuICAgIGlmIChpc0NPU0VQdWJsaWNLZXlFQzIoY29zZVB1YmxpY0tleSkpIHtcbiAgICAgICAgY29uc3QgdW53cmFwcGVkU2lnbmF0dXJlID0gdW53cmFwRUMyU2lnbmF0dXJlKHNpZ25hdHVyZSk7XG4gICAgICAgIHJldHVybiB2ZXJpZnlFQzIoe1xuICAgICAgICAgICAgY29zZVB1YmxpY0tleSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogdW53cmFwcGVkU2lnbmF0dXJlLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIHNoYUhhc2hPdmVycmlkZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ09TRVB1YmxpY0tleVJTQShjb3NlUHVibGljS2V5KSkge1xuICAgICAgICByZXR1cm4gdmVyaWZ5UlNBKHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ09TRVB1YmxpY0tleU9LUChjb3NlUHVibGljS2V5KSkge1xuICAgICAgICByZXR1cm4gdmVyaWZ5T0tQKHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhIH0pO1xuICAgIH1cbiAgICBjb25zdCBrdHkgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5rdHkpO1xuICAgIHRocm93IG5ldyBFcnJvcihgU2lnbmF0dXJlIHZlcmlmaWNhdGlvbiB3aXRoIHB1YmxpYyBrZXkgb2Yga3R5ICR7a3R5fSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgbWV0aG9kYCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyEC2: () => (/* binding */ verifyEC2)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n/**\n * Verify a signature using an EC2 public key\n */\nasync function verifyEC2(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__.getWebCrypto)();\n    // Import the public key\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    const y = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.y);\n    if (!alg) {\n        throw new Error('Public key was missing alg (EC2)');\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (EC2)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (EC2)');\n    }\n    if (!y) {\n        throw new Error('Public key was missing y (EC2)');\n    }\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P256) {\n        _crv = 'P-256';\n    }\n    else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P384) {\n        _crv = 'P-384';\n    }\n    else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P521) {\n        _crv = 'P-521';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n    const keyData = {\n        kty: 'EC',\n        crv: _crv,\n        x: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(x),\n        y: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(y),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        /**\n         * Note to future self: you can't use `mapCoseAlgToWebCryptoKeyAlgName()` here because some\n         * leaf certs from actual devices specified an RSA SHA value for `alg` (e.g. `-257`) which\n         * would then map here to `'RSASSA-PKCS1-v1_5'`. We always want `'ECDSA'` here so we'll\n         * hard-code this.\n         */\n        name: 'ECDSA',\n        namedCurve: _crv,\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    // Determine which SHA algorithm to use for signature verification\n    let subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg);\n    if (shaHashOverride) {\n        subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    const verifyAlgorithm = {\n        name: 'ECDSA',\n        hash: { name: subtleAlg },\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeUVDMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0Q7QUFDdUI7QUFDOUI7QUFDQTtBQUNNO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxrREFBa0Q7QUFDOUQsNEJBQTRCLDhEQUFZO0FBQ3hDO0FBQ0Esa0NBQWtDLDhDQUFRO0FBQzFDLGtDQUFrQyw4Q0FBUTtBQUMxQyxnQ0FBZ0MsOENBQVE7QUFDeEMsZ0NBQWdDLDhDQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFPO0FBQ3ZCO0FBQ0E7QUFDQSxxQkFBcUIsNkNBQU87QUFDNUI7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsS0FBSztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOERBQXVCO0FBQ2xDLFdBQVcsOERBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3REFBUztBQUMvQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHNGQUF3QjtBQUM1QztBQUNBLG9CQUFvQixzRkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeUVDMi5qcz8xODA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VDUlYsIENPU0VLRVlTIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcgfSBmcm9tICcuL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyc7XG5pbXBvcnQgeyBpbXBvcnRLZXkgfSBmcm9tICcuL2ltcG9ydEtleS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG4vKipcbiAqIFZlcmlmeSBhIHNpZ25hdHVyZSB1c2luZyBhbiBFQzIgcHVibGljIGtleVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5RUMyKG9wdHMpIHtcbiAgICBjb25zdCB7IGNvc2VQdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YSwgc2hhSGFzaE92ZXJyaWRlIH0gPSBvcHRzO1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIC8vIEltcG9ydCB0aGUgcHVibGljIGtleVxuICAgIGNvbnN0IGFsZyA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmFsZyk7XG4gICAgY29uc3QgY3J2ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuY3J2KTtcbiAgICBjb25zdCB4ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMueCk7XG4gICAgY29uc3QgeSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLnkpO1xuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBhbGcgKEVDMiknKTtcbiAgICB9XG4gICAgaWYgKCFjcnYpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIGNydiAoRUMyKScpO1xuICAgIH1cbiAgICBpZiAoIXgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIHggKEVDMiknKTtcbiAgICB9XG4gICAgaWYgKCF5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyB5IChFQzIpJyk7XG4gICAgfVxuICAgIGxldCBfY3J2O1xuICAgIGlmIChjcnYgPT09IENPU0VDUlYuUDI1Nikge1xuICAgICAgICBfY3J2ID0gJ1AtMjU2JztcbiAgICB9XG4gICAgZWxzZSBpZiAoY3J2ID09PSBDT1NFQ1JWLlAzODQpIHtcbiAgICAgICAgX2NydiA9ICdQLTM4NCc7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNydiA9PT0gQ09TRUNSVi5QNTIxKSB7XG4gICAgICAgIF9jcnYgPSAnUC01MjEnO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIENPU0UgY3J2IHZhbHVlIG9mICR7Y3J2fSAoRUMyKWApO1xuICAgIH1cbiAgICBjb25zdCBrZXlEYXRhID0ge1xuICAgICAgICBrdHk6ICdFQycsXG4gICAgICAgIGNydjogX2NydixcbiAgICAgICAgeDogaXNvQmFzZTY0VVJMLmZyb21CdWZmZXIoeCksXG4gICAgICAgIHk6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKHkpLFxuICAgICAgICBleHQ6IGZhbHNlLFxuICAgIH07XG4gICAgY29uc3Qga2V5QWxnb3JpdGhtID0ge1xuICAgICAgICAvKipcbiAgICAgICAgICogTm90ZSB0byBmdXR1cmUgc2VsZjogeW91IGNhbid0IHVzZSBgbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZSgpYCBoZXJlIGJlY2F1c2Ugc29tZVxuICAgICAgICAgKiBsZWFmIGNlcnRzIGZyb20gYWN0dWFsIGRldmljZXMgc3BlY2lmaWVkIGFuIFJTQSBTSEEgdmFsdWUgZm9yIGBhbGdgIChlLmcuIGAtMjU3YCkgd2hpY2hcbiAgICAgICAgICogd291bGQgdGhlbiBtYXAgaGVyZSB0byBgJ1JTQVNTQS1QS0NTMS12MV81J2AuIFdlIGFsd2F5cyB3YW50IGAnRUNEU0EnYCBoZXJlIHNvIHdlJ2xsXG4gICAgICAgICAqIGhhcmQtY29kZSB0aGlzLlxuICAgICAgICAgKi9cbiAgICAgICAgbmFtZTogJ0VDRFNBJyxcbiAgICAgICAgbmFtZWRDdXJ2ZTogX2NydixcbiAgICB9O1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IGltcG9ydEtleSh7XG4gICAgICAgIGtleURhdGEsXG4gICAgICAgIGFsZ29yaXRobToga2V5QWxnb3JpdGhtLFxuICAgIH0pO1xuICAgIC8vIERldGVybWluZSB3aGljaCBTSEEgYWxnb3JpdGhtIHRvIHVzZSBmb3Igc2lnbmF0dXJlIHZlcmlmaWNhdGlvblxuICAgIGxldCBzdWJ0bGVBbGcgPSBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoYWxnKTtcbiAgICBpZiAoc2hhSGFzaE92ZXJyaWRlKSB7XG4gICAgICAgIHN1YnRsZUFsZyA9IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhzaGFIYXNoT3ZlcnJpZGUpO1xuICAgIH1cbiAgICBjb25zdCB2ZXJpZnlBbGdvcml0aG0gPSB7XG4gICAgICAgIG5hbWU6ICdFQ0RTQScsXG4gICAgICAgIGhhc2g6IHsgbmFtZTogc3VidGxlQWxnIH0sXG4gICAgfTtcbiAgICByZXR1cm4gV2ViQ3J5cHRvLnN1YnRsZS52ZXJpZnkodmVyaWZ5QWxnb3JpdGhtLCBrZXksIHNpZ25hdHVyZSwgZGF0YSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyOKP: () => (/* binding */ verifyOKP)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\nasync function verifyOKP(opts) {\n    const { cosePublicKey, signature, data } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    if (!alg) {\n        throw new Error('Public key was missing alg (OKP)');\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (OKP)`);\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (OKP)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (OKP)');\n    }\n    // Pulled key import steps from here:\n    // https://wicg.github.io/webcrypto-secure-curves/#ed25519-operations\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.ED25519) {\n        _crv = 'Ed25519';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (OKP)`);\n    }\n    const keyData = {\n        kty: 'OKP',\n        crv: _crv,\n        alg: 'EdDSA',\n        x: _index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(x),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: _crv,\n        namedCurve: _crv,\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    const verifyAlgorithm = {\n        name: _crv,\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeU9LUC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQUNmO0FBQ0g7QUFDTTtBQUMxQztBQUNQLFlBQVksaUNBQWlDO0FBQzdDLDRCQUE0Qiw4REFBWTtBQUN4QyxrQ0FBa0MsOENBQVE7QUFDMUMsa0NBQWtDLDhDQUFRO0FBQzFDLGdDQUFnQyw4Q0FBUTtBQUN4QztBQUNBO0FBQ0E7QUFDQSxTQUFTLG1EQUFTO0FBQ2xCLHNEQUFzRCxLQUFLO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxLQUFLO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDhEQUF1QjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isd0RBQVM7QUFDL0I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlPS1AuanM/MTAwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQ1JWLCBDT1NFS0VZUywgaXNDT1NFQWxnIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuLi8uLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBpbXBvcnRLZXkgfSBmcm9tICcuL2ltcG9ydEtleS5qcyc7XG5pbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5T0tQKG9wdHMpIHtcbiAgICBjb25zdCB7IGNvc2VQdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YSB9ID0gb3B0cztcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICBjb25zdCBhbGcgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5hbGcpO1xuICAgIGNvbnN0IGNydiA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmNydik7XG4gICAgY29uc3QgeCA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLngpO1xuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBhbGcgKE9LUCknKTtcbiAgICB9XG4gICAgaWYgKCFpc0NPU0VBbGcoYWxnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFB1YmxpYyBrZXkgaGFkIGludmFsaWQgYWxnICR7YWxnfSAoT0tQKWApO1xuICAgIH1cbiAgICBpZiAoIWNydikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgY3J2IChPS1ApJyk7XG4gICAgfVxuICAgIGlmICgheCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgeCAoT0tQKScpO1xuICAgIH1cbiAgICAvLyBQdWxsZWQga2V5IGltcG9ydCBzdGVwcyBmcm9tIGhlcmU6XG4gICAgLy8gaHR0cHM6Ly93aWNnLmdpdGh1Yi5pby93ZWJjcnlwdG8tc2VjdXJlLWN1cnZlcy8jZWQyNTUxOS1vcGVyYXRpb25zXG4gICAgbGV0IF9jcnY7XG4gICAgaWYgKGNydiA9PT0gQ09TRUNSVi5FRDI1NTE5KSB7XG4gICAgICAgIF9jcnYgPSAnRWQyNTUxOSc7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgQ09TRSBjcnYgdmFsdWUgb2YgJHtjcnZ9IChPS1ApYCk7XG4gICAgfVxuICAgIGNvbnN0IGtleURhdGEgPSB7XG4gICAgICAgIGt0eTogJ09LUCcsXG4gICAgICAgIGNydjogX2NydixcbiAgICAgICAgYWxnOiAnRWREU0EnLFxuICAgICAgICB4OiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcih4KSxcbiAgICAgICAgZXh0OiBmYWxzZSxcbiAgICB9O1xuICAgIGNvbnN0IGtleUFsZ29yaXRobSA9IHtcbiAgICAgICAgbmFtZTogX2NydixcbiAgICAgICAgbmFtZWRDdXJ2ZTogX2NydixcbiAgICB9O1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IGltcG9ydEtleSh7XG4gICAgICAgIGtleURhdGEsXG4gICAgICAgIGFsZ29yaXRobToga2V5QWxnb3JpdGhtLFxuICAgIH0pO1xuICAgIGNvbnN0IHZlcmlmeUFsZ29yaXRobSA9IHtcbiAgICAgICAgbmFtZTogX2NydixcbiAgICB9O1xuICAgIHJldHVybiBXZWJDcnlwdG8uc3VidGxlLnZlcmlmeSh2ZXJpZnlBbGdvcml0aG0sIGtleSwgc2lnbmF0dXJlLCBkYXRhKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRSA: () => (/* binding */ verifyRSA)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoKeyAlgName.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n\n/**\n * Verify a signature using an RSA public key\n */\nasync function verifyRSA(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const n = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.n);\n    const e = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.e);\n    if (!alg) {\n        throw new Error('Public key was missing alg (RSA)');\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (RSA)`);\n    }\n    if (!n) {\n        throw new Error('Public key was missing n (RSA)');\n    }\n    if (!e) {\n        throw new Error('Public key was missing e (RSA)');\n    }\n    const keyData = {\n        kty: 'RSA',\n        alg: '',\n        n: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(n),\n        e: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(e),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg),\n        hash: { name: (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg) },\n    };\n    const verifyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg),\n    };\n    if (shaHashOverride) {\n        keyAlgorithm.hash.name = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    if (keyAlgorithm.name === 'RSASSA-PKCS1-v1_5') {\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'RS256';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'RS384';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'RS512';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-1') {\n            keyData.alg = 'RS1';\n        }\n    }\n    else if (keyAlgorithm.name === 'RSA-PSS') {\n        /**\n         * salt length. The default value is 20 but the convention is to use hLen, the length of the\n         * output of the hash function in bytes. A salt length of zero is permitted and will result in\n         * a deterministic signature value. The actual salt length used can be determined from the\n         * signature value.\n         *\n         * From https://www.cryptosys.net/pki/manpki/pki_rsaschemes.html\n         */\n        let saltLength = 0;\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'PS256';\n            saltLength = 32; // 256 bits => 32 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'PS384';\n            saltLength = 48; // 384 bits => 48 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'PS512';\n            saltLength = 64; // 512 bits => 64 bytes\n        }\n        verifyAlgorithm.saltLength = saltLength;\n    }\n    else {\n        throw new Error(`Unexpected RSA key algorithm ${alg} (${keyAlgorithm.name})`);\n    }\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeVJTQS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9EO0FBQ3FCO0FBQzlCO0FBQ0E7QUFDNEM7QUFDdEM7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLGtEQUFrRDtBQUM5RCw0QkFBNEIsOERBQVk7QUFDeEMsa0NBQWtDLDhDQUFRO0FBQzFDLGdDQUFnQyw4Q0FBUTtBQUN4QyxnQ0FBZ0MsOENBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtREFBUztBQUNsQixzREFBc0QsS0FBSztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOERBQXVCO0FBQ2xDLFdBQVcsOERBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsb0dBQStCO0FBQzdDLGdCQUFnQixNQUFNLHNGQUF3QixPQUFPO0FBQ3JEO0FBQ0E7QUFDQSxjQUFjLG9HQUErQjtBQUM3QztBQUNBO0FBQ0EsaUNBQWlDLHNGQUF3QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxLQUFLLEdBQUcsa0JBQWtCO0FBQ2xGO0FBQ0Esc0JBQXNCLHdEQUFTO0FBQy9CO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5UlNBLmpzPzY1MmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUtFWVMsIGlzQ09TRUFsZyB9IGZyb20gJy4uLy4uL2Nvc2UuanMnO1xuaW1wb3J0IHsgbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnIH0gZnJvbSAnLi9tYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcuanMnO1xuaW1wb3J0IHsgaW1wb3J0S2V5IH0gZnJvbSAnLi9pbXBvcnRLZXkuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi4vaW5kZXguanMnO1xuaW1wb3J0IHsgbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZSB9IGZyb20gJy4vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZS5qcyc7XG5pbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG4vKipcbiAqIFZlcmlmeSBhIHNpZ25hdHVyZSB1c2luZyBhbiBSU0EgcHVibGljIGtleVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5UlNBKG9wdHMpIHtcbiAgICBjb25zdCB7IGNvc2VQdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YSwgc2hhSGFzaE92ZXJyaWRlIH0gPSBvcHRzO1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIGNvbnN0IGFsZyA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmFsZyk7XG4gICAgY29uc3QgbiA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLm4pO1xuICAgIGNvbnN0IGUgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5lKTtcbiAgICBpZiAoIWFsZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgYWxnIChSU0EpJyk7XG4gICAgfVxuICAgIGlmICghaXNDT1NFQWxnKGFsZykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQdWJsaWMga2V5IGhhZCBpbnZhbGlkIGFsZyAke2FsZ30gKFJTQSlgKTtcbiAgICB9XG4gICAgaWYgKCFuKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBuIChSU0EpJyk7XG4gICAgfVxuICAgIGlmICghZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgZSAoUlNBKScpO1xuICAgIH1cbiAgICBjb25zdCBrZXlEYXRhID0ge1xuICAgICAgICBrdHk6ICdSU0EnLFxuICAgICAgICBhbGc6ICcnLFxuICAgICAgICBuOiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihuKSxcbiAgICAgICAgZTogaXNvQmFzZTY0VVJMLmZyb21CdWZmZXIoZSksXG4gICAgICAgIGV4dDogZmFsc2UsXG4gICAgfTtcbiAgICBjb25zdCBrZXlBbGdvcml0aG0gPSB7XG4gICAgICAgIG5hbWU6IG1hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUoYWxnKSxcbiAgICAgICAgaGFzaDogeyBuYW1lOiBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoYWxnKSB9LFxuICAgIH07XG4gICAgY29uc3QgdmVyaWZ5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiBtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lKGFsZyksXG4gICAgfTtcbiAgICBpZiAoc2hhSGFzaE92ZXJyaWRlKSB7XG4gICAgICAgIGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPSBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoc2hhSGFzaE92ZXJyaWRlKTtcbiAgICB9XG4gICAgaWYgKGtleUFsZ29yaXRobS5uYW1lID09PSAnUlNBU1NBLVBLQ1MxLXYxXzUnKSB7XG4gICAgICAgIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTI1NicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1JTMjU2JztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTM4NCcpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1JTMzg0JztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTUxMicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1JTNTEyJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTEnKSB7XG4gICAgICAgICAgICBrZXlEYXRhLmFsZyA9ICdSUzEnO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5uYW1lID09PSAnUlNBLVBTUycpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHNhbHQgbGVuZ3RoLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAyMCBidXQgdGhlIGNvbnZlbnRpb24gaXMgdG8gdXNlIGhMZW4sIHRoZSBsZW5ndGggb2YgdGhlXG4gICAgICAgICAqIG91dHB1dCBvZiB0aGUgaGFzaCBmdW5jdGlvbiBpbiBieXRlcy4gQSBzYWx0IGxlbmd0aCBvZiB6ZXJvIGlzIHBlcm1pdHRlZCBhbmQgd2lsbCByZXN1bHQgaW5cbiAgICAgICAgICogYSBkZXRlcm1pbmlzdGljIHNpZ25hdHVyZSB2YWx1ZS4gVGhlIGFjdHVhbCBzYWx0IGxlbmd0aCB1c2VkIGNhbiBiZSBkZXRlcm1pbmVkIGZyb20gdGhlXG4gICAgICAgICAqIHNpZ25hdHVyZSB2YWx1ZS5cbiAgICAgICAgICpcbiAgICAgICAgICogRnJvbSBodHRwczovL3d3dy5jcnlwdG9zeXMubmV0L3BraS9tYW5wa2kvcGtpX3JzYXNjaGVtZXMuaHRtbFxuICAgICAgICAgKi9cbiAgICAgICAgbGV0IHNhbHRMZW5ndGggPSAwO1xuICAgICAgICBpZiAoa2V5QWxnb3JpdGhtLmhhc2gubmFtZSA9PT0gJ1NIQS0yNTYnKSB7XG4gICAgICAgICAgICBrZXlEYXRhLmFsZyA9ICdQUzI1Nic7XG4gICAgICAgICAgICBzYWx0TGVuZ3RoID0gMzI7IC8vIDI1NiBiaXRzID0+IDMyIGJ5dGVzXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoa2V5QWxnb3JpdGhtLmhhc2gubmFtZSA9PT0gJ1NIQS0zODQnKSB7XG4gICAgICAgICAgICBrZXlEYXRhLmFsZyA9ICdQUzM4NCc7XG4gICAgICAgICAgICBzYWx0TGVuZ3RoID0gNDg7IC8vIDM4NCBiaXRzID0+IDQ4IGJ5dGVzXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoa2V5QWxnb3JpdGhtLmhhc2gubmFtZSA9PT0gJ1NIQS01MTInKSB7XG4gICAgICAgICAgICBrZXlEYXRhLmFsZyA9ICdQUzUxMic7XG4gICAgICAgICAgICBzYWx0TGVuZ3RoID0gNjQ7IC8vIDUxMiBiaXRzID0+IDY0IGJ5dGVzXG4gICAgICAgIH1cbiAgICAgICAgdmVyaWZ5QWxnb3JpdGhtLnNhbHRMZW5ndGggPSBzYWx0TGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIFJTQSBrZXkgYWxnb3JpdGhtICR7YWxnfSAoJHtrZXlBbGdvcml0aG0ubmFtZX0pYCk7XG4gICAgfVxuICAgIGNvbnN0IGtleSA9IGF3YWl0IGltcG9ydEtleSh7XG4gICAgICAgIGtleURhdGEsXG4gICAgICAgIGFsZ29yaXRobToga2V5QWxnb3JpdGhtLFxuICAgIH0pO1xuICAgIHJldHVybiBXZWJDcnlwdG8uc3VidGxlLnZlcmlmeSh2ZXJpZnlBbGdvcml0aG0sIGtleSwgc2lnbmF0dXJlLCBkYXRhKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areEqual: () => (/* binding */ areEqual),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromASCIIString: () => (/* binding */ fromASCIIString),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUTF8String: () => (/* binding */ fromUTF8String),\n/* harmony export */   toDataView: () => (/* binding */ toDataView),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUTF8String: () => (/* binding */ toUTF8String)\n/* harmony export */ });\n/**\n * Make sure two Uint8Arrays are deeply equivalent\n */\nfunction areEqual(array1, array2) {\n    if (array1.length != array2.length) {\n        return false;\n    }\n    return array1.every((val, i) => val === array2[i]);\n}\n/**\n * Convert a Uint8Array to Hexadecimal.\n *\n * A replacement for `Buffer.toString('hex')`\n */\nfunction toHex(array) {\n    const hexParts = Array.from(array, (i) => i.toString(16).padStart(2, '0'));\n    // adce000235bcc60a648b0b25f1f05503\n    return hexParts.join('');\n}\n/**\n * Convert a hexadecimal string to isoUint8Array.\n *\n * A replacement for `Buffer.from('...', 'hex')`\n */\nfunction fromHex(hex) {\n    if (!hex) {\n        return Uint8Array.from([]);\n    }\n    const isValid = hex.length !== 0 && hex.length % 2 === 0 &&\n        !/[^a-fA-F0-9]/u.test(hex);\n    if (!isValid) {\n        throw new Error('Invalid hex string');\n    }\n    const byteStrings = hex.match(/.{1,2}/g) ?? [];\n    return Uint8Array.from(byteStrings.map((byte) => parseInt(byte, 16)));\n}\n/**\n * Combine multiple Uint8Arrays into a single Uint8Array\n */\nfunction concat(arrays) {\n    let pointer = 0;\n    const totalLength = arrays.reduce((prev, curr) => prev + curr.length, 0);\n    const toReturn = new Uint8Array(totalLength);\n    arrays.forEach((arr) => {\n        toReturn.set(arr, pointer);\n        pointer += arr.length;\n    });\n    return toReturn;\n}\n/**\n * Convert bytes into a UTF-8 string\n */\nfunction toUTF8String(array) {\n    const decoder = new globalThis.TextDecoder('utf-8');\n    return decoder.decode(array);\n}\n/**\n * Convert a UTF-8 string back into bytes\n */\nfunction fromUTF8String(utf8String) {\n    const encoder = new globalThis.TextEncoder();\n    return encoder.encode(utf8String);\n}\n/**\n * Convert an ASCII string to Uint8Array\n */\nfunction fromASCIIString(value) {\n    return Uint8Array.from(value.split('').map((x) => x.charCodeAt(0)));\n}\n/**\n * Prepare a DataView we can slice our way around in as we parse the bytes in a Uint8Array\n */\nfunction toDataView(array) {\n    return new DataView(array.buffer, array.byteOffset, array.length);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvVWludDhBcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxJQUFJO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29VaW50OEFycmF5LmpzP2U5YmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYWtlIHN1cmUgdHdvIFVpbnQ4QXJyYXlzIGFyZSBkZWVwbHkgZXF1aXZhbGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gYXJlRXF1YWwoYXJyYXkxLCBhcnJheTIpIHtcbiAgICBpZiAoYXJyYXkxLmxlbmd0aCAhPSBhcnJheTIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5MS5ldmVyeSgodmFsLCBpKSA9PiB2YWwgPT09IGFycmF5MltpXSk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBVaW50OEFycmF5IHRvIEhleGFkZWNpbWFsLlxuICpcbiAqIEEgcmVwbGFjZW1lbnQgZm9yIGBCdWZmZXIudG9TdHJpbmcoJ2hleCcpYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoYXJyYXkpIHtcbiAgICBjb25zdCBoZXhQYXJ0cyA9IEFycmF5LmZyb20oYXJyYXksIChpKSA9PiBpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpKTtcbiAgICAvLyBhZGNlMDAwMjM1YmNjNjBhNjQ4YjBiMjVmMWYwNTUwM1xuICAgIHJldHVybiBoZXhQYXJ0cy5qb2luKCcnKTtcbn1cbi8qKlxuICogQ29udmVydCBhIGhleGFkZWNpbWFsIHN0cmluZyB0byBpc29VaW50OEFycmF5LlxuICpcbiAqIEEgcmVwbGFjZW1lbnQgZm9yIGBCdWZmZXIuZnJvbSgnLi4uJywgJ2hleCcpYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBpZiAoIWhleCkge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKFtdKTtcbiAgICB9XG4gICAgY29uc3QgaXNWYWxpZCA9IGhleC5sZW5ndGggIT09IDAgJiYgaGV4Lmxlbmd0aCAlIDIgPT09IDAgJiZcbiAgICAgICAgIS9bXmEtZkEtRjAtOV0vdS50ZXN0KGhleCk7XG4gICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBoZXggc3RyaW5nJyk7XG4gICAgfVxuICAgIGNvbnN0IGJ5dGVTdHJpbmdzID0gaGV4Lm1hdGNoKC8uezEsMn0vZykgPz8gW107XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShieXRlU3RyaW5ncy5tYXAoKGJ5dGUpID0+IHBhcnNlSW50KGJ5dGUsIDE2KSkpO1xufVxuLyoqXG4gKiBDb21iaW5lIG11bHRpcGxlIFVpbnQ4QXJyYXlzIGludG8gYSBzaW5nbGUgVWludDhBcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KGFycmF5cykge1xuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCB0b3RhbExlbmd0aCA9IGFycmF5cy5yZWR1Y2UoKHByZXYsIGN1cnIpID0+IHByZXYgKyBjdXJyLmxlbmd0aCwgMCk7XG4gICAgY29uc3QgdG9SZXR1cm4gPSBuZXcgVWludDhBcnJheSh0b3RhbExlbmd0aCk7XG4gICAgYXJyYXlzLmZvckVhY2goKGFycikgPT4ge1xuICAgICAgICB0b1JldHVybi5zZXQoYXJyLCBwb2ludGVyKTtcbiAgICAgICAgcG9pbnRlciArPSBhcnIubGVuZ3RoO1xuICAgIH0pO1xuICAgIHJldHVybiB0b1JldHVybjtcbn1cbi8qKlxuICogQ29udmVydCBieXRlcyBpbnRvIGEgVVRGLTggc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1VURjhTdHJpbmcoYXJyYXkpIHtcbiAgICBjb25zdCBkZWNvZGVyID0gbmV3IGdsb2JhbFRoaXMuVGV4dERlY29kZXIoJ3V0Zi04Jyk7XG4gICAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGFycmF5KTtcbn1cbi8qKlxuICogQ29udmVydCBhIFVURi04IHN0cmluZyBiYWNrIGludG8gYnl0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21VVEY4U3RyaW5nKHV0ZjhTdHJpbmcpIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IGdsb2JhbFRoaXMuVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodXRmOFN0cmluZyk7XG59XG4vKipcbiAqIENvbnZlcnQgYW4gQVNDSUkgc3RyaW5nIHRvIFVpbnQ4QXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21BU0NJSVN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odmFsdWUuc3BsaXQoJycpLm1hcCgoeCkgPT4geC5jaGFyQ29kZUF0KDApKSk7XG59XG4vKipcbiAqIFByZXBhcmUgYSBEYXRhVmlldyB3ZSBjYW4gc2xpY2Ugb3VyIHdheSBhcm91bmQgaW4gYXMgd2UgcGFyc2UgdGhlIGJ5dGVzIGluIGEgVWludDhBcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9EYXRhVmlldyhhcnJheSkge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcoYXJyYXkuYnVmZmVyLCBhcnJheS5ieXRlT2Zmc2V0LCBhcnJheS5sZW5ndGgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js":
/*!********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/logging.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLogger: () => (/* binding */ getLogger)\n/* harmony export */ });\n// import { debug, Debugger } from '../deps.ts';\n// const defaultLogger = debug('SimpleWebAuthn');\n/**\n * Generate an instance of a `debug` logger that extends off of the \"simplewebauthn\" namespace for\n * consistent naming.\n *\n * See https://www.npmjs.com/package/debug for information on how to control logging output when\n * using @simplewebauthn/server\n *\n * Example:\n *\n * ```\n * const log = getLogger('mds');\n * log('hello'); // simplewebauthn:mds hello +0ms\n * ```\n */\nfunction getLogger(_name) {\n    // This is a noop for now while I search for a better debug logger technique\n    return (_message, ..._rest) => { };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxZQUFZLGtCQUFrQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvbG9nZ2luZy5qcz85OTk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGRlYnVnLCBEZWJ1Z2dlciB9IGZyb20gJy4uL2RlcHMudHMnO1xuLy8gY29uc3QgZGVmYXVsdExvZ2dlciA9IGRlYnVnKCdTaW1wbGVXZWJBdXRobicpO1xuLyoqXG4gKiBHZW5lcmF0ZSBhbiBpbnN0YW5jZSBvZiBhIGBkZWJ1Z2AgbG9nZ2VyIHRoYXQgZXh0ZW5kcyBvZmYgb2YgdGhlIFwic2ltcGxld2ViYXV0aG5cIiBuYW1lc3BhY2UgZm9yXG4gKiBjb25zaXN0ZW50IG5hbWluZy5cbiAqXG4gKiBTZWUgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZGVidWcgZm9yIGluZm9ybWF0aW9uIG9uIGhvdyB0byBjb250cm9sIGxvZ2dpbmcgb3V0cHV0IHdoZW5cbiAqIHVzaW5nIEBzaW1wbGV3ZWJhdXRobi9zZXJ2ZXJcbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYFxuICogY29uc3QgbG9nID0gZ2V0TG9nZ2VyKCdtZHMnKTtcbiAqIGxvZygnaGVsbG8nKTsgLy8gc2ltcGxld2ViYXV0aG46bWRzIGhlbGxvICswbXNcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9nZ2VyKF9uYW1lKSB7XG4gICAgLy8gVGhpcyBpcyBhIG5vb3AgZm9yIG5vdyB3aGlsZSBJIHNlYXJjaCBmb3IgYSBiZXR0ZXIgZGVidWcgbG9nZ2VyIHRlY2huaXF1ZVxuICAgIHJldHVybiAoX21lc3NhZ2UsIC4uLl9yZXN0KSA9PiB7IH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapX509SignatureAlgToCOSEAlg: () => (/* binding */ mapX509SignatureAlgToCOSEAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Map X.509 signature algorithm OIDs to COSE algorithm IDs\n *\n * - EC2 OIDs: https://oidref.com/1.2.840.10045.4.3\n * - RSA OIDs: https://oidref.com/1.2.840.113549.1.1\n */\nfunction mapX509SignatureAlgToCOSEAlg(signatureAlgorithm) {\n    let alg;\n    if (signatureAlgorithm === '1.2.840.10045.4.3.2') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.3') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.4') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.11') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.12') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.13') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.5') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1;\n    }\n    else {\n        throw new Error(`Unable to map X.509 signature algorithm ${signatureAlgorithm} to a COSE algorithm`);\n    }\n    return alg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLG1FQUFtRSxvQkFBb0I7QUFDdkY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZy5qcz9lZmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VBTEcgfSBmcm9tICcuL2Nvc2UuanMnO1xuLyoqXG4gKiBNYXAgWC41MDkgc2lnbmF0dXJlIGFsZ29yaXRobSBPSURzIHRvIENPU0UgYWxnb3JpdGhtIElEc1xuICpcbiAqIC0gRUMyIE9JRHM6IGh0dHBzOi8vb2lkcmVmLmNvbS8xLjIuODQwLjEwMDQ1LjQuM1xuICogLSBSU0EgT0lEczogaHR0cHM6Ly9vaWRyZWYuY29tLzEuMi44NDAuMTEzNTQ5LjEuMVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyhzaWduYXR1cmVBbGdvcml0aG0pIHtcbiAgICBsZXQgYWxnO1xuICAgIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjEwMDQ1LjQuMy4yJykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLkVTMjU2O1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjEwMDQ1LjQuMy4zJykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLkVTMzg0O1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjEwMDQ1LjQuMy40Jykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLkVTNTEyO1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjExMzU0OS4xLjEuMTEnKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuUlMyNTY7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS4xMicpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5SUzM4NDtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMTM1NDkuMS4xLjEzJykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLlJTNTEyO1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjExMzU0OS4xLjEuNScpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5SUzE7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtYXAgWC41MDkgc2lnbmF0dXJlIGFsZ29yaXRobSAke3NpZ25hdHVyZUFsZ29yaXRobX0gdG8gYSBDT1NFIGFsZ29yaXRobWApO1xuICAgIH1cbiAgICByZXR1cm4gYWxnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matchExpectedRPID: () => (/* binding */ matchExpectedRPID)\n/* harmony export */ });\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Go through each expected RP ID and try to find one that matches. Returns the unhashed RP ID\n * that matched the hash in the response.\n *\n * Raises an `UnexpectedRPIDHash` error if no match is found\n */\nasync function matchExpectedRPID(rpIDHash, expectedRPIDs) {\n    try {\n        const matchedRPID = await Promise.any(expectedRPIDs.map((expected) => {\n            return new Promise((resolve, reject) => {\n                (0,_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromASCIIString(expected)).then((expectedRPIDHash) => {\n                    if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(rpIDHash, expectedRPIDHash)) {\n                        resolve(expected);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }));\n        return matchedRPID;\n    }\n    catch (err) {\n        const _err = err;\n        // This means no matches were found\n        if (_err.name === 'AggregateError') {\n            throw new UnexpectedRPIDHash();\n        }\n        // An unexpected error occurred\n        throw err;\n    }\n}\nclass UnexpectedRPIDHash extends Error {\n    constructor() {\n        const message = 'Unexpected RP ID hash';\n        super(message);\n        this.name = 'UnexpectedRPIDHash';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXRjaEV4cGVjdGVkUlBJRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrREFBTSxDQUFDLHdFQUE2QjtBQUNwRCx3QkFBd0IsaUVBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL21hdGNoRXhwZWN0ZWRSUElELmpzPzc3YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9IYXNoIH0gZnJvbSAnLi90b0hhc2guanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogR28gdGhyb3VnaCBlYWNoIGV4cGVjdGVkIFJQIElEIGFuZCB0cnkgdG8gZmluZCBvbmUgdGhhdCBtYXRjaGVzLiBSZXR1cm5zIHRoZSB1bmhhc2hlZCBSUCBJRFxuICogdGhhdCBtYXRjaGVkIHRoZSBoYXNoIGluIHRoZSByZXNwb25zZS5cbiAqXG4gKiBSYWlzZXMgYW4gYFVuZXhwZWN0ZWRSUElESGFzaGAgZXJyb3IgaWYgbm8gbWF0Y2ggaXMgZm91bmRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1hdGNoRXhwZWN0ZWRSUElEKHJwSURIYXNoLCBleHBlY3RlZFJQSURzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgbWF0Y2hlZFJQSUQgPSBhd2FpdCBQcm9taXNlLmFueShleHBlY3RlZFJQSURzLm1hcCgoZXhwZWN0ZWQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgdG9IYXNoKGlzb1VpbnQ4QXJyYXkuZnJvbUFTQ0lJU3RyaW5nKGV4cGVjdGVkKSkudGhlbigoZXhwZWN0ZWRSUElESGFzaCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNvVWludDhBcnJheS5hcmVFcXVhbChycElESGFzaCwgZXhwZWN0ZWRSUElESGFzaCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZXhwZWN0ZWQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBtYXRjaGVkUlBJRDtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAvLyBUaGlzIG1lYW5zIG5vIG1hdGNoZXMgd2VyZSBmb3VuZFxuICAgICAgICBpZiAoX2Vyci5uYW1lID09PSAnQWdncmVnYXRlRXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVW5leHBlY3RlZFJQSURIYXNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQW4gdW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZFxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxufVxuY2xhc3MgVW5leHBlY3RlZFJQSURIYXNoIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gJ1VuZXhwZWN0ZWQgUlAgSUQgaGFzaCc7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnVW5leHBlY3RlZFJQSURIYXNoJztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _parseAuthenticatorDataInternals: () => (/* binding */ _parseAuthenticatorDataInternals),\n/* harmony export */   parseAuthenticatorData: () => (/* binding */ parseAuthenticatorData)\n/* harmony export */ });\n/* harmony import */ var _decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decodeAuthenticatorExtensions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Make sense of the authData buffer contained in an Attestation\n */\nfunction parseAuthenticatorData(authData) {\n    if (authData.byteLength < 37) {\n        throw new Error(`Authenticator data was ${authData.byteLength} bytes, expected at least 37 bytes`);\n    }\n    let pointer = 0;\n    const dataView = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(authData);\n    const rpIdHash = authData.slice(pointer, pointer += 32);\n    const flagsBuf = authData.slice(pointer, pointer += 1);\n    const flagsInt = flagsBuf[0];\n    // Bit positions can be referenced here:\n    // https://www.w3.org/TR/webauthn-2/#flags\n    const flags = {\n        up: !!(flagsInt & (1 << 0)),\n        uv: !!(flagsInt & (1 << 2)),\n        be: !!(flagsInt & (1 << 3)),\n        bs: !!(flagsInt & (1 << 4)),\n        at: !!(flagsInt & (1 << 6)),\n        ed: !!(flagsInt & (1 << 7)),\n        flagsInt,\n    };\n    const counterBuf = authData.slice(pointer, pointer + 4);\n    const counter = dataView.getUint32(pointer, false);\n    pointer += 4;\n    let aaguid = undefined;\n    let credentialID = undefined;\n    let credentialPublicKey = undefined;\n    if (flags.at) {\n        aaguid = authData.slice(pointer, pointer += 16);\n        const credIDLen = dataView.getUint16(pointer);\n        pointer += 2;\n        credentialID = authData.slice(pointer, pointer += credIDLen);\n        /**\n         * Firefox 117 incorrectly CBOR-encodes authData when EdDSA (-8) is used for the public key.\n         * A CBOR \"Map of 3 items\" (0xa3) should be \"Map of 4 items\" (0xa4), and if we manually adjust\n         * the single byte there's a good chance the authData can be correctly parsed.\n         *\n         * This browser release also incorrectly uses the string labels \"OKP\" and \"Ed25519\" instead of\n         * their integer representations for kty and crv respectively. That's why the COSE public key\n         * in the hex below looks so odd.\n         */\n        // Bytes decode to `{ 1: \"OKP\", 3: -8, -1: \"Ed25519\" }` (it's missing key -2 a.k.a. COSEKEYS.x)\n        const badEdDSACBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromHex('a301634f4b500327206745643235353139');\n        const bytesAtCurrentPosition = authData.slice(pointer, pointer + badEdDSACBOR.byteLength);\n        let foundBadCBOR = false;\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(badEdDSACBOR, bytesAtCurrentPosition)) {\n            // Change the bad CBOR 0xa3 to 0xa4 so that the credential public key can be recognized\n            foundBadCBOR = true;\n            authData[pointer] = 0xa4;\n        }\n        // Decode the next CBOR item in the buffer, then re-encode it back to a Buffer\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        const firstEncoded = Uint8Array.from(\n        /**\n         * Casting to `Map` via `as unknown` here because TS doesn't make it possible to define Maps\n         * with discrete keys and properties with known types per pair, and CBOR libs typically parse\n         * CBOR Major Type 5 to `Map` because you can have numbers for keys. A `COSEPublicKey` can be\n         * generalized as \"a Map with numbers for keys and either numbers or bytes for values\" though.\n         * If this presumption falls apart then other parts of verification later on will fail so we\n         * should be safe doing this here.\n         */\n        _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        if (foundBadCBOR) {\n            // Restore the bit we changed so that `authData` is the same as it came in and won't break\n            // signature verification.\n            authData[pointer] = 0xa3;\n        }\n        credentialPublicKey = firstEncoded;\n        pointer += firstEncoded.byteLength;\n    }\n    let extensionsData = undefined;\n    let extensionsDataBuffer = undefined;\n    if (flags.ed) {\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        extensionsDataBuffer = Uint8Array.from(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        extensionsData = (0,_decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__.decodeAuthenticatorExtensions)(extensionsDataBuffer);\n        pointer += extensionsDataBuffer.byteLength;\n    }\n    // Pointer should be at the end of the authenticator data, otherwise too much data was sent\n    if (authData.byteLength > pointer) {\n        throw new Error('Leftover bytes detected while parsing authenticator data');\n    }\n    return _parseAuthenticatorDataInternals.stubThis({\n        rpIdHash,\n        flagsBuf,\n        flags,\n        counter,\n        counterBuf,\n        aaguid,\n        credentialID,\n        credentialPublicKey,\n        extensionsData,\n        extensionsDataBuffer,\n    });\n}\n// Make it possible to stub the return value during testing\nconst _parseAuthenticatorDataInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUF1dGhlbnRpY2F0b3JEYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Y7QUFDNUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtEQUFrRCxxQkFBcUI7QUFDdkU7QUFDQTtBQUNBLHFCQUFxQixtRUFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlELDZCQUE2QixnRUFBcUI7QUFDbEQ7QUFDQTtBQUNBLFlBQVksaUVBQXNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsOERBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBbUI7QUFDaEQsK0NBQStDLHlEQUFjO0FBQzdELHlCQUF5QixnR0FBNkI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvcGFyc2VBdXRoZW50aWNhdG9yRGF0YS5qcz9iMTI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlY29kZUF1dGhlbnRpY2F0b3JFeHRlbnNpb25zLCB9IGZyb20gJy4vZGVjb2RlQXV0aGVudGljYXRvckV4dGVuc2lvbnMuanMnO1xuaW1wb3J0IHsgaXNvQ0JPUiwgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogTWFrZSBzZW5zZSBvZiB0aGUgYXV0aERhdGEgYnVmZmVyIGNvbnRhaW5lZCBpbiBhbiBBdHRlc3RhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBdXRoZW50aWNhdG9yRGF0YShhdXRoRGF0YSkge1xuICAgIGlmIChhdXRoRGF0YS5ieXRlTGVuZ3RoIDwgMzcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBdXRoZW50aWNhdG9yIGRhdGEgd2FzICR7YXV0aERhdGEuYnl0ZUxlbmd0aH0gYnl0ZXMsIGV4cGVjdGVkIGF0IGxlYXN0IDM3IGJ5dGVzYCk7XG4gICAgfVxuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCBkYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhhdXRoRGF0YSk7XG4gICAgY29uc3QgcnBJZEhhc2ggPSBhdXRoRGF0YS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDMyKTtcbiAgICBjb25zdCBmbGFnc0J1ZiA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gMSk7XG4gICAgY29uc3QgZmxhZ3NJbnQgPSBmbGFnc0J1ZlswXTtcbiAgICAvLyBCaXQgcG9zaXRpb25zIGNhbiBiZSByZWZlcmVuY2VkIGhlcmU6XG4gICAgLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL3dlYmF1dGhuLTIvI2ZsYWdzXG4gICAgY29uc3QgZmxhZ3MgPSB7XG4gICAgICAgIHVwOiAhIShmbGFnc0ludCAmICgxIDw8IDApKSxcbiAgICAgICAgdXY6ICEhKGZsYWdzSW50ICYgKDEgPDwgMikpLFxuICAgICAgICBiZTogISEoZmxhZ3NJbnQgJiAoMSA8PCAzKSksXG4gICAgICAgIGJzOiAhIShmbGFnc0ludCAmICgxIDw8IDQpKSxcbiAgICAgICAgYXQ6ICEhKGZsYWdzSW50ICYgKDEgPDwgNikpLFxuICAgICAgICBlZDogISEoZmxhZ3NJbnQgJiAoMSA8PCA3KSksXG4gICAgICAgIGZsYWdzSW50LFxuICAgIH07XG4gICAgY29uc3QgY291bnRlckJ1ZiA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKyA0KTtcbiAgICBjb25zdCBjb3VudGVyID0gZGF0YVZpZXcuZ2V0VWludDMyKHBvaW50ZXIsIGZhbHNlKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgbGV0IGFhZ3VpZCA9IHVuZGVmaW5lZDtcbiAgICBsZXQgY3JlZGVudGlhbElEID0gdW5kZWZpbmVkO1xuICAgIGxldCBjcmVkZW50aWFsUHVibGljS2V5ID0gdW5kZWZpbmVkO1xuICAgIGlmIChmbGFncy5hdCkge1xuICAgICAgICBhYWd1aWQgPSBhdXRoRGF0YS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDE2KTtcbiAgICAgICAgY29uc3QgY3JlZElETGVuID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNyZWRlbnRpYWxJRCA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gY3JlZElETGVuKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpcmVmb3ggMTE3IGluY29ycmVjdGx5IENCT1ItZW5jb2RlcyBhdXRoRGF0YSB3aGVuIEVkRFNBICgtOCkgaXMgdXNlZCBmb3IgdGhlIHB1YmxpYyBrZXkuXG4gICAgICAgICAqIEEgQ0JPUiBcIk1hcCBvZiAzIGl0ZW1zXCIgKDB4YTMpIHNob3VsZCBiZSBcIk1hcCBvZiA0IGl0ZW1zXCIgKDB4YTQpLCBhbmQgaWYgd2UgbWFudWFsbHkgYWRqdXN0XG4gICAgICAgICAqIHRoZSBzaW5nbGUgYnl0ZSB0aGVyZSdzIGEgZ29vZCBjaGFuY2UgdGhlIGF1dGhEYXRhIGNhbiBiZSBjb3JyZWN0bHkgcGFyc2VkLlxuICAgICAgICAgKlxuICAgICAgICAgKiBUaGlzIGJyb3dzZXIgcmVsZWFzZSBhbHNvIGluY29ycmVjdGx5IHVzZXMgdGhlIHN0cmluZyBsYWJlbHMgXCJPS1BcIiBhbmQgXCJFZDI1NTE5XCIgaW5zdGVhZCBvZlxuICAgICAgICAgKiB0aGVpciBpbnRlZ2VyIHJlcHJlc2VudGF0aW9ucyBmb3Iga3R5IGFuZCBjcnYgcmVzcGVjdGl2ZWx5LiBUaGF0J3Mgd2h5IHRoZSBDT1NFIHB1YmxpYyBrZXlcbiAgICAgICAgICogaW4gdGhlIGhleCBiZWxvdyBsb29rcyBzbyBvZGQuXG4gICAgICAgICAqL1xuICAgICAgICAvLyBCeXRlcyBkZWNvZGUgdG8gYHsgMTogXCJPS1BcIiwgMzogLTgsIC0xOiBcIkVkMjU1MTlcIiB9YCAoaXQncyBtaXNzaW5nIGtleSAtMiBhLmsuYS4gQ09TRUtFWVMueClcbiAgICAgICAgY29uc3QgYmFkRWREU0FDQk9SID0gaXNvVWludDhBcnJheS5mcm9tSGV4KCdhMzAxNjM0ZjRiNTAwMzI3MjA2NzQ1NjQzMjM1MzUzMTM5Jyk7XG4gICAgICAgIGNvbnN0IGJ5dGVzQXRDdXJyZW50UG9zaXRpb24gPSBhdXRoRGF0YS5zbGljZShwb2ludGVyLCBwb2ludGVyICsgYmFkRWREU0FDQk9SLmJ5dGVMZW5ndGgpO1xuICAgICAgICBsZXQgZm91bmRCYWRDQk9SID0gZmFsc2U7XG4gICAgICAgIGlmIChpc29VaW50OEFycmF5LmFyZUVxdWFsKGJhZEVkRFNBQ0JPUiwgYnl0ZXNBdEN1cnJlbnRQb3NpdGlvbikpIHtcbiAgICAgICAgICAgIC8vIENoYW5nZSB0aGUgYmFkIENCT1IgMHhhMyB0byAweGE0IHNvIHRoYXQgdGhlIGNyZWRlbnRpYWwgcHVibGljIGtleSBjYW4gYmUgcmVjb2duaXplZFxuICAgICAgICAgICAgZm91bmRCYWRDQk9SID0gdHJ1ZTtcbiAgICAgICAgICAgIGF1dGhEYXRhW3BvaW50ZXJdID0gMHhhNDtcbiAgICAgICAgfVxuICAgICAgICAvLyBEZWNvZGUgdGhlIG5leHQgQ0JPUiBpdGVtIGluIHRoZSBidWZmZXIsIHRoZW4gcmUtZW5jb2RlIGl0IGJhY2sgdG8gYSBCdWZmZXJcbiAgICAgICAgY29uc3QgZmlyc3REZWNvZGVkID0gaXNvQ0JPUi5kZWNvZGVGaXJzdChhdXRoRGF0YS5zbGljZShwb2ludGVyKSk7XG4gICAgICAgIGNvbnN0IGZpcnN0RW5jb2RlZCA9IFVpbnQ4QXJyYXkuZnJvbShcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhc3RpbmcgdG8gYE1hcGAgdmlhIGBhcyB1bmtub3duYCBoZXJlIGJlY2F1c2UgVFMgZG9lc24ndCBtYWtlIGl0IHBvc3NpYmxlIHRvIGRlZmluZSBNYXBzXG4gICAgICAgICAqIHdpdGggZGlzY3JldGUga2V5cyBhbmQgcHJvcGVydGllcyB3aXRoIGtub3duIHR5cGVzIHBlciBwYWlyLCBhbmQgQ0JPUiBsaWJzIHR5cGljYWxseSBwYXJzZVxuICAgICAgICAgKiBDQk9SIE1ham9yIFR5cGUgNSB0byBgTWFwYCBiZWNhdXNlIHlvdSBjYW4gaGF2ZSBudW1iZXJzIGZvciBrZXlzLiBBIGBDT1NFUHVibGljS2V5YCBjYW4gYmVcbiAgICAgICAgICogZ2VuZXJhbGl6ZWQgYXMgXCJhIE1hcCB3aXRoIG51bWJlcnMgZm9yIGtleXMgYW5kIGVpdGhlciBudW1iZXJzIG9yIGJ5dGVzIGZvciB2YWx1ZXNcIiB0aG91Z2guXG4gICAgICAgICAqIElmIHRoaXMgcHJlc3VtcHRpb24gZmFsbHMgYXBhcnQgdGhlbiBvdGhlciBwYXJ0cyBvZiB2ZXJpZmljYXRpb24gbGF0ZXIgb24gd2lsbCBmYWlsIHNvIHdlXG4gICAgICAgICAqIHNob3VsZCBiZSBzYWZlIGRvaW5nIHRoaXMgaGVyZS5cbiAgICAgICAgICovXG4gICAgICAgIGlzb0NCT1IuZW5jb2RlKGZpcnN0RGVjb2RlZCkpO1xuICAgICAgICBpZiAoZm91bmRCYWRDQk9SKSB7XG4gICAgICAgICAgICAvLyBSZXN0b3JlIHRoZSBiaXQgd2UgY2hhbmdlZCBzbyB0aGF0IGBhdXRoRGF0YWAgaXMgdGhlIHNhbWUgYXMgaXQgY2FtZSBpbiBhbmQgd29uJ3QgYnJlYWtcbiAgICAgICAgICAgIC8vIHNpZ25hdHVyZSB2ZXJpZmljYXRpb24uXG4gICAgICAgICAgICBhdXRoRGF0YVtwb2ludGVyXSA9IDB4YTM7XG4gICAgICAgIH1cbiAgICAgICAgY3JlZGVudGlhbFB1YmxpY0tleSA9IGZpcnN0RW5jb2RlZDtcbiAgICAgICAgcG9pbnRlciArPSBmaXJzdEVuY29kZWQuYnl0ZUxlbmd0aDtcbiAgICB9XG4gICAgbGV0IGV4dGVuc2lvbnNEYXRhID0gdW5kZWZpbmVkO1xuICAgIGxldCBleHRlbnNpb25zRGF0YUJ1ZmZlciA9IHVuZGVmaW5lZDtcbiAgICBpZiAoZmxhZ3MuZWQpIHtcbiAgICAgICAgY29uc3QgZmlyc3REZWNvZGVkID0gaXNvQ0JPUi5kZWNvZGVGaXJzdChhdXRoRGF0YS5zbGljZShwb2ludGVyKSk7XG4gICAgICAgIGV4dGVuc2lvbnNEYXRhQnVmZmVyID0gVWludDhBcnJheS5mcm9tKGlzb0NCT1IuZW5jb2RlKGZpcnN0RGVjb2RlZCkpO1xuICAgICAgICBleHRlbnNpb25zRGF0YSA9IGRlY29kZUF1dGhlbnRpY2F0b3JFeHRlbnNpb25zKGV4dGVuc2lvbnNEYXRhQnVmZmVyKTtcbiAgICAgICAgcG9pbnRlciArPSBleHRlbnNpb25zRGF0YUJ1ZmZlci5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICAvLyBQb2ludGVyIHNob3VsZCBiZSBhdCB0aGUgZW5kIG9mIHRoZSBhdXRoZW50aWNhdG9yIGRhdGEsIG90aGVyd2lzZSB0b28gbXVjaCBkYXRhIHdhcyBzZW50XG4gICAgaWYgKGF1dGhEYXRhLmJ5dGVMZW5ndGggPiBwb2ludGVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTGVmdG92ZXIgYnl0ZXMgZGV0ZWN0ZWQgd2hpbGUgcGFyc2luZyBhdXRoZW50aWNhdG9yIGRhdGEnKTtcbiAgICB9XG4gICAgcmV0dXJuIF9wYXJzZUF1dGhlbnRpY2F0b3JEYXRhSW50ZXJuYWxzLnN0dWJUaGlzKHtcbiAgICAgICAgcnBJZEhhc2gsXG4gICAgICAgIGZsYWdzQnVmLFxuICAgICAgICBmbGFncyxcbiAgICAgICAgY291bnRlcixcbiAgICAgICAgY291bnRlckJ1ZixcbiAgICAgICAgYWFndWlkLFxuICAgICAgICBjcmVkZW50aWFsSUQsXG4gICAgICAgIGNyZWRlbnRpYWxQdWJsaWNLZXksXG4gICAgICAgIGV4dGVuc2lvbnNEYXRhLFxuICAgICAgICBleHRlbnNpb25zRGF0YUJ1ZmZlcixcbiAgICB9KTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX3BhcnNlQXV0aGVudGljYXRvckRhdGFJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidBackupFlags: () => (/* binding */ InvalidBackupFlags),\n/* harmony export */   parseBackupFlags: () => (/* binding */ parseBackupFlags)\n/* harmony export */ });\n/**\n * Make sense of Bits 3 and 4 in authenticator indicating:\n *\n * - Whether the credential can be used on multiple devices\n * - Whether the credential is backed up or not\n *\n * Invalid configurations will raise an `Error`\n */\nfunction parseBackupFlags({ be, bs }) {\n    const credentialBackedUp = bs;\n    let credentialDeviceType = 'singleDevice';\n    if (be) {\n        credentialDeviceType = 'multiDevice';\n    }\n    if (credentialDeviceType === 'singleDevice' && credentialBackedUp) {\n        throw new InvalidBackupFlags('Single-device credential indicated that it was backed up, which should be impossible.');\n    }\n    return { credentialDeviceType, credentialBackedUp };\n}\nclass InvalidBackupFlags extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidBackupFlags';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUJhY2t1cEZsYWdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QixRQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUJhY2t1cEZsYWdzLmpzP2QwNjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYWtlIHNlbnNlIG9mIEJpdHMgMyBhbmQgNCBpbiBhdXRoZW50aWNhdG9yIGluZGljYXRpbmc6XG4gKlxuICogLSBXaGV0aGVyIHRoZSBjcmVkZW50aWFsIGNhbiBiZSB1c2VkIG9uIG11bHRpcGxlIGRldmljZXNcbiAqIC0gV2hldGhlciB0aGUgY3JlZGVudGlhbCBpcyBiYWNrZWQgdXAgb3Igbm90XG4gKlxuICogSW52YWxpZCBjb25maWd1cmF0aW9ucyB3aWxsIHJhaXNlIGFuIGBFcnJvcmBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmFja3VwRmxhZ3MoeyBiZSwgYnMgfSkge1xuICAgIGNvbnN0IGNyZWRlbnRpYWxCYWNrZWRVcCA9IGJzO1xuICAgIGxldCBjcmVkZW50aWFsRGV2aWNlVHlwZSA9ICdzaW5nbGVEZXZpY2UnO1xuICAgIGlmIChiZSkge1xuICAgICAgICBjcmVkZW50aWFsRGV2aWNlVHlwZSA9ICdtdWx0aURldmljZSc7XG4gICAgfVxuICAgIGlmIChjcmVkZW50aWFsRGV2aWNlVHlwZSA9PT0gJ3NpbmdsZURldmljZScgJiYgY3JlZGVudGlhbEJhY2tlZFVwKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkQmFja3VwRmxhZ3MoJ1NpbmdsZS1kZXZpY2UgY3JlZGVudGlhbCBpbmRpY2F0ZWQgdGhhdCBpdCB3YXMgYmFja2VkIHVwLCB3aGljaCBzaG91bGQgYmUgaW1wb3NzaWJsZS4nKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgY3JlZGVudGlhbERldmljZVR5cGUsIGNyZWRlbnRpYWxCYWNrZWRVcCB9O1xufVxuZXhwb3J0IGNsYXNzIEludmFsaWRCYWNrdXBGbGFncyBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZEJhY2t1cEZsYWdzJztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/toHash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toHash: () => (/* binding */ toHash)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Returns hash digest of the given data, using the given algorithm when provided. Defaults to using\n * SHA-256.\n */\nfunction toHash(data, algorithm = -7) {\n    if (typeof data === 'string') {\n        data = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(data);\n    }\n    const digest = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.digest(data, algorithm);\n    return digest;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy90b0hhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZUFBZSx1RUFBNEI7QUFDM0M7QUFDQSxtQkFBbUIsMkRBQWdCO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy90b0hhc2guanM/YjVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DcnlwdG8sIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIFJldHVybnMgaGFzaCBkaWdlc3Qgb2YgdGhlIGdpdmVuIGRhdGEsIHVzaW5nIHRoZSBnaXZlbiBhbGdvcml0aG0gd2hlbiBwcm92aWRlZC4gRGVmYXVsdHMgdG8gdXNpbmdcbiAqIFNIQS0yNTYuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hhc2goZGF0YSwgYWxnb3JpdGhtID0gLTcpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGEgPSBpc29VaW50OEFycmF5LmZyb21VVEY4U3RyaW5nKGRhdGEpO1xuICAgIH1cbiAgICBjb25zdCBkaWdlc3QgPSBpc29DcnlwdG8uZGlnZXN0KGRhdGEsIGFsZ29yaXRobSk7XG4gICAgcmV0dXJuIGRpZ2VzdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateCertificatePath: () => (/* binding */ validateCertificatePath)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n\n\n\n\n\n\n/**\n * Traverse an array of PEM certificates and ensure they form a proper chain\n * @param certificates Typically the result of `x5c.map(convertASN1toPEM)`\n * @param rootCertificates Possible root certificates to complete the path\n */\nasync function validateCertificatePath(certificates, rootCertificates = []) {\n    if (rootCertificates.length === 0) {\n        // We have no root certs with which to create a full path, so skip path validation\n        // TODO: Is this going to be acceptable default behavior??\n        return true;\n    }\n    let invalidSubjectAndIssuerError = false;\n    let certificateNotYetValidOrExpiredErrorMessage = undefined;\n    for (const rootCert of rootCertificates) {\n        try {\n            const certsWithRoot = certificates.concat([rootCert]);\n            await _validatePath(certsWithRoot);\n            // If we successfully validated a path then there's no need to continue. Reset any existing\n            // errors that were thrown by earlier root certificates\n            invalidSubjectAndIssuerError = false;\n            certificateNotYetValidOrExpiredErrorMessage = undefined;\n            break;\n        }\n        catch (err) {\n            if (err instanceof InvalidSubjectAndIssuer) {\n                invalidSubjectAndIssuerError = true;\n            }\n            else if (err instanceof CertificateNotYetValidOrExpired) {\n                certificateNotYetValidOrExpiredErrorMessage = err.message;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    // We tried multiple root certs and none of them worked\n    if (invalidSubjectAndIssuerError) {\n        throw new InvalidSubjectAndIssuer();\n    }\n    else if (certificateNotYetValidOrExpiredErrorMessage) {\n        throw new CertificateNotYetValidOrExpired(certificateNotYetValidOrExpiredErrorMessage);\n    }\n    return true;\n}\nasync function _validatePath(certificates) {\n    if (new Set(certificates).size !== certificates.length) {\n        throw new Error('Invalid certificate path: found duplicate certificates');\n    }\n    // From leaf to root, make sure each cert is issued by the next certificate in the chain\n    for (let i = 0; i < certificates.length; i += 1) {\n        const subjectPem = certificates[i];\n        const isLeafCert = i === 0;\n        const isRootCert = i + 1 >= certificates.length;\n        let issuerPem = '';\n        if (isRootCert) {\n            issuerPem = subjectPem;\n        }\n        else {\n            issuerPem = certificates[i + 1];\n        }\n        const subjectInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(subjectPem));\n        const issuerInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem));\n        const x509Subject = subjectInfo.parsedCertificate;\n        // Check for certificate revocation\n        const subjectCertRevoked = await (0,_isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__.isCertRevoked)(x509Subject);\n        if (subjectCertRevoked) {\n            throw new Error(`Found revoked certificate in certificate path`);\n        }\n        // Check that intermediate certificate is within its valid time window\n        const { notBefore, notAfter } = issuerInfo;\n        const now = new Date(Date.now());\n        if (notBefore > now || notAfter < now) {\n            if (isLeafCert) {\n                throw new CertificateNotYetValidOrExpired(`Leaf certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else if (isRootCert) {\n                throw new CertificateNotYetValidOrExpired(`Root certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else {\n                throw new CertificateNotYetValidOrExpired(`Intermediate certificate is not yet valid or expired: ${issuerPem}`);\n            }\n        }\n        if (subjectInfo.issuer.combined !== issuerInfo.subject.combined) {\n            throw new InvalidSubjectAndIssuer();\n        }\n        // Verify the subject certificate's signature with the issuer cert's public key\n        const data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnSerializer.serialize(x509Subject.tbsCertificate);\n        const signature = x509Subject.signatureValue;\n        const signatureAlgorithm = (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__.mapX509SignatureAlgToCOSEAlg)(x509Subject.signatureAlgorithm.algorithm);\n        const issuerCertBytes = (0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem);\n        const verified = await (0,_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            data: new Uint8Array(data),\n            signature: new Uint8Array(signature),\n            x509Certificate: issuerCertBytes,\n            hashAlgorithm: signatureAlgorithm,\n        });\n        if (!verified) {\n            throw new Error('Invalid certificate path: invalid signature');\n        }\n    }\n    return true;\n}\n// Custom errors to help pass on certain errors\nclass InvalidSubjectAndIssuer extends Error {\n    constructor() {\n        const message = 'Subject issuer did not match issuer subject';\n        super(message);\n        this.name = 'InvalidSubjectAndIssuer';\n    }\n}\nclass CertificateNotYetValidOrExpired extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'CertificateNotYetValidOrExpired';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _verifySignatureInternals: () => (/* binding */ _verifySignatureInternals),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n\n\n\n/**\n * Verify an authenticator's signature\n */\nfunction verifySignature(opts) {\n    const { signature, data, credentialPublicKey, x509Certificate, hashAlgorithm, } = opts;\n    if (!x509Certificate && !credentialPublicKey) {\n        throw new Error('Must declare either \"leafCert\" or \"credentialPublicKey\"');\n    }\n    if (x509Certificate && credentialPublicKey) {\n        throw new Error('Must not declare both \"leafCert\" and \"credentialPublicKey\"');\n    }\n    let cosePublicKey = new Map();\n    if (credentialPublicKey) {\n        cosePublicKey = (0,_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    }\n    else if (x509Certificate) {\n        cosePublicKey = (0,_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__.convertX509PublicKeyToCOSE)(x509Certificate);\n    }\n    return _verifySignatureInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.verify({\n        cosePublicKey,\n        signature,\n        data,\n        shaHashOverride: hashAlgorithm,\n    }));\n}\n// Make it possible to stub the return value during testing\nconst _verifySignatureInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkM7QUFDZ0M7QUFDRTtBQUM3RTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksd0VBQXdFO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0ZBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsMEZBQTBCO0FBQ2xEO0FBQ0EsOENBQThDLDJEQUFnQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvdmVyaWZ5U2lnbmF0dXJlLmpzPzAwY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQ3J5cHRvIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleSB9IGZyb20gJy4vZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleS5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRSB9IGZyb20gJy4vY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UuanMnO1xuLyoqXG4gKiBWZXJpZnkgYW4gYXV0aGVudGljYXRvcidzIHNpZ25hdHVyZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5U2lnbmF0dXJlKG9wdHMpIHtcbiAgICBjb25zdCB7IHNpZ25hdHVyZSwgZGF0YSwgY3JlZGVudGlhbFB1YmxpY0tleSwgeDUwOUNlcnRpZmljYXRlLCBoYXNoQWxnb3JpdGhtLCB9ID0gb3B0cztcbiAgICBpZiAoIXg1MDlDZXJ0aWZpY2F0ZSAmJiAhY3JlZGVudGlhbFB1YmxpY0tleSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c3QgZGVjbGFyZSBlaXRoZXIgXCJsZWFmQ2VydFwiIG9yIFwiY3JlZGVudGlhbFB1YmxpY0tleVwiJyk7XG4gICAgfVxuICAgIGlmICh4NTA5Q2VydGlmaWNhdGUgJiYgY3JlZGVudGlhbFB1YmxpY0tleSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c3Qgbm90IGRlY2xhcmUgYm90aCBcImxlYWZDZXJ0XCIgYW5kIFwiY3JlZGVudGlhbFB1YmxpY0tleVwiJyk7XG4gICAgfVxuICAgIGxldCBjb3NlUHVibGljS2V5ID0gbmV3IE1hcCgpO1xuICAgIGlmIChjcmVkZW50aWFsUHVibGljS2V5KSB7XG4gICAgICAgIGNvc2VQdWJsaWNLZXkgPSBkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5KGNyZWRlbnRpYWxQdWJsaWNLZXkpO1xuICAgIH1cbiAgICBlbHNlIGlmICh4NTA5Q2VydGlmaWNhdGUpIHtcbiAgICAgICAgY29zZVB1YmxpY0tleSA9IGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFKHg1MDlDZXJ0aWZpY2F0ZSk7XG4gICAgfVxuICAgIHJldHVybiBfdmVyaWZ5U2lnbmF0dXJlSW50ZXJuYWxzLnN0dWJUaGlzKGlzb0NyeXB0by52ZXJpZnkoe1xuICAgICAgICBjb3NlUHVibGljS2V5LFxuICAgICAgICBzaWduYXR1cmUsXG4gICAgICAgIGRhdGEsXG4gICAgICAgIHNoYUhhc2hPdmVycmlkZTogaGFzaEFsZ29yaXRobSxcbiAgICB9KSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF92ZXJpZnlTaWduYXR1cmVJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetadataService: () => (/* reexport safe */ _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__.MetadataService),\n/* harmony export */   SettingsService: () => (/* reexport safe */ _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__.SettingsService),\n/* harmony export */   generateAuthenticationOptions: () => (/* reexport safe */ _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__.generateAuthenticationOptions),\n/* harmony export */   generateRegistrationOptions: () => (/* reexport safe */ _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__.generateRegistrationOptions),\n/* harmony export */   verifyAuthenticationResponse: () => (/* reexport safe */ _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__.verifyAuthenticationResponse),\n/* harmony export */   verifyRegistrationResponse: () => (/* reexport safe */ _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__.verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registration/generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registration/verifyRegistrationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\");\n/* harmony import */ var _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authentication/generateAuthenticationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\");\n/* harmony import */ var _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication/verifyAuthenticationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/**\n * @packageDocumentation\n * @module @simplewebauthn/server\n */\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDNEY7QUFDRjtBQUNRO0FBQ0Y7QUFDaEM7QUFDQTtBQUNtRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9pbmRleC5qcz8yZGU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXG4gKiBAbW9kdWxlIEBzaW1wbGV3ZWJhdXRobi9zZXJ2ZXJcbiAqL1xuaW1wb3J0IHsgZ2VuZXJhdGVSZWdpc3RyYXRpb25PcHRpb25zIH0gZnJvbSAnLi9yZWdpc3RyYXRpb24vZ2VuZXJhdGVSZWdpc3RyYXRpb25PcHRpb25zLmpzJztcbmltcG9ydCB7IHZlcmlmeVJlZ2lzdHJhdGlvblJlc3BvbnNlIH0gZnJvbSAnLi9yZWdpc3RyYXRpb24vdmVyaWZ5UmVnaXN0cmF0aW9uUmVzcG9uc2UuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL2dlbmVyYXRlQXV0aGVudGljYXRpb25PcHRpb25zLmpzJztcbmltcG9ydCB7IHZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL3ZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UuanMnO1xuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9tZXRhZGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgU2V0dGluZ3NTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zZXR0aW5nc1NlcnZpY2UuanMnO1xuZXhwb3J0IHsgZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMsIGdlbmVyYXRlUmVnaXN0cmF0aW9uT3B0aW9ucywgTWV0YWRhdGFTZXJ2aWNlLCBTZXR0aW5nc1NlcnZpY2UsIHZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UsIHZlcmlmeVJlZ2lzdHJhdGlvblJlc3BvbnNlLCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseJWT: () => (/* binding */ parseJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Process a JWT into Javascript-friendly data structures\n */\nfunction parseJWT(jwt) {\n    const parts = jwt.split('.');\n    return [\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toUTF8String(parts[0])),\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toUTF8String(parts[1])),\n        parts[2],\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvcGFyc2VKV1QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsbUJBQW1CLDRFQUF5QjtBQUM1QyxtQkFBbUIsNEVBQXlCO0FBQzVDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9tZXRhZGF0YS9wYXJzZUpXVC5qcz9jZjVhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbi8qKlxuICogUHJvY2VzcyBhIEpXVCBpbnRvIEphdmFzY3JpcHQtZnJpZW5kbHkgZGF0YSBzdHJ1Y3R1cmVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUpXVChqd3QpIHtcbiAgICBjb25zdCBwYXJ0cyA9IGp3dC5zcGxpdCgnLicpO1xuICAgIHJldHVybiBbXG4gICAgICAgIEpTT04ucGFyc2UoaXNvQmFzZTY0VVJMLnRvVVRGOFN0cmluZyhwYXJ0c1swXSkpLFxuICAgICAgICBKU09OLnBhcnNlKGlzb0Jhc2U2NFVSTC50b1VURjhTdHJpbmcocGFydHNbMV0pKSxcbiAgICAgICAgcGFydHNbMl0sXG4gICAgXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algSignToCOSEInfoMap: () => (/* binding */ algSignToCOSEInfoMap),\n/* harmony export */   verifyAttestationWithMetadata: () => (/* binding */ verifyAttestationWithMetadata)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n/**\n * Match properties of the authenticator's attestation statement against expected values as\n * registered with the FIDO Alliance Metadata Service\n */\nasync function verifyAttestationWithMetadata({ statement, credentialPublicKey, x5c, attestationStatementAlg, }) {\n    const { authenticationAlgorithms, authenticatorGetInfo, attestationRootCertificates, } = statement;\n    // Make sure the alg in the attestation statement matches one of the ones specified in metadata\n    const keypairCOSEAlgs = new Set();\n    authenticationAlgorithms.forEach((algSign) => {\n        // Map algSign string to { kty, alg, crv }\n        const algSignCOSEINFO = algSignToCOSEInfoMap[algSign];\n        // Keeping this statement here just in case MDS returns something unexpected\n        if (algSignCOSEINFO) {\n            keypairCOSEAlgs.add(algSignCOSEINFO);\n        }\n    });\n    // Extract the public key's COSE info for comparison\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__.decodeCredentialPublicKey)(credentialPublicKey);\n    const kty = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.kty);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.alg);\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    if (!alg) {\n        throw new Error('Credential public key was missing alg');\n    }\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    // Assume everything is a number because these values should be\n    const publicKeyCOSEInfo = { kty, alg };\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.isCOSEPublicKeyEC2)(decodedPublicKey)) {\n        const crv = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.crv);\n        publicKeyCOSEInfo.crv = crv;\n    }\n    /**\n     * Attempt to match the credential public key's algorithm to one specified in the device's\n     * metadata\n     */\n    let foundMatch = false;\n    for (const keypairAlg of keypairCOSEAlgs) {\n        // Make sure algorithm and key type match\n        if (keypairAlg.alg === publicKeyCOSEInfo.alg &&\n            keypairAlg.kty === publicKeyCOSEInfo.kty) {\n            // If not an RSA keypair then make sure curve numbers match too\n            if ((keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.EC2 || keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.OKP) &&\n                keypairAlg.crv === publicKeyCOSEInfo.crv) {\n                foundMatch = true;\n            }\n            else {\n                // We've matched an RSA public key's properties\n                foundMatch = true;\n            }\n        }\n        if (foundMatch) {\n            break;\n        }\n    }\n    // Make sure the public key is one of the allowed algorithms\n    if (!foundMatch) {\n        /**\n         * Craft some useful error output from the MDS algorithms\n         *\n         * Example:\n         *\n         * ```\n         * [\n         *   'rsassa_pss_sha256_raw' (COSE info: { kty: 3, alg: -37 }),\n         *   'secp256k1_ecdsa_sha256_raw' (COSE info: { kty: 2, alg: -47, crv: 8 })\n         * ]\n         * ```\n         */\n        const debugMDSAlgs = authenticationAlgorithms.map((algSign) => `'${algSign}' (COSE info: ${stringifyCOSEInfo(algSignToCOSEInfoMap[algSign])})`);\n        const strMDSAlgs = JSON.stringify(debugMDSAlgs, null, 2).replace(/\"/g, '');\n        /**\n         * Construct useful error output about the public key\n         */\n        const strPubKeyAlg = stringifyCOSEInfo(publicKeyCOSEInfo);\n        throw new Error(`Public key parameters ${strPubKeyAlg} did not match any of the following metadata algorithms:\\n${strMDSAlgs}`);\n    }\n    /**\n     * Confirm the attestation statement's algorithm is one supported according to metadata\n     */\n    if (attestationStatementAlg !== undefined &&\n        authenticatorGetInfo?.algorithms !== undefined) {\n        const getInfoAlgs = authenticatorGetInfo.algorithms.map((_alg) => _alg.alg);\n        if (getInfoAlgs.indexOf(attestationStatementAlg) < 0) {\n            throw new Error(`Attestation statement alg ${attestationStatementAlg} did not match one of ${getInfoAlgs}`);\n        }\n    }\n    // Prepare to check the certificate chain\n    const authenticatorCerts = x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    const statementRootCerts = attestationRootCertificates.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    /**\n     * If an authenticator returns exactly one certificate in its x5c, and that cert is found in the\n     * metadata statement then the authenticator is \"self-referencing\". In this case we forego\n     * certificate chain validation.\n     */\n    let authenticatorIsSelfReferencing = false;\n    if (authenticatorCerts.length === 1 &&\n        statementRootCerts.indexOf(authenticatorCerts[0]) >= 0) {\n        authenticatorIsSelfReferencing = true;\n    }\n    if (!authenticatorIsSelfReferencing) {\n        try {\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(authenticatorCerts, statementRootCerts);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`Could not validate certificate path with any metadata root certificates: ${_err.message}`);\n        }\n    }\n    return true;\n}\n/**\n * Convert ALG_SIGN values to COSE info\n *\n * Values pulled from `ALG_KEY_COSE` definitions in the FIDO Registry of Predefined Values\n *\n * https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-ps-20220523.html#authentication-algorithms\n */\nconst algSignToCOSEInfoMap = {\n    secp256r1_ecdsa_sha256_raw: { kty: 2, alg: -7, crv: 1 },\n    secp256r1_ecdsa_sha256_der: { kty: 2, alg: -7, crv: 1 },\n    rsassa_pss_sha256_raw: { kty: 3, alg: -37 },\n    rsassa_pss_sha256_der: { kty: 3, alg: -37 },\n    secp256k1_ecdsa_sha256_raw: { kty: 2, alg: -47, crv: 8 },\n    secp256k1_ecdsa_sha256_der: { kty: 2, alg: -47, crv: 8 },\n    rsassa_pss_sha384_raw: { kty: 3, alg: -38 },\n    rsassa_pkcsv15_sha256_raw: { kty: 3, alg: -257 },\n    rsassa_pkcsv15_sha384_raw: { kty: 3, alg: -258 },\n    rsassa_pkcsv15_sha512_raw: { kty: 3, alg: -259 },\n    rsassa_pkcsv15_sha1_raw: { kty: 3, alg: -65535 },\n    secp384r1_ecdsa_sha384_raw: { kty: 2, alg: -35, crv: 2 },\n    secp512r1_ecdsa_sha256_raw: { kty: 2, alg: -36, crv: 3 },\n    ed25519_eddsa_sha512_raw: { kty: 1, alg: -8, crv: 6 },\n};\n/**\n * A helper to format COSEInfo a little nicer than we can achieve with JSON.stringify()\n *\n * Input: `{ \"kty\": 3, \"alg\": -257 }`\n *\n * Output: `\"{ kty: 3, alg: -257 }\"`\n */\nfunction stringifyCOSEInfo(info) {\n    const { kty, alg, crv } = info;\n    let toReturn = '';\n    if (kty !== _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.RSA) {\n        toReturn = `{ kty: ${kty}, alg: ${alg}, crv: ${crv} }`;\n    }\n    else {\n        toReturn = `{ kty: ${kty}, alg: ${alg} }`;\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThFO0FBQ0U7QUFDSTtBQUNUO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0NBQStDLCtEQUErRDtBQUNySCxZQUFZLCtFQUErRTtBQUMzRjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDZCQUE2QixnR0FBeUI7QUFDdEQscUNBQXFDLHNEQUFRO0FBQzdDLHFDQUFxQyxzREFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxRQUFRLG9FQUFrQjtBQUMxQix5Q0FBeUMsc0RBQVE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHFEQUFPLDJCQUEyQixxREFBTztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFLHdEQUF3RCwwQkFBMEI7QUFDbEY7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLFFBQVEsZ0JBQWdCLGlEQUFpRDtBQUNwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGNBQWMsMkRBQTJELFdBQVc7QUFDckk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCx5QkFBeUIsdUJBQXVCLFlBQVk7QUFDckg7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHNGQUFzQjtBQUM3RCwrREFBK0Qsc0ZBQXNCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0RkFBdUI7QUFDekM7QUFDQTtBQUNBO0FBQ0Esd0dBQXdHLGFBQWE7QUFDckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0NBQWtDLHlCQUF5QjtBQUMzRCxrQ0FBa0MseUJBQXlCO0FBQzNELDZCQUE2QixrQkFBa0I7QUFDL0MsNkJBQTZCLGtCQUFrQjtBQUMvQyxrQ0FBa0MsMEJBQTBCO0FBQzVELGtDQUFrQywwQkFBMEI7QUFDNUQsNkJBQTZCLGtCQUFrQjtBQUMvQyxpQ0FBaUMsbUJBQW1CO0FBQ3BELGlDQUFpQyxtQkFBbUI7QUFDcEQsaUNBQWlDLG1CQUFtQjtBQUNwRCwrQkFBK0IscUJBQXFCO0FBQ3BELGtDQUFrQywwQkFBMEI7QUFDNUQsa0NBQWtDLDBCQUEwQjtBQUM1RCxnQ0FBZ0MseUJBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQSxnQkFBZ0IscURBQU87QUFDdkIsc0JBQXNCLE9BQU8sSUFBSSxTQUFTLElBQUksU0FBUyxNQUFNO0FBQzdEO0FBQ0E7QUFDQSxzQkFBc0IsT0FBTyxJQUFJLFNBQVMsTUFBTTtBQUNoRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEuanM/ZmU3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyBkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5IH0gZnJvbSAnLi4vaGVscGVycy9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5LmpzJztcbmltcG9ydCB7IENPU0VLRVlTLCBDT1NFS1RZLCBpc0NPU0VQdWJsaWNLZXlFQzIgfSBmcm9tICcuLi9oZWxwZXJzL2Nvc2UuanMnO1xuLyoqXG4gKiBNYXRjaCBwcm9wZXJ0aWVzIG9mIHRoZSBhdXRoZW50aWNhdG9yJ3MgYXR0ZXN0YXRpb24gc3RhdGVtZW50IGFnYWluc3QgZXhwZWN0ZWQgdmFsdWVzIGFzXG4gKiByZWdpc3RlcmVkIHdpdGggdGhlIEZJRE8gQWxsaWFuY2UgTWV0YWRhdGEgU2VydmljZVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEoeyBzdGF0ZW1lbnQsIGNyZWRlbnRpYWxQdWJsaWNLZXksIHg1YywgYXR0ZXN0YXRpb25TdGF0ZW1lbnRBbGcsIH0pIHtcbiAgICBjb25zdCB7IGF1dGhlbnRpY2F0aW9uQWxnb3JpdGhtcywgYXV0aGVudGljYXRvckdldEluZm8sIGF0dGVzdGF0aW9uUm9vdENlcnRpZmljYXRlcywgfSA9IHN0YXRlbWVudDtcbiAgICAvLyBNYWtlIHN1cmUgdGhlIGFsZyBpbiB0aGUgYXR0ZXN0YXRpb24gc3RhdGVtZW50IG1hdGNoZXMgb25lIG9mIHRoZSBvbmVzIHNwZWNpZmllZCBpbiBtZXRhZGF0YVxuICAgIGNvbnN0IGtleXBhaXJDT1NFQWxncyA9IG5ldyBTZXQoKTtcbiAgICBhdXRoZW50aWNhdGlvbkFsZ29yaXRobXMuZm9yRWFjaCgoYWxnU2lnbikgPT4ge1xuICAgICAgICAvLyBNYXAgYWxnU2lnbiBzdHJpbmcgdG8geyBrdHksIGFsZywgY3J2IH1cbiAgICAgICAgY29uc3QgYWxnU2lnbkNPU0VJTkZPID0gYWxnU2lnblRvQ09TRUluZm9NYXBbYWxnU2lnbl07XG4gICAgICAgIC8vIEtlZXBpbmcgdGhpcyBzdGF0ZW1lbnQgaGVyZSBqdXN0IGluIGNhc2UgTURTIHJldHVybnMgc29tZXRoaW5nIHVuZXhwZWN0ZWRcbiAgICAgICAgaWYgKGFsZ1NpZ25DT1NFSU5GTykge1xuICAgICAgICAgICAga2V5cGFpckNPU0VBbGdzLmFkZChhbGdTaWduQ09TRUlORk8pO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy8gRXh0cmFjdCB0aGUgcHVibGljIGtleSdzIENPU0UgaW5mbyBmb3IgY29tcGFyaXNvblxuICAgIGNvbnN0IGRlY29kZWRQdWJsaWNLZXkgPSBkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5KGNyZWRlbnRpYWxQdWJsaWNLZXkpO1xuICAgIGNvbnN0IGt0eSA9IGRlY29kZWRQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgY29uc3QgYWxnID0gZGVjb2RlZFB1YmxpY0tleS5nZXQoQ09TRUtFWVMuYWxnKTtcbiAgICBpZiAoIWt0eSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NyZWRlbnRpYWwgcHVibGljIGtleSB3YXMgbWlzc2luZyBrdHknKTtcbiAgICB9XG4gICAgaWYgKCFhbGcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDcmVkZW50aWFsIHB1YmxpYyBrZXkgd2FzIG1pc3NpbmcgYWxnJyk7XG4gICAgfVxuICAgIGlmICgha3R5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ3JlZGVudGlhbCBwdWJsaWMga2V5IHdhcyBtaXNzaW5nIGt0eScpO1xuICAgIH1cbiAgICAvLyBBc3N1bWUgZXZlcnl0aGluZyBpcyBhIG51bWJlciBiZWNhdXNlIHRoZXNlIHZhbHVlcyBzaG91bGQgYmVcbiAgICBjb25zdCBwdWJsaWNLZXlDT1NFSW5mbyA9IHsga3R5LCBhbGcgfTtcbiAgICBpZiAoaXNDT1NFUHVibGljS2V5RUMyKGRlY29kZWRQdWJsaWNLZXkpKSB7XG4gICAgICAgIGNvbnN0IGNydiA9IGRlY29kZWRQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmNydik7XG4gICAgICAgIHB1YmxpY0tleUNPU0VJbmZvLmNydiA9IGNydjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXR0ZW1wdCB0byBtYXRjaCB0aGUgY3JlZGVudGlhbCBwdWJsaWMga2V5J3MgYWxnb3JpdGhtIHRvIG9uZSBzcGVjaWZpZWQgaW4gdGhlIGRldmljZSdzXG4gICAgICogbWV0YWRhdGFcbiAgICAgKi9cbiAgICBsZXQgZm91bmRNYXRjaCA9IGZhbHNlO1xuICAgIGZvciAoY29uc3Qga2V5cGFpckFsZyBvZiBrZXlwYWlyQ09TRUFsZ3MpIHtcbiAgICAgICAgLy8gTWFrZSBzdXJlIGFsZ29yaXRobSBhbmQga2V5IHR5cGUgbWF0Y2hcbiAgICAgICAgaWYgKGtleXBhaXJBbGcuYWxnID09PSBwdWJsaWNLZXlDT1NFSW5mby5hbGcgJiZcbiAgICAgICAgICAgIGtleXBhaXJBbGcua3R5ID09PSBwdWJsaWNLZXlDT1NFSW5mby5rdHkpIHtcbiAgICAgICAgICAgIC8vIElmIG5vdCBhbiBSU0Ega2V5cGFpciB0aGVuIG1ha2Ugc3VyZSBjdXJ2ZSBudW1iZXJzIG1hdGNoIHRvb1xuICAgICAgICAgICAgaWYgKChrZXlwYWlyQWxnLmt0eSA9PT0gQ09TRUtUWS5FQzIgfHwga2V5cGFpckFsZy5rdHkgPT09IENPU0VLVFkuT0tQKSAmJlxuICAgICAgICAgICAgICAgIGtleXBhaXJBbGcuY3J2ID09PSBwdWJsaWNLZXlDT1NFSW5mby5jcnYpIHtcbiAgICAgICAgICAgICAgICBmb3VuZE1hdGNoID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFdlJ3ZlIG1hdGNoZWQgYW4gUlNBIHB1YmxpYyBrZXkncyBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgZm91bmRNYXRjaCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZvdW5kTWF0Y2gpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIE1ha2Ugc3VyZSB0aGUgcHVibGljIGtleSBpcyBvbmUgb2YgdGhlIGFsbG93ZWQgYWxnb3JpdGhtc1xuICAgIGlmICghZm91bmRNYXRjaCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogQ3JhZnQgc29tZSB1c2VmdWwgZXJyb3Igb3V0cHV0IGZyb20gdGhlIE1EUyBhbGdvcml0aG1zXG4gICAgICAgICAqXG4gICAgICAgICAqIEV4YW1wbGU6XG4gICAgICAgICAqXG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKiBbXG4gICAgICAgICAqICAgJ3JzYXNzYV9wc3Nfc2hhMjU2X3JhdycgKENPU0UgaW5mbzogeyBrdHk6IDMsIGFsZzogLTM3IH0pLFxuICAgICAgICAgKiAgICdzZWNwMjU2azFfZWNkc2Ffc2hhMjU2X3JhdycgKENPU0UgaW5mbzogeyBrdHk6IDIsIGFsZzogLTQ3LCBjcnY6IDggfSlcbiAgICAgICAgICogXVxuICAgICAgICAgKiBgYGBcbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IGRlYnVnTURTQWxncyA9IGF1dGhlbnRpY2F0aW9uQWxnb3JpdGhtcy5tYXAoKGFsZ1NpZ24pID0+IGAnJHthbGdTaWdufScgKENPU0UgaW5mbzogJHtzdHJpbmdpZnlDT1NFSW5mbyhhbGdTaWduVG9DT1NFSW5mb01hcFthbGdTaWduXSl9KWApO1xuICAgICAgICBjb25zdCBzdHJNRFNBbGdzID0gSlNPTi5zdHJpbmdpZnkoZGVidWdNRFNBbGdzLCBudWxsLCAyKS5yZXBsYWNlKC9cIi9nLCAnJyk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDb25zdHJ1Y3QgdXNlZnVsIGVycm9yIG91dHB1dCBhYm91dCB0aGUgcHVibGljIGtleVxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3Qgc3RyUHViS2V5QWxnID0gc3RyaW5naWZ5Q09TRUluZm8ocHVibGljS2V5Q09TRUluZm8pO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFB1YmxpYyBrZXkgcGFyYW1ldGVycyAke3N0clB1YktleUFsZ30gZGlkIG5vdCBtYXRjaCBhbnkgb2YgdGhlIGZvbGxvd2luZyBtZXRhZGF0YSBhbGdvcml0aG1zOlxcbiR7c3RyTURTQWxnc31gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uZmlybSB0aGUgYXR0ZXN0YXRpb24gc3RhdGVtZW50J3MgYWxnb3JpdGhtIGlzIG9uZSBzdXBwb3J0ZWQgYWNjb3JkaW5nIHRvIG1ldGFkYXRhXG4gICAgICovXG4gICAgaWYgKGF0dGVzdGF0aW9uU3RhdGVtZW50QWxnICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgYXV0aGVudGljYXRvckdldEluZm8/LmFsZ29yaXRobXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBnZXRJbmZvQWxncyA9IGF1dGhlbnRpY2F0b3JHZXRJbmZvLmFsZ29yaXRobXMubWFwKChfYWxnKSA9PiBfYWxnLmFsZyk7XG4gICAgICAgIGlmIChnZXRJbmZvQWxncy5pbmRleE9mKGF0dGVzdGF0aW9uU3RhdGVtZW50QWxnKSA8IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQXR0ZXN0YXRpb24gc3RhdGVtZW50IGFsZyAke2F0dGVzdGF0aW9uU3RhdGVtZW50QWxnfSBkaWQgbm90IG1hdGNoIG9uZSBvZiAke2dldEluZm9BbGdzfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFByZXBhcmUgdG8gY2hlY2sgdGhlIGNlcnRpZmljYXRlIGNoYWluXG4gICAgY29uc3QgYXV0aGVudGljYXRvckNlcnRzID0geDVjLm1hcChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKTtcbiAgICBjb25zdCBzdGF0ZW1lbnRSb290Q2VydHMgPSBhdHRlc3RhdGlvblJvb3RDZXJ0aWZpY2F0ZXMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pO1xuICAgIC8qKlxuICAgICAqIElmIGFuIGF1dGhlbnRpY2F0b3IgcmV0dXJucyBleGFjdGx5IG9uZSBjZXJ0aWZpY2F0ZSBpbiBpdHMgeDVjLCBhbmQgdGhhdCBjZXJ0IGlzIGZvdW5kIGluIHRoZVxuICAgICAqIG1ldGFkYXRhIHN0YXRlbWVudCB0aGVuIHRoZSBhdXRoZW50aWNhdG9yIGlzIFwic2VsZi1yZWZlcmVuY2luZ1wiLiBJbiB0aGlzIGNhc2Ugd2UgZm9yZWdvXG4gICAgICogY2VydGlmaWNhdGUgY2hhaW4gdmFsaWRhdGlvbi5cbiAgICAgKi9cbiAgICBsZXQgYXV0aGVudGljYXRvcklzU2VsZlJlZmVyZW5jaW5nID0gZmFsc2U7XG4gICAgaWYgKGF1dGhlbnRpY2F0b3JDZXJ0cy5sZW5ndGggPT09IDEgJiZcbiAgICAgICAgc3RhdGVtZW50Um9vdENlcnRzLmluZGV4T2YoYXV0aGVudGljYXRvckNlcnRzWzBdKSA+PSAwKSB7XG4gICAgICAgIGF1dGhlbnRpY2F0b3JJc1NlbGZSZWZlcmVuY2luZyA9IHRydWU7XG4gICAgfVxuICAgIGlmICghYXV0aGVudGljYXRvcklzU2VsZlJlZmVyZW5jaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aChhdXRoZW50aWNhdG9yQ2VydHMsIHN0YXRlbWVudFJvb3RDZXJ0cyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IHZhbGlkYXRlIGNlcnRpZmljYXRlIHBhdGggd2l0aCBhbnkgbWV0YWRhdGEgcm9vdCBjZXJ0aWZpY2F0ZXM6ICR7X2Vyci5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBDb252ZXJ0IEFMR19TSUdOIHZhbHVlcyB0byBDT1NFIGluZm9cbiAqXG4gKiBWYWx1ZXMgcHVsbGVkIGZyb20gYEFMR19LRVlfQ09TRWAgZGVmaW5pdGlvbnMgaW4gdGhlIEZJRE8gUmVnaXN0cnkgb2YgUHJlZGVmaW5lZCBWYWx1ZXNcbiAqXG4gKiBodHRwczovL2ZpZG9hbGxpYW5jZS5vcmcvc3BlY3MvY29tbW9uLXNwZWNzL2ZpZG8tcmVnaXN0cnktdjIuMi1wcy0yMDIyMDUyMy5odG1sI2F1dGhlbnRpY2F0aW9uLWFsZ29yaXRobXNcbiAqL1xuZXhwb3J0IGNvbnN0IGFsZ1NpZ25Ub0NPU0VJbmZvTWFwID0ge1xuICAgIHNlY3AyNTZyMV9lY2RzYV9zaGEyNTZfcmF3OiB7IGt0eTogMiwgYWxnOiAtNywgY3J2OiAxIH0sXG4gICAgc2VjcDI1NnIxX2VjZHNhX3NoYTI1Nl9kZXI6IHsga3R5OiAyLCBhbGc6IC03LCBjcnY6IDEgfSxcbiAgICByc2Fzc2FfcHNzX3NoYTI1Nl9yYXc6IHsga3R5OiAzLCBhbGc6IC0zNyB9LFxuICAgIHJzYXNzYV9wc3Nfc2hhMjU2X2RlcjogeyBrdHk6IDMsIGFsZzogLTM3IH0sXG4gICAgc2VjcDI1NmsxX2VjZHNhX3NoYTI1Nl9yYXc6IHsga3R5OiAyLCBhbGc6IC00NywgY3J2OiA4IH0sXG4gICAgc2VjcDI1NmsxX2VjZHNhX3NoYTI1Nl9kZXI6IHsga3R5OiAyLCBhbGc6IC00NywgY3J2OiA4IH0sXG4gICAgcnNhc3NhX3Bzc19zaGEzODRfcmF3OiB7IGt0eTogMywgYWxnOiAtMzggfSxcbiAgICByc2Fzc2FfcGtjc3YxNV9zaGEyNTZfcmF3OiB7IGt0eTogMywgYWxnOiAtMjU3IH0sXG4gICAgcnNhc3NhX3BrY3N2MTVfc2hhMzg0X3JhdzogeyBrdHk6IDMsIGFsZzogLTI1OCB9LFxuICAgIHJzYXNzYV9wa2NzdjE1X3NoYTUxMl9yYXc6IHsga3R5OiAzLCBhbGc6IC0yNTkgfSxcbiAgICByc2Fzc2FfcGtjc3YxNV9zaGExX3JhdzogeyBrdHk6IDMsIGFsZzogLTY1NTM1IH0sXG4gICAgc2VjcDM4NHIxX2VjZHNhX3NoYTM4NF9yYXc6IHsga3R5OiAyLCBhbGc6IC0zNSwgY3J2OiAyIH0sXG4gICAgc2VjcDUxMnIxX2VjZHNhX3NoYTI1Nl9yYXc6IHsga3R5OiAyLCBhbGc6IC0zNiwgY3J2OiAzIH0sXG4gICAgZWQyNTUxOV9lZGRzYV9zaGE1MTJfcmF3OiB7IGt0eTogMSwgYWxnOiAtOCwgY3J2OiA2IH0sXG59O1xuLyoqXG4gKiBBIGhlbHBlciB0byBmb3JtYXQgQ09TRUluZm8gYSBsaXR0bGUgbmljZXIgdGhhbiB3ZSBjYW4gYWNoaWV2ZSB3aXRoIEpTT04uc3RyaW5naWZ5KClcbiAqXG4gKiBJbnB1dDogYHsgXCJrdHlcIjogMywgXCJhbGdcIjogLTI1NyB9YFxuICpcbiAqIE91dHB1dDogYFwieyBrdHk6IDMsIGFsZzogLTI1NyB9XCJgXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ2lmeUNPU0VJbmZvKGluZm8pIHtcbiAgICBjb25zdCB7IGt0eSwgYWxnLCBjcnYgfSA9IGluZm87XG4gICAgbGV0IHRvUmV0dXJuID0gJyc7XG4gICAgaWYgKGt0eSAhPT0gQ09TRUtUWS5SU0EpIHtcbiAgICAgICAgdG9SZXR1cm4gPSBgeyBrdHk6ICR7a3R5fSwgYWxnOiAke2FsZ30sIGNydjogJHtjcnZ9IH1gO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdG9SZXR1cm4gPSBgeyBrdHk6ICR7a3R5fSwgYWxnOiAke2FsZ30gfWA7XG4gICAgfVxuICAgIHJldHVybiB0b1JldHVybjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n\n\n\n\n\n/**\n * Lightweight verification for FIDO MDS JWTs. Supports use of EC2 and RSA.\n *\n * If this ever needs to support more JWS algorithms, here's the list of them:\n *\n * https://www.rfc-editor.org/rfc/rfc7518.html#section-3.1\n *\n * (Pulled from https://www.rfc-editor.org/rfc/rfc7515#section-4.1.1)\n */\nfunction verifyJWT(jwt, leafCert) {\n    const [header, payload, signature] = jwt.split('.');\n    const certCOSE = (0,_helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__.convertX509PublicKeyToCOSE)(leafCert);\n    const data = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromUTF8String(`${header}.${payload}`);\n    const signatureBytes = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.toBuffer(signature);\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__.verifyEC2)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n            shaHashOverride: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256,\n        });\n    }\n    else if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__.verifyRSA)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n        });\n    }\n    const kty = certCOSE.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty);\n    throw new Error(`JWT verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5SldULmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUNoQjtBQUN5QjtBQUM3QjtBQUNBO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxxQkFBcUIsa0dBQTBCO0FBQy9DLGlCQUFpQiwrRUFBNEIsSUFBSSxPQUFPLEdBQUcsUUFBUTtBQUNuRSwyQkFBMkIsd0VBQXFCO0FBQ2hELFFBQVEsb0VBQWtCO0FBQzFCLGVBQWUsOEVBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFEQUFPO0FBQ3BDLFNBQVM7QUFDVDtBQUNBLGFBQWEsb0VBQWtCO0FBQy9CLGVBQWUsOEVBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsNkJBQTZCLHNEQUFRO0FBQ3JDLCtEQUErRCxLQUFLO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL21ldGFkYXRhL3ZlcmlmeUpXVC5qcz82MWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFIH0gZnJvbSAnLi4vaGVscGVycy9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwsIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBDT1NFQUxHLCBDT1NFS0VZUywgaXNDT1NFUHVibGljS2V5RUMyLCBpc0NPU0VQdWJsaWNLZXlSU0EgfSBmcm9tICcuLi9oZWxwZXJzL2Nvc2UuanMnO1xuaW1wb3J0IHsgdmVyaWZ5RUMyIH0gZnJvbSAnLi4vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeUVDMi5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlSU0EgfSBmcm9tICcuLi9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5UlNBLmpzJztcbi8qKlxuICogTGlnaHR3ZWlnaHQgdmVyaWZpY2F0aW9uIGZvciBGSURPIE1EUyBKV1RzLiBTdXBwb3J0cyB1c2Ugb2YgRUMyIGFuZCBSU0EuXG4gKlxuICogSWYgdGhpcyBldmVyIG5lZWRzIHRvIHN1cHBvcnQgbW9yZSBKV1MgYWxnb3JpdGhtcywgaGVyZSdzIHRoZSBsaXN0IG9mIHRoZW06XG4gKlxuICogaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzc1MTguaHRtbCNzZWN0aW9uLTMuMVxuICpcbiAqIChQdWxsZWQgZnJvbSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNzUxNSNzZWN0aW9uLTQuMS4xKVxuICovXG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5SldUKGp3dCwgbGVhZkNlcnQpIHtcbiAgICBjb25zdCBbaGVhZGVyLCBwYXlsb2FkLCBzaWduYXR1cmVdID0gand0LnNwbGl0KCcuJyk7XG4gICAgY29uc3QgY2VydENPU0UgPSBjb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRShsZWFmQ2VydCk7XG4gICAgY29uc3QgZGF0YSA9IGlzb1VpbnQ4QXJyYXkuZnJvbVVURjhTdHJpbmcoYCR7aGVhZGVyfS4ke3BheWxvYWR9YCk7XG4gICAgY29uc3Qgc2lnbmF0dXJlQnl0ZXMgPSBpc29CYXNlNjRVUkwudG9CdWZmZXIoc2lnbmF0dXJlKTtcbiAgICBpZiAoaXNDT1NFUHVibGljS2V5RUMyKGNlcnRDT1NFKSkge1xuICAgICAgICByZXR1cm4gdmVyaWZ5RUMyKHtcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZUJ5dGVzLFxuICAgICAgICAgICAgY29zZVB1YmxpY0tleTogY2VydENPU0UsXG4gICAgICAgICAgICBzaGFIYXNoT3ZlcnJpZGU6IENPU0VBTEcuRVMyNTYsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0NPU0VQdWJsaWNLZXlSU0EoY2VydENPU0UpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlSU0Eoe1xuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlQnl0ZXMsXG4gICAgICAgICAgICBjb3NlUHVibGljS2V5OiBjZXJ0Q09TRSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGt0eSA9IGNlcnRDT1NFLmdldChDT1NFS0VZUy5rdHkpO1xuICAgIHRocm93IG5ldyBFcnJvcihgSldUIHZlcmlmaWNhdGlvbiB3aXRoIHB1YmxpYyBrZXkgb2Yga3R5ICR7a3R5fSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgbWV0aG9kYCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRegistrationOptions: () => (/* binding */ generateRegistrationOptions),\n/* harmony export */   supportedCOSEAlgorithmIdentifiers: () => (/* binding */ supportedCOSEAlgorithmIdentifiers)\n/* harmony export */ });\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _helpers_generateUserID_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/generateUserID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateUserID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n/**\n * Supported crypto algo identifiers\n * See https://w3c.github.io/webauthn/#sctn-alg-identifier\n * and https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nconst supportedCOSEAlgorithmIdentifiers = [\n    // EdDSA (In first position to encourage authenticators to use this over ES256)\n    -8,\n    // ECDSA w/ SHA-256\n    -7,\n    // ECDSA w/ SHA-512\n    -36,\n    // RSASSA-PSS w/ SHA-256\n    -37,\n    // RSASSA-PSS w/ SHA-384\n    -38,\n    // RSASSA-PSS w/ SHA-512\n    -39,\n    // RSASSA-PKCS1-v1_5 w/ SHA-256\n    -257,\n    // RSASSA-PKCS1-v1_5 w/ SHA-384\n    -258,\n    // RSASSA-PKCS1-v1_5 w/ SHA-512\n    -259,\n    // RSASSA-PKCS1-v1_5 w/ SHA-1 (Deprecated; here for legacy support)\n    -65535,\n];\n/**\n * Set up some default authenticator selection options as per the latest spec:\n * https://www.w3.org/TR/webauthn-2/#dictdef-authenticatorselectioncriteria\n *\n * Helps with some older platforms (e.g. Android 7.0 Nougat) that may not be aware of these\n * defaults.\n */\nconst defaultAuthenticatorSelection = {\n    residentKey: 'preferred',\n    userVerification: 'preferred',\n};\n/**\n * Use the most commonly-supported algorithms\n * See the following:\n *   - https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n *   - https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams\n */\nconst defaultSupportedAlgorithmIDs = [-8, -7, -257];\n/**\n * Prepare a value to pass into navigator.credentials.create(...) for authenticator registration\n *\n * **Options:**\n *\n * @param rpName - User-visible, \"friendly\" website/service name\n * @param rpID - Valid domain name (after `https://`)\n * @param userName - User's website-specific username (email, etc...)\n * @param userID **(Optional)** - User's website-specific unique ID. Defaults to generating a random identifier\n * @param challenge **(Optional)** - Random value the authenticator needs to sign and pass back. Defaults to generating a random value\n * @param userDisplayName **(Optional)** - User's actual name. Defaults to `\"\"`\n * @param timeout **(Optional)** - How long (in ms) the user can take to complete attestation. Defaults to `60000`\n * @param attestationType **(Optional)** - Specific attestation statement. Defaults to `\"none\"`\n * @param excludeCredentials **(Optional)** - Authenticators registered by the user so the user can't register the same credential multiple times. Defaults to `[]`\n * @param authenticatorSelection **(Optional)** - Advanced criteria for restricting the types of authenticators that may be used. Defaults to `{ residentKey: 'preferred', userVerification: 'preferred' }`\n * @param extensions **(Optional)** - Additional plugins the authenticator or browser should use during attestation\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to `[-8, -7, -257]`\n */\nasync function generateRegistrationOptions(options) {\n    const { rpName, rpID, userName, userID, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__.generateChallenge)(), userDisplayName = '', timeout = 60000, attestationType = 'none', excludeCredentials = [], authenticatorSelection = defaultAuthenticatorSelection, extensions, supportedAlgorithmIDs = defaultSupportedAlgorithmIDs, } = options;\n    /**\n     * Prepare pubKeyCredParams from the array of algorithm ID's\n     */\n    const pubKeyCredParams = supportedAlgorithmIDs.map((id) => ({\n        alg: id,\n        type: 'public-key',\n    }));\n    /**\n     * Capture some of the nuances of how `residentKey` and `requireResidentKey` how either is set\n     * depending on when either is defined in the options\n     */\n    if (authenticatorSelection.residentKey === undefined) {\n        /**\n         * `residentKey`: \"If no value is given then the effective value is `required` if\n         * requireResidentKey is true or `discouraged` if it is false or absent.\"\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-residentkey\n         */\n        if (authenticatorSelection.requireResidentKey) {\n            authenticatorSelection.residentKey = 'required';\n        }\n        else {\n            /**\n             * FIDO Conformance v1.7.2 fails the first test if we do this, even though this is\n             * technically compatible with the WebAuthn L2 spec...\n             */\n            // authenticatorSelection.residentKey = 'discouraged';\n        }\n    }\n    else {\n        /**\n         * `requireResidentKey`: \"Relying Parties SHOULD set it to true if, and only if, residentKey is\n         * set to \"required\"\"\n         *\n         * Spec says this property defaults to `false` so we should still be okay to assign `false` too\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-requireresidentkey\n         */\n        authenticatorSelection.requireResidentKey = authenticatorSelection.residentKey === 'required';\n    }\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    /**\n     * Explicitly disallow use of strings for userID anymore because `isoBase64URL.fromBuffer()` below\n     * will return an empty string if one gets through!\n     */\n    if (typeof userID === 'string') {\n        throw new Error(`String values for \\`userID\\` are no longer supported. See https://simplewebauthn.dev/docs/advanced/server/custom-user-ids`);\n    }\n    /**\n     * Generate a user ID if one is not provided\n     */\n    let _userID = userID;\n    if (!_userID) {\n        _userID = await (0,_helpers_generateUserID_js__WEBPACK_IMPORTED_MODULE_1__.generateUserID)();\n    }\n    return {\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__.isoBase64URL.fromBuffer(_challenge),\n        rp: {\n            name: rpName,\n            id: rpID,\n        },\n        user: {\n            id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__.isoBase64URL.fromBuffer(_userID),\n            name: userName,\n            displayName: userDisplayName,\n        },\n        pubKeyCredParams,\n        timeout,\n        attestation: attestationType,\n        excludeCredentials: excludeCredentials.map((cred) => {\n            if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__.isoBase64URL.isBase64URL(cred.id)) {\n                throw new Error(`excludeCredential id \"${cred.id}\" is not a valid base64url string`);\n            }\n            return {\n                ...cred,\n                id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_2__.isoBase64URL.trimPadding(cred.id),\n                type: 'public-key',\n            };\n        }),\n        authenticatorSelection,\n        extensions: {\n            ...extensions,\n            credProps: true,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TPM_ALG: () => (/* binding */ TPM_ALG),\n/* harmony export */   TPM_ECC_CURVE: () => (/* binding */ TPM_ECC_CURVE),\n/* harmony export */   TPM_ECC_CURVE_COSE_CRV_MAP: () => (/* binding */ TPM_ECC_CURVE_COSE_CRV_MAP),\n/* harmony export */   TPM_MANUFACTURERS: () => (/* binding */ TPM_MANUFACTURERS),\n/* harmony export */   TPM_ST: () => (/* binding */ TPM_ST)\n/* harmony export */ });\n// deno-lint-ignore-file no-dupe-keys\n/**\n * A whole lotta domain knowledge is captured here, with hazy connections to source\n * documents. Good places to start searching for more info on these values are the\n * following Trusted Computing Group TPM Library docs linked in the WebAuthn API:\n *\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf\n */\n/**\n * 6.9 TPM_ST (Structure Tags)\n */\nconst TPM_ST = {\n    0x00c4: 'TPM_ST_RSP_COMMAND',\n    0x8000: 'TPM_ST_NULL',\n    0x8001: 'TPM_ST_NO_SESSIONS',\n    0x8002: 'TPM_ST_SESSIONS',\n    0x8014: 'TPM_ST_ATTEST_NV',\n    0x8015: 'TPM_ST_ATTEST_COMMAND_AUDIT',\n    0x8016: 'TPM_ST_ATTEST_SESSION_AUDIT',\n    0x8017: 'TPM_ST_ATTEST_CERTIFY',\n    0x8018: 'TPM_ST_ATTEST_QUOTE',\n    0x8019: 'TPM_ST_ATTEST_TIME',\n    0x801a: 'TPM_ST_ATTEST_CREATION',\n    0x8021: 'TPM_ST_CREATION',\n    0x8022: 'TPM_ST_VERIFIED',\n    0x8023: 'TPM_ST_AUTH_SECRET',\n    0x8024: 'TPM_ST_HASHCHECK',\n    0x8025: 'TPM_ST_AUTH_SIGNED',\n    0x8029: 'TPM_ST_FU_MANIFEST',\n};\n/**\n * 6.3 TPM_ALG_ID\n */\nconst TPM_ALG = {\n    0x0000: 'TPM_ALG_ERROR',\n    0x0001: 'TPM_ALG_RSA',\n    0x0004: 'TPM_ALG_SHA',\n    // @ts-ignore 2300\n    0x0004: 'TPM_ALG_SHA1',\n    0x0005: 'TPM_ALG_HMAC',\n    0x0006: 'TPM_ALG_AES',\n    0x0007: 'TPM_ALG_MGF1',\n    0x0008: 'TPM_ALG_KEYEDHASH',\n    0x000a: 'TPM_ALG_XOR',\n    0x000b: 'TPM_ALG_SHA256',\n    0x000c: 'TPM_ALG_SHA384',\n    0x000d: 'TPM_ALG_SHA512',\n    0x0010: 'TPM_ALG_NULL',\n    0x0012: 'TPM_ALG_SM3_256',\n    0x0013: 'TPM_ALG_SM4',\n    0x0014: 'TPM_ALG_RSASSA',\n    0x0015: 'TPM_ALG_RSAES',\n    0x0016: 'TPM_ALG_RSAPSS',\n    0x0017: 'TPM_ALG_OAEP',\n    0x0018: 'TPM_ALG_ECDSA',\n    0x0019: 'TPM_ALG_ECDH',\n    0x001a: 'TPM_ALG_ECDAA',\n    0x001b: 'TPM_ALG_SM2',\n    0x001c: 'TPM_ALG_ECSCHNORR',\n    0x001d: 'TPM_ALG_ECMQV',\n    0x0020: 'TPM_ALG_KDF1_SP800_56A',\n    0x0021: 'TPM_ALG_KDF2',\n    0x0022: 'TPM_ALG_KDF1_SP800_108',\n    0x0023: 'TPM_ALG_ECC',\n    0x0025: 'TPM_ALG_SYMCIPHER',\n    0x0026: 'TPM_ALG_CAMELLIA',\n    0x0040: 'TPM_ALG_CTR',\n    0x0041: 'TPM_ALG_OFB',\n    0x0042: 'TPM_ALG_CBC',\n    0x0043: 'TPM_ALG_CFB',\n    0x0044: 'TPM_ALG_ECB',\n};\n/**\n * 6.4 TPM_ECC_CURVE\n */\nconst TPM_ECC_CURVE = {\n    0x0000: 'TPM_ECC_NONE',\n    0x0001: 'TPM_ECC_NIST_P192',\n    0x0002: 'TPM_ECC_NIST_P224',\n    0x0003: 'TPM_ECC_NIST_P256',\n    0x0004: 'TPM_ECC_NIST_P384',\n    0x0005: 'TPM_ECC_NIST_P521',\n    0x0010: 'TPM_ECC_BN_P256',\n    0x0011: 'TPM_ECC_BN_P638',\n    0x0020: 'TPM_ECC_SM2_P256',\n};\n/**\n * Sourced from https://trustedcomputinggroup.org/resource/vendor-id-registry/\n *\n * Latest version:\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-Vendor-ID-Registry-Version-1.02-Revision-1.00.pdf\n */\nconst TPM_MANUFACTURERS = {\n    'id:414D4400': {\n        name: 'AMD',\n        id: 'AMD',\n    },\n    'id:41544D4C': {\n        name: 'Atmel',\n        id: 'ATML',\n    },\n    'id:4252434D': {\n        name: 'Broadcom',\n        id: 'BRCM',\n    },\n    'id:49424d00': {\n        name: 'IBM',\n        id: 'IBM',\n    },\n    'id:49465800': {\n        name: 'Infineon',\n        id: 'IFX',\n    },\n    'id:494E5443': {\n        name: 'Intel',\n        id: 'INTC',\n    },\n    'id:4C454E00': {\n        name: 'Lenovo',\n        id: 'LEN',\n    },\n    'id:4E534D20': {\n        name: 'National Semiconductor',\n        id: 'NSM',\n    },\n    'id:4E545A00': {\n        name: 'Nationz',\n        id: 'NTZ',\n    },\n    'id:4E544300': {\n        name: 'Nuvoton Technology',\n        id: 'NTC',\n    },\n    'id:51434F4D': {\n        name: 'Qualcomm',\n        id: 'QCOM',\n    },\n    'id:534D5343': {\n        name: 'SMSC',\n        id: 'SMSC',\n    },\n    'id:53544D20': {\n        name: 'ST Microelectronics',\n        id: 'STM',\n    },\n    'id:534D534E': {\n        name: 'Samsung',\n        id: 'SMSN',\n    },\n    'id:534E5300': {\n        name: 'Sinosun',\n        id: 'SNS',\n    },\n    'id:54584E00': {\n        name: 'Texas Instruments',\n        id: 'TXN',\n    },\n    'id:57454300': {\n        name: 'Winbond',\n        id: 'WEC',\n    },\n    'id:524F4343': {\n        name: 'Fuzhouk Rockchip',\n        id: 'ROCC',\n    },\n    'id:FFFFF1D0': {\n        name: 'FIDO Alliance',\n        id: 'FIDO',\n    },\n};\n/**\n * Match TPM public area curve ID's to `crv` numbers used in COSE public keys\n */\nconst TPM_ECC_CURVE_COSE_CRV_MAP = {\n    TPM_ECC_NIST_P256: 1,\n    TPM_ECC_NIST_P384: 2,\n    TPM_ECC_NIST_P521: 3,\n    TPM_ECC_BN_P256: 1,\n    TPM_ECC_SM2_P256: 1, // p256\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCertInfo: () => (/* binding */ parseCertInfo)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Cut up a TPM attestation's certInfo into intelligible chunks\n */\nfunction parseCertInfo(certInfo) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(certInfo);\n    // Get a magic constant\n    const magic = dataView.getUint32(pointer);\n    pointer += 4;\n    // Determine the algorithm used for attestation\n    const typeBuffer = dataView.getUint16(pointer);\n    pointer += 2;\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ST[typeBuffer];\n    // The name of a parent entity, can be ignored\n    const qualifiedSignerLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedSigner = certInfo.slice(pointer, pointer += qualifiedSignerLength);\n    // Get the expected hash of `attsToBeSigned`\n    const extraDataLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const extraData = certInfo.slice(pointer, pointer += extraDataLength);\n    // Information about the TPM device's internal clock, can be ignored\n    const clock = certInfo.slice(pointer, pointer += 8);\n    const resetCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const restartCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const safe = !!certInfo.slice(pointer, pointer += 1);\n    const clockInfo = { clock, resetCount, restartCount, safe };\n    // TPM device firmware version\n    const firmwareVersion = certInfo.slice(pointer, pointer += 8);\n    // Attested Name\n    const attestedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const attestedName = certInfo.slice(pointer, pointer += attestedNameLength);\n    const attestedNameDataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(attestedName);\n    // Attested qualified name, can be ignored\n    const qualifiedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedName = certInfo.slice(pointer, pointer += qualifiedNameLength);\n    const attested = {\n        nameAlg: _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[attestedNameDataView.getUint16(0)],\n        nameAlgBuffer: attestedName.slice(0, 2),\n        name: attestedName,\n        qualifiedName,\n    };\n    return {\n        magic,\n        type,\n        qualifiedSigner,\n        extraData,\n        clockInfo,\n        firmwareVersion,\n        attested,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlQ2VydEluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2E7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHFCQUFxQiwyRUFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlEQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMkVBQXdCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0RBQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9yZWdpc3RyYXRpb24vdmVyaWZpY2F0aW9ucy90cG0vcGFyc2VDZXJ0SW5mby5qcz9kMWY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRQTV9BTEcsIFRQTV9TVCB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIEN1dCB1cCBhIFRQTSBhdHRlc3RhdGlvbidzIGNlcnRJbmZvIGludG8gaW50ZWxsaWdpYmxlIGNodW5rc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDZXJ0SW5mbyhjZXJ0SW5mbykge1xuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCBkYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhjZXJ0SW5mbyk7XG4gICAgLy8gR2V0IGEgbWFnaWMgY29uc3RhbnRcbiAgICBjb25zdCBtYWdpYyA9IGRhdGFWaWV3LmdldFVpbnQzMihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgLy8gRGV0ZXJtaW5lIHRoZSBhbGdvcml0aG0gdXNlZCBmb3IgYXR0ZXN0YXRpb25cbiAgICBjb25zdCB0eXBlQnVmZmVyID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICBjb25zdCB0eXBlID0gVFBNX1NUW3R5cGVCdWZmZXJdO1xuICAgIC8vIFRoZSBuYW1lIG9mIGEgcGFyZW50IGVudGl0eSwgY2FuIGJlIGlnbm9yZWRcbiAgICBjb25zdCBxdWFsaWZpZWRTaWduZXJMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IHF1YWxpZmllZFNpZ25lciA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gcXVhbGlmaWVkU2lnbmVyTGVuZ3RoKTtcbiAgICAvLyBHZXQgdGhlIGV4cGVjdGVkIGhhc2ggb2YgYGF0dHNUb0JlU2lnbmVkYFxuICAgIGNvbnN0IGV4dHJhRGF0YUxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgZXh0cmFEYXRhID0gY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSBleHRyYURhdGFMZW5ndGgpO1xuICAgIC8vIEluZm9ybWF0aW9uIGFib3V0IHRoZSBUUE0gZGV2aWNlJ3MgaW50ZXJuYWwgY2xvY2ssIGNhbiBiZSBpZ25vcmVkXG4gICAgY29uc3QgY2xvY2sgPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDgpO1xuICAgIGNvbnN0IHJlc2V0Q291bnQgPSBkYXRhVmlldy5nZXRVaW50MzIocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSA0O1xuICAgIGNvbnN0IHJlc3RhcnRDb3VudCA9IGRhdGFWaWV3LmdldFVpbnQzMihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgY29uc3Qgc2FmZSA9ICEhY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSAxKTtcbiAgICBjb25zdCBjbG9ja0luZm8gPSB7IGNsb2NrLCByZXNldENvdW50LCByZXN0YXJ0Q291bnQsIHNhZmUgfTtcbiAgICAvLyBUUE0gZGV2aWNlIGZpcm13YXJlIHZlcnNpb25cbiAgICBjb25zdCBmaXJtd2FyZVZlcnNpb24gPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDgpO1xuICAgIC8vIEF0dGVzdGVkIE5hbWVcbiAgICBjb25zdCBhdHRlc3RlZE5hbWVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IGF0dGVzdGVkTmFtZSA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gYXR0ZXN0ZWROYW1lTGVuZ3RoKTtcbiAgICBjb25zdCBhdHRlc3RlZE5hbWVEYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhhdHRlc3RlZE5hbWUpO1xuICAgIC8vIEF0dGVzdGVkIHF1YWxpZmllZCBuYW1lLCBjYW4gYmUgaWdub3JlZFxuICAgIGNvbnN0IHF1YWxpZmllZE5hbWVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IHF1YWxpZmllZE5hbWUgPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IHF1YWxpZmllZE5hbWVMZW5ndGgpO1xuICAgIGNvbnN0IGF0dGVzdGVkID0ge1xuICAgICAgICBuYW1lQWxnOiBUUE1fQUxHW2F0dGVzdGVkTmFtZURhdGFWaWV3LmdldFVpbnQxNigwKV0sXG4gICAgICAgIG5hbWVBbGdCdWZmZXI6IGF0dGVzdGVkTmFtZS5zbGljZSgwLCAyKSxcbiAgICAgICAgbmFtZTogYXR0ZXN0ZWROYW1lLFxuICAgICAgICBxdWFsaWZpZWROYW1lLFxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFnaWMsXG4gICAgICAgIHR5cGUsXG4gICAgICAgIHF1YWxpZmllZFNpZ25lcixcbiAgICAgICAgZXh0cmFEYXRhLFxuICAgICAgICBjbG9ja0luZm8sXG4gICAgICAgIGZpcm13YXJlVmVyc2lvbixcbiAgICAgICAgYXR0ZXN0ZWQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePubArea: () => (/* binding */ parsePubArea)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Break apart a TPM attestation's pubArea buffer\n *\n * See 12.2.4 TPMT_PUBLIC here:\n * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n */\nfunction parsePubArea(pubArea) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(pubArea);\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    const nameAlg = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    // Get some authenticator attributes(?)\n    // const objectAttributesInt = pubArea.slice(pointer, (pointer += 4)).readUInt32BE(0);\n    const objectAttributesInt = dataView.getUint32(pointer);\n    pointer += 4;\n    const objectAttributes = {\n        fixedTPM: !!(objectAttributesInt & 1),\n        stClear: !!(objectAttributesInt & 2),\n        fixedParent: !!(objectAttributesInt & 8),\n        sensitiveDataOrigin: !!(objectAttributesInt & 16),\n        userWithAuth: !!(objectAttributesInt & 32),\n        adminWithPolicy: !!(objectAttributesInt & 64),\n        noDA: !!(objectAttributesInt & 512),\n        encryptedDuplication: !!(objectAttributesInt & 1024),\n        restricted: !!(objectAttributesInt & 32768),\n        decrypt: !!(objectAttributesInt & 65536),\n        signOrEncrypt: !!(objectAttributesInt & 131072),\n    };\n    // Slice out the authPolicy of dynamic length\n    const authPolicyLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const authPolicy = pubArea.slice(pointer, pointer += authPolicyLength);\n    // Extract additional curve params according to type\n    const parameters = {};\n    let unique = Uint8Array.from([]);\n    if (type === 'TPM_ALG_RSA') {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const keyBits = dataView.getUint16(pointer);\n        pointer += 2;\n        const exponent = dataView.getUint32(pointer);\n        pointer += 4;\n        parameters.rsa = { symmetric, scheme, keyBits, exponent };\n        /**\n         * See 11.2.4.5 TPM2B_PUBLIC_KEY_RSA here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // const uniqueLength = pubArea.slice(pointer, (pointer += 2)).readUInt16BE(0);\n        const uniqueLength = dataView.getUint16(pointer);\n        pointer += 2;\n        unique = pubArea.slice(pointer, pointer += uniqueLength);\n    }\n    else if (type === 'TPM_ALG_ECC') {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const curveID = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ECC_CURVE[dataView.getUint16(pointer)];\n        pointer += 2;\n        const kdf = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        parameters.ecc = { symmetric, scheme, curveID, kdf };\n        /**\n         * See 11.2.5.1 TPM2B_ECC_PARAMETER here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // Retrieve X\n        const uniqueXLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueX = pubArea.slice(pointer, pointer += uniqueXLength);\n        // Retrieve Y\n        const uniqueYLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueY = pubArea.slice(pointer, pointer += uniqueYLength);\n        unique = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([uniqueX, uniqueY]);\n    }\n    else {\n        throw new Error(`Unexpected type \"${type}\" (TPM)`);\n    }\n    return {\n        type,\n        nameAlg,\n        objectAttributes,\n        authPolicy,\n        parameters,\n        unique,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlUHViQXJlYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDTTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLDJFQUF3QjtBQUM3QyxpQkFBaUIsa0RBQU87QUFDeEI7QUFDQSxvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrREFBTztBQUNqQztBQUNBLHVCQUF1QixrREFBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtEQUFPO0FBQ2pDO0FBQ0EsdUJBQXVCLGtEQUFPO0FBQzlCO0FBQ0Esd0JBQXdCLHdEQUFhO0FBQ3JDO0FBQ0Esb0JBQW9CLGtEQUFPO0FBQzNCO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1RUFBb0I7QUFDckM7QUFDQTtBQUNBLDRDQUE0QyxLQUFLO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3RwbS9wYXJzZVB1YkFyZWEuanM/Y2RlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUUE1fQUxHLCBUUE1fRUNDX0NVUlZFIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbi8qKlxuICogQnJlYWsgYXBhcnQgYSBUUE0gYXR0ZXN0YXRpb24ncyBwdWJBcmVhIGJ1ZmZlclxuICpcbiAqIFNlZSAxMi4yLjQgVFBNVF9QVUJMSUMgaGVyZTpcbiAqIGh0dHBzOi8vdHJ1c3RlZGNvbXB1dGluZ2dyb3VwLm9yZy93cC1jb250ZW50L3VwbG9hZHMvVFBNLVJldi0yLjAtUGFydC0yLVN0cnVjdHVyZXMtMDAuOTYtMTMwMzE1LnBkZlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VQdWJBcmVhKHB1YkFyZWEpIHtcbiAgICBsZXQgcG9pbnRlciA9IDA7XG4gICAgY29uc3QgZGF0YVZpZXcgPSBpc29VaW50OEFycmF5LnRvRGF0YVZpZXcocHViQXJlYSk7XG4gICAgY29uc3QgdHlwZSA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgbmFtZUFsZyA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgLy8gR2V0IHNvbWUgYXV0aGVudGljYXRvciBhdHRyaWJ1dGVzKD8pXG4gICAgLy8gY29uc3Qgb2JqZWN0QXR0cmlidXRlc0ludCA9IHB1YkFyZWEuc2xpY2UocG9pbnRlciwgKHBvaW50ZXIgKz0gNCkpLnJlYWRVSW50MzJCRSgwKTtcbiAgICBjb25zdCBvYmplY3RBdHRyaWJ1dGVzSW50ID0gZGF0YVZpZXcuZ2V0VWludDMyKHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gNDtcbiAgICBjb25zdCBvYmplY3RBdHRyaWJ1dGVzID0ge1xuICAgICAgICBmaXhlZFRQTTogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDEpLFxuICAgICAgICBzdENsZWFyOiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgMiksXG4gICAgICAgIGZpeGVkUGFyZW50OiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgOCksXG4gICAgICAgIHNlbnNpdGl2ZURhdGFPcmlnaW46ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiAxNiksXG4gICAgICAgIHVzZXJXaXRoQXV0aDogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDMyKSxcbiAgICAgICAgYWRtaW5XaXRoUG9saWN5OiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgNjQpLFxuICAgICAgICBub0RBOiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgNTEyKSxcbiAgICAgICAgZW5jcnlwdGVkRHVwbGljYXRpb246ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiAxMDI0KSxcbiAgICAgICAgcmVzdHJpY3RlZDogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDMyNzY4KSxcbiAgICAgICAgZGVjcnlwdDogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDY1NTM2KSxcbiAgICAgICAgc2lnbk9yRW5jcnlwdDogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDEzMTA3MiksXG4gICAgfTtcbiAgICAvLyBTbGljZSBvdXQgdGhlIGF1dGhQb2xpY3kgb2YgZHluYW1pYyBsZW5ndGhcbiAgICBjb25zdCBhdXRoUG9saWN5TGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICBjb25zdCBhdXRoUG9saWN5ID0gcHViQXJlYS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IGF1dGhQb2xpY3lMZW5ndGgpO1xuICAgIC8vIEV4dHJhY3QgYWRkaXRpb25hbCBjdXJ2ZSBwYXJhbXMgYWNjb3JkaW5nIHRvIHR5cGVcbiAgICBjb25zdCBwYXJhbWV0ZXJzID0ge307XG4gICAgbGV0IHVuaXF1ZSA9IFVpbnQ4QXJyYXkuZnJvbShbXSk7XG4gICAgaWYgKHR5cGUgPT09ICdUUE1fQUxHX1JTQScpIHtcbiAgICAgICAgY29uc3Qgc3ltbWV0cmljID0gVFBNX0FMR1tkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IHNjaGVtZSA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBjb25zdCBrZXlCaXRzID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IGV4cG9uZW50ID0gZGF0YVZpZXcuZ2V0VWludDMyKHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDQ7XG4gICAgICAgIHBhcmFtZXRlcnMucnNhID0geyBzeW1tZXRyaWMsIHNjaGVtZSwga2V5Qml0cywgZXhwb25lbnQgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNlZSAxMS4yLjQuNSBUUE0yQl9QVUJMSUNfS0VZX1JTQSBoZXJlOlxuICAgICAgICAgKiBodHRwczovL3RydXN0ZWRjb21wdXRpbmdncm91cC5vcmcvd3AtY29udGVudC91cGxvYWRzL1RQTS1SZXYtMi4wLVBhcnQtMi1TdHJ1Y3R1cmVzLTAwLjk2LTEzMDMxNS5wZGZcbiAgICAgICAgICovXG4gICAgICAgIC8vIGNvbnN0IHVuaXF1ZUxlbmd0aCA9IHB1YkFyZWEuc2xpY2UocG9pbnRlciwgKHBvaW50ZXIgKz0gMikpLnJlYWRVSW50MTZCRSgwKTtcbiAgICAgICAgY29uc3QgdW5pcXVlTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIHVuaXF1ZSA9IHB1YkFyZWEuc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSB1bmlxdWVMZW5ndGgpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09PSAnVFBNX0FMR19FQ0MnKSB7XG4gICAgICAgIGNvbnN0IHN5bW1ldHJpYyA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBjb25zdCBzY2hlbWUgPSBUUE1fQUxHW2RhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKV07XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgY29uc3QgY3VydmVJRCA9IFRQTV9FQ0NfQ1VSVkVbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBjb25zdCBrZGYgPSBUUE1fQUxHW2RhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKV07XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgcGFyYW1ldGVycy5lY2MgPSB7IHN5bW1ldHJpYywgc2NoZW1lLCBjdXJ2ZUlELCBrZGYgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNlZSAxMS4yLjUuMSBUUE0yQl9FQ0NfUEFSQU1FVEVSIGhlcmU6XG4gICAgICAgICAqIGh0dHBzOi8vdHJ1c3RlZGNvbXB1dGluZ2dyb3VwLm9yZy93cC1jb250ZW50L3VwbG9hZHMvVFBNLVJldi0yLjAtUGFydC0yLVN0cnVjdHVyZXMtMDAuOTYtMTMwMzE1LnBkZlxuICAgICAgICAgKi9cbiAgICAgICAgLy8gUmV0cmlldmUgWFxuICAgICAgICBjb25zdCB1bmlxdWVYTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IHVuaXF1ZVggPSBwdWJBcmVhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gdW5pcXVlWExlbmd0aCk7XG4gICAgICAgIC8vIFJldHJpZXZlIFlcbiAgICAgICAgY29uc3QgdW5pcXVlWUxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBjb25zdCB1bmlxdWVZID0gcHViQXJlYS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IHVuaXF1ZVlMZW5ndGgpO1xuICAgICAgICB1bmlxdWUgPSBpc29VaW50OEFycmF5LmNvbmNhdChbdW5pcXVlWCwgdW5pcXVlWV0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHR5cGUgXCIke3R5cGV9XCIgKFRQTSlgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZSxcbiAgICAgICAgbmFtZUFsZyxcbiAgICAgICAgb2JqZWN0QXR0cmlidXRlcyxcbiAgICAgICAgYXV0aFBvbGljeSxcbiAgICAgICAgcGFyYW1ldGVycyxcbiAgICAgICAgdW5pcXVlLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationTPM: () => (/* binding */ verifyAttestationTPM)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parseCertInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\");\n/* harmony import */ var _parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsePubArea.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function verifyAttestationTPM(options) {\n    const { aaguid, attStmt, authData, credentialPublicKey, clientDataHash, rootCertificates, } = options;\n    const ver = attStmt.get('ver');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    const x5c = attStmt.get('x5c');\n    const pubArea = attStmt.get('pubArea');\n    const certInfo = attStmt.get('certInfo');\n    /**\n     * Verify structures\n     */\n    if (ver !== '2.0') {\n        throw new Error(`Unexpected ver \"${ver}\", expected \"2.0\" (TPM)`);\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (TPM)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (TPM)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (TPM)`);\n    }\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (TPM)');\n    }\n    if (!pubArea) {\n        throw new Error('Attestation statement did not contain pubArea (TPM)');\n    }\n    if (!certInfo) {\n        throw new Error('Attestation statement did not contain certInfo (TPM)');\n    }\n    const parsedPubArea = (0,_parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__.parsePubArea)(pubArea);\n    const { unique, type: pubType, parameters } = parsedPubArea;\n    // Verify that the public key specified by the parameters and unique fields of pubArea is\n    // identical to the credentialPublicKey in the attestedCredentialData in authenticatorData.\n    const cosePublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    if (pubType === 'TPM_ALG_RSA') {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const n = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.n);\n        const e = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.e);\n        if (!n) {\n            throw new Error('COSE public key missing n (TPM|RSA)');\n        }\n        if (!e) {\n            throw new Error('COSE public key missing e (TPM|RSA)');\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, n)) {\n            throw new Error('PubArea unique is not same as credentialPublicKey (TPM|RSA)');\n        }\n        if (!parameters.rsa) {\n            throw new Error(`Parsed pubArea type is RSA, but missing parameters.rsa (TPM|RSA)`);\n        }\n        const eBuffer = e;\n        // If `exponent` is equal to 0x00, then exponent is the default RSA exponent of 2^16+1 (65537)\n        const pubAreaExponent = parameters.rsa.exponent || 65537;\n        // Do some bit shifting to get to an integer\n        const eSum = eBuffer[0] + (eBuffer[1] << 8) + (eBuffer[2] << 16);\n        if (pubAreaExponent !== eSum) {\n            throw new Error(`Unexpected public key exp ${eSum}, expected ${pubAreaExponent} (TPM|RSA)`);\n        }\n    }\n    else if (pubType === 'TPM_ALG_ECC') {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const crv = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.crv);\n        const x = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.x);\n        const y = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.y);\n        if (!crv) {\n            throw new Error('COSE public key missing crv (TPM|ECC)');\n        }\n        if (!x) {\n            throw new Error('COSE public key missing x (TPM|ECC)');\n        }\n        if (!y) {\n            throw new Error('COSE public key missing y (TPM|ECC)');\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([x, y]))) {\n            throw new Error('PubArea unique is not same as public key x and y (TPM|ECC)');\n        }\n        if (!parameters.ecc) {\n            throw new Error(`Parsed pubArea type is ECC, but missing parameters.ecc (TPM|ECC)`);\n        }\n        const pubAreaCurveID = parameters.ecc.curveID;\n        const pubAreaCurveIDMapToCOSECRV = _constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_ECC_CURVE_COSE_CRV_MAP[pubAreaCurveID];\n        if (pubAreaCurveIDMapToCOSECRV !== crv) {\n            throw new Error(`Public area key curve ID \"${pubAreaCurveID}\" mapped to \"${pubAreaCurveIDMapToCOSECRV}\" which did not match public key crv of \"${crv}\" (TPM|ECC)`);\n        }\n    }\n    else {\n        throw new Error(`Unsupported pubArea.type \"${pubType}\"`);\n    }\n    const parsedCertInfo = (0,_parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__.parseCertInfo)(certInfo);\n    const { magic, type: certType, attested, extraData } = parsedCertInfo;\n    if (magic !== 0xff544347) {\n        throw new Error(`Unexpected magic value \"${magic}\", expected \"0xff544347\" (TPM)`);\n    }\n    if (certType !== 'TPM_ST_ATTEST_CERTIFY') {\n        throw new Error(`Unexpected type \"${certType}\", expected \"TPM_ST_ATTEST_CERTIFY\" (TPM)`);\n    }\n    // Hash pubArea to create pubAreaHash using the nameAlg in attested\n    const pubAreaHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(pubArea, attestedNameAlgToCOSEAlg(attested.nameAlg));\n    // Concatenate attested.nameAlg and pubAreaHash to create attestedName.\n    const attestedName = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([\n        attested.nameAlgBuffer,\n        pubAreaHash,\n    ]);\n    // Check that certInfo.attested.name is equals to attestedName.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(attested.name, attestedName)) {\n        throw new Error(`Attested name comparison failed (TPM)`);\n    }\n    // Concatenate authData with clientDataHash to create attToBeSigned\n    const attToBeSigned = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([authData, clientDataHash]);\n    // Hash attToBeSigned using the algorithm specified in attStmt.alg to create attToBeSignedHash\n    const attToBeSignedHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(attToBeSigned, alg);\n    // Check that certInfo.extraData is equals to attToBeSignedHash.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(extraData, attToBeSignedHash)) {\n        throw new Error('CertInfo extra data did not equal hashed attestation (TPM)');\n    }\n    /**\n     * Verify signature\n     */\n    if (x5c.length < 1) {\n        throw new Error('No certificates present in x5c array (TPM)');\n    }\n    // Pick a leaf AIK certificate of the x5c array and parse it.\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__.getCertificateInfo)(x5c[0]);\n    const { basicConstraintsCA, version, subject, notAfter, notBefore } = leafCertInfo;\n    if (basicConstraintsCA) {\n        throw new Error('Certificate basic constraints CA was not `false` (TPM)');\n    }\n    // Check that certificate is of version 3 (value must be set to 2).\n    if (version !== 2) {\n        throw new Error('Certificate version was not `3` (ASN.1 value of 2) (TPM)');\n    }\n    // Check that Subject sequence is empty.\n    if (subject.combined.length > 0) {\n        throw new Error('Certificate subject was not empty (TPM)');\n    }\n    // Check that certificate is currently valid\n    let now = new Date();\n    if (notBefore > now) {\n        throw new Error(`Certificate not good before \"${notBefore.toString()}\" (TPM)`);\n    }\n    // Check that certificate has not expired\n    now = new Date();\n    if (notAfter < now) {\n        throw new Error(`Certificate not good after \"${notAfter.toString()}\" (TPM)`);\n    }\n    /**\n     * Plumb the depths of the certificate's ASN.1-formatted data for some values we need to verify\n     */\n    const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    if (!parsedCert.tbsCertificate.extensions) {\n        throw new Error('Certificate was missing extensions (TPM)');\n    }\n    let subjectAltNamePresent;\n    let extKeyUsage;\n    parsedCert.tbsCertificate.extensions.forEach((ext) => {\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectAltName) {\n            subjectAltNamePresent = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectAlternativeName);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_extKeyUsage) {\n            extKeyUsage = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ExtendedKeyUsage);\n        }\n    });\n    // Check that certificate contains subjectAltName (2.5.29.17) extension,\n    if (!subjectAltNamePresent) {\n        throw new Error('Certificate did not contain subjectAltName extension (TPM)');\n    }\n    // TPM-specific values are buried within `directoryName`, so first make sure there are values\n    // there.\n    if (!subjectAltNamePresent[0].directoryName?.[0].length) {\n        throw new Error('Certificate subjectAltName extension directoryName was empty (TPM)');\n    }\n    const { tcgAtTpmManufacturer, tcgAtTpmModel, tcgAtTpmVersion } = getTcgAtTpmValues(subjectAltNamePresent[0].directoryName);\n    if (!tcgAtTpmManufacturer || !tcgAtTpmModel || !tcgAtTpmVersion) {\n        throw new Error('Certificate contained incomplete subjectAltName data (TPM)');\n    }\n    if (!extKeyUsage) {\n        throw new Error('Certificate did not contain ExtendedKeyUsage extension (TPM)');\n    }\n    // Check that tcpaTpmManufacturer (2.23.133.2.1) field is set to a valid manufacturer ID.\n    if (!_constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_MANUFACTURERS[tcgAtTpmManufacturer]) {\n        throw new Error(`Could not match TPM manufacturer \"${tcgAtTpmManufacturer}\" (TPM)`);\n    }\n    // Check that certificate contains extKeyUsage (2.5.29.37) extension and it must contain\n    // tcg-kp-AIKCertificate (2.23.133.8.3) OID.\n    if (extKeyUsage[0] !== '2.23.133.8.3') {\n        throw new Error(`Unexpected extKeyUsage \"${extKeyUsage[0]}\", expected \"2.23.133.8.3\" (TPM)`);\n    }\n    // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n    // that it’s value is set to the same AAGUID as in authData.\n    // Run some metadata checks if a statement exists for this authenticator\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    // Verify signature over certInfo with the public key extracted from AIK certificate.\n    // In the wise words of Yuriy Ackermann: \"Get Martini friend, you are done!\"\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__.verifySignature)({\n        signature: sig,\n        data: certInfo,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n/**\n * Contain logic for pulling TPM-specific values out of subjectAlternativeName extension\n */\nfunction getTcgAtTpmValues(root) {\n    const oidManufacturer = '2.23.133.2.1';\n    const oidModel = '2.23.133.2.2';\n    const oidVersion = '2.23.133.2.3';\n    let tcgAtTpmManufacturer;\n    let tcgAtTpmModel;\n    let tcgAtTpmVersion;\n    /**\n     * Iterate through the following potential structures:\n     *\n     * (Good, follows the spec)\n     * https://trustedcomputinggroup.org/wp-content/uploads/TCG_IWG_EKCredentialProfile_v2p3_r2_pub.pdf (page 33)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * (Bad, does not follow the spec)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * Both structures have been seen in the wild and need to be supported\n     */\n    root.forEach((relName) => {\n        relName.forEach((attr) => {\n            if (attr.type === oidManufacturer) {\n                tcgAtTpmManufacturer = attr.value.toString();\n            }\n            else if (attr.type === oidModel) {\n                tcgAtTpmModel = attr.value.toString();\n            }\n            else if (attr.type === oidVersion) {\n                tcgAtTpmVersion = attr.value.toString();\n            }\n        });\n    });\n    return {\n        tcgAtTpmManufacturer,\n        tcgAtTpmModel,\n        tcgAtTpmVersion,\n    };\n}\n/**\n * Convert TPM-specific SHA algorithm ID's with COSE-specific equivalents. Note that the choice to\n * use ECDSA SHA IDs is arbitrary; any such COSEALG that would map to SHA-256 in\n * `mapCoseAlgToWebCryptoAlg()`\n *\n * SHA IDs referenced from here:\n *\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG_TPM2_r1p59_Part2_Structures_pub.pdf\n */\nfunction attestedNameAlgToCOSEAlg(alg) {\n    if (alg === 'TPM_ALG_SHA256') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256;\n    }\n    else if (alg === 'TPM_ALG_SHA384') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES384;\n    }\n    else if (alg === 'TPM_ALG_SHA512') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES512;\n    }\n    throw new Error(`Unexpected TPM attested name alg ${alg}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidKey: () => (/* binding */ verifyAttestationAndroidKey)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-key'\n */\nasync function verifyAttestationAndroidKey(options) {\n    const { authData, clientDataHash, attStmt, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (AndroidKey)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (AndroidKey)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (AndroidKey)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (AndroidKey)`);\n    }\n    // Check that credentialPublicKey matches the public key in the attestation certificate\n    // Find the public cert in the certificate as PKCS\n    const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCertPubKey = new Uint8Array(parsedCert.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey);\n    // Convert the credentialPublicKey to PKCS\n    const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(credPubKeyPKCS, parsedCertPubKey)) {\n        throw new Error('Credential public key does not equal leaf cert public key (AndroidKey)');\n    }\n    // Find Android KeyStore Extension in certificate extensions\n    const extKeyStore = parsedCert.tbsCertificate.extensions?.find((ext) => ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_keyDescription);\n    if (!extKeyStore) {\n        throw new Error('Certificate did not contain extKeyStore (AndroidKey)');\n    }\n    const parsedExtKeyStore = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(extKeyStore.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.KeyDescription);\n    // Verify extKeyStore values\n    const { attestationChallenge, teeEnforced, softwareEnforced } = parsedExtKeyStore;\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(new Uint8Array(attestationChallenge.buffer), clientDataHash)) {\n        throw new Error('Attestation challenge was not equal to client data hash (AndroidKey)');\n    }\n    // Ensure that the key is strictly bound to the caller app identifier (shouldn't contain the\n    // [600] tag)\n    if (teeEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    if (softwareEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([authData, clientDataHash]);\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNkY7QUFDWjtBQUNFO0FBQ2hCO0FBQ0k7QUFDckI7QUFDUztBQUNTO0FBQzRCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxvRkFBb0Y7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyREFBUztBQUNsQix1RUFBdUUsS0FBSztBQUM1RTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0NBQVMsZUFBZSxpREFBVztBQUMxRDtBQUNBO0FBQ0EsMkJBQTJCLGdGQUFpQjtBQUM1QyxTQUFTLHlFQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYsMERBQW9CO0FBQy9HO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwrQ0FBUyw4QkFBOEIsb0RBQWM7QUFDbkY7QUFDQSxZQUFZLHNEQUFzRDtBQUNsRSxTQUFTLHlFQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix5RUFBZTtBQUMzQztBQUNBO0FBQ0Esa0JBQWtCLHlHQUE2QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsY0FBYztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRGQUF1QixTQUFTLHNGQUFzQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsY0FBYztBQUM3QztBQUNBO0FBQ0EsMEJBQTBCLHVFQUFvQjtBQUM5QyxXQUFXLDRFQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3ZlcmlmeUF0dGVzdGF0aW9uQW5kcm9pZEtleS5qcz9lOWZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgQ2VydGlmaWNhdGUsIGlkX2NlX2tleURlc2NyaXB0aW9uLCBLZXlEZXNjcmlwdGlvbiB9IGZyb20gJy4uLy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgY29udmVydENlcnRCdWZmZXJUb1BFTSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi4vLi4vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgY29udmVydENPU0V0b1BLQ1MgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2NvbnZlcnRDT1NFdG9QS0NTLmpzJztcbmltcG9ydCB7IGlzQ09TRUFsZyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29zZS5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWV0YWRhdGFTZXJ2aWNlLmpzJztcbmltcG9ydCB7IHZlcmlmeUF0dGVzdGF0aW9uV2l0aE1ldGFkYXRhIH0gZnJvbSAnLi4vLi4vbWV0YWRhdGEvdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEuanMnO1xuLyoqXG4gKiBWZXJpZnkgYW4gYXR0ZXN0YXRpb24gcmVzcG9uc2Ugd2l0aCBmbXQgJ2FuZHJvaWQta2V5J1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkS2V5KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGF1dGhEYXRhLCBjbGllbnREYXRhSGFzaCwgYXR0U3RtdCwgY3JlZGVudGlhbFB1YmxpY0tleSwgYWFndWlkLCByb290Q2VydGlmaWNhdGVzLCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgY29uc3Qgc2lnID0gYXR0U3RtdC5nZXQoJ3NpZycpO1xuICAgIGNvbnN0IGFsZyA9IGF0dFN0bXQuZ2V0KCdhbGcnKTtcbiAgICBpZiAoIXg1Yykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGF0dGVzdGF0aW9uIGNlcnRpZmljYXRlIHByb3ZpZGVkIGluIGF0dGVzdGF0aW9uIHN0YXRlbWVudCAoQW5kcm9pZEtleSknKTtcbiAgICB9XG4gICAgaWYgKCFzaWcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBzaWduYXR1cmUgcHJvdmlkZWQgaW4gYXR0ZXN0YXRpb24gc3RhdGVtZW50IChBbmRyb2lkS2V5KScpO1xuICAgIH1cbiAgICBpZiAoIWFsZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dGVzdGF0aW9uIHN0YXRlbWVudCBkaWQgbm90IGNvbnRhaW4gYWxnIChBbmRyb2lkS2V5KWApO1xuICAgIH1cbiAgICBpZiAoIWlzQ09TRUFsZyhhbGcpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQXR0ZXN0YXRpb24gc3RhdGVtZW50IGNvbnRhaW5lZCBpbnZhbGlkIGFsZyAke2FsZ30gKEFuZHJvaWRLZXkpYCk7XG4gICAgfVxuICAgIC8vIENoZWNrIHRoYXQgY3JlZGVudGlhbFB1YmxpY0tleSBtYXRjaGVzIHRoZSBwdWJsaWMga2V5IGluIHRoZSBhdHRlc3RhdGlvbiBjZXJ0aWZpY2F0ZVxuICAgIC8vIEZpbmQgdGhlIHB1YmxpYyBjZXJ0IGluIHRoZSBjZXJ0aWZpY2F0ZSBhcyBQS0NTXG4gICAgY29uc3QgcGFyc2VkQ2VydCA9IEFzblBhcnNlci5wYXJzZSh4NWNbMF0sIENlcnRpZmljYXRlKTtcbiAgICBjb25zdCBwYXJzZWRDZXJ0UHViS2V5ID0gbmV3IFVpbnQ4QXJyYXkocGFyc2VkQ2VydC50YnNDZXJ0aWZpY2F0ZS5zdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5KTtcbiAgICAvLyBDb252ZXJ0IHRoZSBjcmVkZW50aWFsUHVibGljS2V5IHRvIFBLQ1NcbiAgICBjb25zdCBjcmVkUHViS2V5UEtDUyA9IGNvbnZlcnRDT1NFdG9QS0NTKGNyZWRlbnRpYWxQdWJsaWNLZXkpO1xuICAgIGlmICghaXNvVWludDhBcnJheS5hcmVFcXVhbChjcmVkUHViS2V5UEtDUywgcGFyc2VkQ2VydFB1YktleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDcmVkZW50aWFsIHB1YmxpYyBrZXkgZG9lcyBub3QgZXF1YWwgbGVhZiBjZXJ0IHB1YmxpYyBrZXkgKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIC8vIEZpbmQgQW5kcm9pZCBLZXlTdG9yZSBFeHRlbnNpb24gaW4gY2VydGlmaWNhdGUgZXh0ZW5zaW9uc1xuICAgIGNvbnN0IGV4dEtleVN0b3JlID0gcGFyc2VkQ2VydC50YnNDZXJ0aWZpY2F0ZS5leHRlbnNpb25zPy5maW5kKChleHQpID0+IGV4dC5leHRuSUQgPT09IGlkX2NlX2tleURlc2NyaXB0aW9uKTtcbiAgICBpZiAoIWV4dEtleVN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgZGlkIG5vdCBjb250YWluIGV4dEtleVN0b3JlIChBbmRyb2lkS2V5KScpO1xuICAgIH1cbiAgICBjb25zdCBwYXJzZWRFeHRLZXlTdG9yZSA9IEFzblBhcnNlci5wYXJzZShleHRLZXlTdG9yZS5leHRuVmFsdWUsIEtleURlc2NyaXB0aW9uKTtcbiAgICAvLyBWZXJpZnkgZXh0S2V5U3RvcmUgdmFsdWVzXG4gICAgY29uc3QgeyBhdHRlc3RhdGlvbkNoYWxsZW5nZSwgdGVlRW5mb3JjZWQsIHNvZnR3YXJlRW5mb3JjZWQgfSA9IHBhcnNlZEV4dEtleVN0b3JlO1xuICAgIGlmICghaXNvVWludDhBcnJheS5hcmVFcXVhbChuZXcgVWludDhBcnJheShhdHRlc3RhdGlvbkNoYWxsZW5nZS5idWZmZXIpLCBjbGllbnREYXRhSGFzaCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBdHRlc3RhdGlvbiBjaGFsbGVuZ2Ugd2FzIG5vdCBlcXVhbCB0byBjbGllbnQgZGF0YSBoYXNoIChBbmRyb2lkS2V5KScpO1xuICAgIH1cbiAgICAvLyBFbnN1cmUgdGhhdCB0aGUga2V5IGlzIHN0cmljdGx5IGJvdW5kIHRvIHRoZSBjYWxsZXIgYXBwIGlkZW50aWZpZXIgKHNob3VsZG4ndCBjb250YWluIHRoZVxuICAgIC8vIFs2MDBdIHRhZylcbiAgICBpZiAodGVlRW5mb3JjZWQuYWxsQXBwbGljYXRpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0ZWVFbmZvcmNlZCBjb250YWluZWQgXCJhbGxBcHBsaWNhdGlvbnMgWzYwMF1cIiB0YWcgKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIGlmIChzb2Z0d2FyZUVuZm9yY2VkLmFsbEFwcGxpY2F0aW9ucyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndGVlRW5mb3JjZWQgY29udGFpbmVkIFwiYWxsQXBwbGljYXRpb25zIFs2MDBdXCIgdGFnIChBbmRyb2lkS2V5KScpO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZW1lbnQgPSBhd2FpdCBNZXRhZGF0YVNlcnZpY2UuZ2V0U3RhdGVtZW50KGFhZ3VpZCk7XG4gICAgaWYgKHN0YXRlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEoe1xuICAgICAgICAgICAgICAgIHN0YXRlbWVudCxcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5LFxuICAgICAgICAgICAgICAgIHg1YyxcbiAgICAgICAgICAgICAgICBhdHRlc3RhdGlvblN0YXRlbWVudEFsZzogYWxnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChBbmRyb2lkS2V5KWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gVHJ5IHZhbGlkYXRpbmcgdGhlIGNlcnRpZmljYXRlIHBhdGggdXNpbmcgdGhlIHJvb3QgY2VydGlmaWNhdGVzIHNldCB2aWEgU2V0dGluZ3NTZXJ2aWNlXG4gICAgICAgICAgICBhd2FpdCB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCh4NWMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pLCByb290Q2VydGlmaWNhdGVzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKEFuZHJvaWRLZXkpYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgc2lnbmF0dXJlQmFzZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFthdXRoRGF0YSwgY2xpZW50RGF0YUhhc2hdKTtcbiAgICByZXR1cm4gdmVyaWZ5U2lnbmF0dXJlKHtcbiAgICAgICAgc2lnbmF0dXJlOiBzaWcsXG4gICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgIHg1MDlDZXJ0aWZpY2F0ZTogeDVjWzBdLFxuICAgICAgICBoYXNoQWxnb3JpdGhtOiBhbGcsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidSafetyNet: () => (/* binding */ verifyAttestationAndroidSafetyNet)\n/* harmony export */ });\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-safetynet'\n */\nasync function verifyAttestationAndroidSafetyNet(options) {\n    const { attStmt, clientDataHash, authData, aaguid, rootCertificates, verifyTimestampMS = true, credentialPublicKey, } = options;\n    const alg = attStmt.get('alg');\n    const response = attStmt.get('response');\n    const ver = attStmt.get('ver');\n    if (!ver) {\n        throw new Error('No ver value in attestation (SafetyNet)');\n    }\n    if (!response) {\n        throw new Error('No response was included in attStmt by authenticator (SafetyNet)');\n    }\n    // Prepare to verify a JWT\n    const jwt = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.toUTF8String(response);\n    const jwtParts = jwt.split('.');\n    const HEADER = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toUTF8String(jwtParts[0]));\n    const PAYLOAD = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toUTF8String(jwtParts[1]));\n    const SIGNATURE = jwtParts[2];\n    /**\n     * START Verify PAYLOAD\n     */\n    const { nonce, ctsProfileMatch, timestampMs } = PAYLOAD;\n    if (verifyTimestampMS) {\n        // Make sure timestamp is in the past\n        let now = Date.now();\n        if (timestampMs > Date.now()) {\n            throw new Error(`Payload timestamp \"${timestampMs}\" was later than \"${now}\" (SafetyNet)`);\n        }\n        // Consider a SafetyNet attestation valid within a minute of it being performed\n        const timestampPlusDelay = timestampMs + 60 * 1000;\n        now = Date.now();\n        if (timestampPlusDelay < now) {\n            throw new Error(`Payload timestamp \"${timestampPlusDelay}\" has expired (SafetyNet)`);\n        }\n    }\n    const nonceBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    const nonceBuffer = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(nonceBase);\n    const expectedNonce = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.fromBuffer(nonceBuffer, 'base64');\n    if (nonce !== expectedNonce) {\n        throw new Error('Could not verify payload nonce (SafetyNet)');\n    }\n    if (!ctsProfileMatch) {\n        throw new Error('Could not verify device integrity (SafetyNet)');\n    }\n    /**\n     * END Verify PAYLOAD\n     */\n    /**\n     * START Verify Header\n     */\n    // `HEADER.x5c[0]` is definitely a base64 string\n    const leafCertBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(HEADER.x5c[0], 'base64');\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__.getCertificateInfo)(leafCertBuffer);\n    const { subject } = leafCertInfo;\n    // Ensure the certificate was issued to this hostname\n    // See https://developer.android.com/training/safetynet/attestation#verify-attestation-response\n    if (subject.CN !== 'attest.android.com') {\n        throw new Error('Certificate common name was not \"attest.android.com\" (SafetyNet)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c: HEADER.x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__.validateCertificatePath)(HEADER.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    /**\n     * END Verify Header\n     */\n    /**\n     * START Verify Signature\n     */\n    const signatureBaseBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.fromUTF8String(`${jwtParts[0]}.${jwtParts[1]}`);\n    const signatureBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(SIGNATURE);\n    const verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__.verifySignature)({\n        signature: signatureBuffer,\n        data: signatureBaseBuffer,\n        x509Certificate: leafCertBuffer,\n    });\n    /**\n     * END Verify Signature\n     */\n    return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkU2FmZXR5TmV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFpRDtBQUNrQjtBQUNNO0FBQ1U7QUFDRjtBQUNSO0FBQ0w7QUFDNEI7QUFDaEc7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLDhHQUE4RztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2RUFBMEI7QUFDMUM7QUFDQSw4QkFBOEIsNEVBQXlCO0FBQ3ZELCtCQUErQiw0RUFBeUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNDQUFzQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxZQUFZLG9CQUFvQixJQUFJO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsbUJBQW1CO0FBQ3JFO0FBQ0E7QUFDQSxzQkFBc0IsdUVBQW9CO0FBQzFDLDhCQUE4QiwwREFBTTtBQUNwQywwQkFBMEIsMEVBQXVCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHdFQUFxQjtBQUNoRCx5QkFBeUIsa0ZBQWtCO0FBQzNDLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHlFQUFlO0FBQzNDO0FBQ0E7QUFDQSxrQkFBa0IseUdBQTZCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixjQUFjO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEZBQXVCLGdCQUFnQixzRkFBc0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGNBQWM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywrRUFBNEIsSUFBSSxZQUFZLEdBQUcsWUFBWTtBQUMzRiw0QkFBNEIsd0VBQXFCO0FBQ2pELDJCQUEyQiw0RUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9yZWdpc3RyYXRpb24vdmVyaWZpY2F0aW9ucy92ZXJpZnlBdHRlc3RhdGlvbkFuZHJvaWRTYWZldHlOZXQuanM/MjZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuLi8uLi9oZWxwZXJzL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlTaWduYXR1cmUgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZlcmlmeVNpZ25hdHVyZS5qcyc7XG5pbXBvcnQgeyBnZXRDZXJ0aWZpY2F0ZUluZm8gfSBmcm9tICcuLi8uLi9oZWxwZXJzL2dldENlcnRpZmljYXRlSW5mby5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgY29udmVydENlcnRCdWZmZXJUb1BFTSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwsIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tZXRhZGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEgfSBmcm9tICcuLi8uLi9tZXRhZGF0YS92ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdHRlc3RhdGlvbiByZXNwb25zZSB3aXRoIGZtdCAnYW5kcm9pZC1zYWZldHluZXQnXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvbkFuZHJvaWRTYWZldHlOZXQob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgY2xpZW50RGF0YUhhc2gsIGF1dGhEYXRhLCBhYWd1aWQsIHJvb3RDZXJ0aWZpY2F0ZXMsIHZlcmlmeVRpbWVzdGFtcE1TID0gdHJ1ZSwgY3JlZGVudGlhbFB1YmxpY0tleSwgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgYWxnID0gYXR0U3RtdC5nZXQoJ2FsZycpO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXR0U3RtdC5nZXQoJ3Jlc3BvbnNlJyk7XG4gICAgY29uc3QgdmVyID0gYXR0U3RtdC5nZXQoJ3ZlcicpO1xuICAgIGlmICghdmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gdmVyIHZhbHVlIGluIGF0dGVzdGF0aW9uIChTYWZldHlOZXQpJyk7XG4gICAgfVxuICAgIGlmICghcmVzcG9uc2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyByZXNwb25zZSB3YXMgaW5jbHVkZWQgaW4gYXR0U3RtdCBieSBhdXRoZW50aWNhdG9yIChTYWZldHlOZXQpJyk7XG4gICAgfVxuICAgIC8vIFByZXBhcmUgdG8gdmVyaWZ5IGEgSldUXG4gICAgY29uc3Qgand0ID0gaXNvVWludDhBcnJheS50b1VURjhTdHJpbmcocmVzcG9uc2UpO1xuICAgIGNvbnN0IGp3dFBhcnRzID0gand0LnNwbGl0KCcuJyk7XG4gICAgY29uc3QgSEVBREVSID0gSlNPTi5wYXJzZShpc29CYXNlNjRVUkwudG9VVEY4U3RyaW5nKGp3dFBhcnRzWzBdKSk7XG4gICAgY29uc3QgUEFZTE9BRCA9IEpTT04ucGFyc2UoaXNvQmFzZTY0VVJMLnRvVVRGOFN0cmluZyhqd3RQYXJ0c1sxXSkpO1xuICAgIGNvbnN0IFNJR05BVFVSRSA9IGp3dFBhcnRzWzJdO1xuICAgIC8qKlxuICAgICAqIFNUQVJUIFZlcmlmeSBQQVlMT0FEXG4gICAgICovXG4gICAgY29uc3QgeyBub25jZSwgY3RzUHJvZmlsZU1hdGNoLCB0aW1lc3RhbXBNcyB9ID0gUEFZTE9BRDtcbiAgICBpZiAodmVyaWZ5VGltZXN0YW1wTVMpIHtcbiAgICAgICAgLy8gTWFrZSBzdXJlIHRpbWVzdGFtcCBpcyBpbiB0aGUgcGFzdFxuICAgICAgICBsZXQgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgaWYgKHRpbWVzdGFtcE1zID4gRGF0ZS5ub3coKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXlsb2FkIHRpbWVzdGFtcCBcIiR7dGltZXN0YW1wTXN9XCIgd2FzIGxhdGVyIHRoYW4gXCIke25vd31cIiAoU2FmZXR5TmV0KWApO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvbnNpZGVyIGEgU2FmZXR5TmV0IGF0dGVzdGF0aW9uIHZhbGlkIHdpdGhpbiBhIG1pbnV0ZSBvZiBpdCBiZWluZyBwZXJmb3JtZWRcbiAgICAgICAgY29uc3QgdGltZXN0YW1wUGx1c0RlbGF5ID0gdGltZXN0YW1wTXMgKyA2MCAqIDEwMDA7XG4gICAgICAgIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGlmICh0aW1lc3RhbXBQbHVzRGVsYXkgPCBub3cpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUGF5bG9hZCB0aW1lc3RhbXAgXCIke3RpbWVzdGFtcFBsdXNEZWxheX1cIiBoYXMgZXhwaXJlZCAoU2FmZXR5TmV0KWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5vbmNlQmFzZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFthdXRoRGF0YSwgY2xpZW50RGF0YUhhc2hdKTtcbiAgICBjb25zdCBub25jZUJ1ZmZlciA9IGF3YWl0IHRvSGFzaChub25jZUJhc2UpO1xuICAgIGNvbnN0IGV4cGVjdGVkTm9uY2UgPSBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihub25jZUJ1ZmZlciwgJ2Jhc2U2NCcpO1xuICAgIGlmIChub25jZSAhPT0gZXhwZWN0ZWROb25jZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCB2ZXJpZnkgcGF5bG9hZCBub25jZSAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICBpZiAoIWN0c1Byb2ZpbGVNYXRjaCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCB2ZXJpZnkgZGV2aWNlIGludGVncml0eSAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFTkQgVmVyaWZ5IFBBWUxPQURcbiAgICAgKi9cbiAgICAvKipcbiAgICAgKiBTVEFSVCBWZXJpZnkgSGVhZGVyXG4gICAgICovXG4gICAgLy8gYEhFQURFUi54NWNbMF1gIGlzIGRlZmluaXRlbHkgYSBiYXNlNjQgc3RyaW5nXG4gICAgY29uc3QgbGVhZkNlcnRCdWZmZXIgPSBpc29CYXNlNjRVUkwudG9CdWZmZXIoSEVBREVSLng1Y1swXSwgJ2Jhc2U2NCcpO1xuICAgIGNvbnN0IGxlYWZDZXJ0SW5mbyA9IGdldENlcnRpZmljYXRlSW5mbyhsZWFmQ2VydEJ1ZmZlcik7XG4gICAgY29uc3QgeyBzdWJqZWN0IH0gPSBsZWFmQ2VydEluZm87XG4gICAgLy8gRW5zdXJlIHRoZSBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIHRvIHRoaXMgaG9zdG5hbWVcbiAgICAvLyBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcvc2FmZXR5bmV0L2F0dGVzdGF0aW9uI3ZlcmlmeS1hdHRlc3RhdGlvbi1yZXNwb25zZVxuICAgIGlmIChzdWJqZWN0LkNOICE9PSAnYXR0ZXN0LmFuZHJvaWQuY29tJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIGNvbW1vbiBuYW1lIHdhcyBub3QgXCJhdHRlc3QuYW5kcm9pZC5jb21cIiAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZW1lbnQgPSBhd2FpdCBNZXRhZGF0YVNlcnZpY2UuZ2V0U3RhdGVtZW50KGFhZ3VpZCk7XG4gICAgaWYgKHN0YXRlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEoe1xuICAgICAgICAgICAgICAgIHN0YXRlbWVudCxcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5LFxuICAgICAgICAgICAgICAgIHg1YzogSEVBREVSLng1YyxcbiAgICAgICAgICAgICAgICBhdHRlc3RhdGlvblN0YXRlbWVudEFsZzogYWxnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChTYWZldHlOZXQpYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKEhFQURFUi54NWMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pLCByb290Q2VydGlmaWNhdGVzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKFNhZmV0eU5ldClgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBFTkQgVmVyaWZ5IEhlYWRlclxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIFNUQVJUIFZlcmlmeSBTaWduYXR1cmVcbiAgICAgKi9cbiAgICBjb25zdCBzaWduYXR1cmVCYXNlQnVmZmVyID0gaXNvVWludDhBcnJheS5mcm9tVVRGOFN0cmluZyhgJHtqd3RQYXJ0c1swXX0uJHtqd3RQYXJ0c1sxXX1gKTtcbiAgICBjb25zdCBzaWduYXR1cmVCdWZmZXIgPSBpc29CYXNlNjRVUkwudG9CdWZmZXIoU0lHTkFUVVJFKTtcbiAgICBjb25zdCB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlQnVmZmVyLFxuICAgICAgICBkYXRhOiBzaWduYXR1cmVCYXNlQnVmZmVyLFxuICAgICAgICB4NTA5Q2VydGlmaWNhdGU6IGxlYWZDZXJ0QnVmZmVyLFxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEVORCBWZXJpZnkgU2lnbmF0dXJlXG4gICAgICovXG4gICAgcmV0dXJuIHZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationApple: () => (/* binding */ verifyAttestationApple)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\nasync function verifyAttestationApple(options) {\n    const { attStmt, authData, clientDataHash, credentialPublicKey, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (Apple)');\n    }\n    /**\n     * Verify certificate path\n     */\n    try {\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__.convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (Apple)`);\n    }\n    /**\n     * Compare nonce in certificate extension to computed nonce\n     */\n    const parsedCredCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { extensions, subjectPublicKeyInfo } = parsedCredCert.tbsCertificate;\n    if (!extensions) {\n        throw new Error('credCert missing extensions (Apple)');\n    }\n    const extCertNonce = extensions.find((ext) => ext.extnID === '1.2.840.113635.100.8.2');\n    if (!extCertNonce) {\n        throw new Error('credCert missing \"1.2.840.113635.100.8.2\" extension (Apple)');\n    }\n    const nonceToHash = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    const nonce = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(nonceToHash);\n    /**\n     * Ignore the first six ASN.1 structure bytes that define the nonce as an OCTET STRING. Should\n     * trim off <Buffer 30 24 a1 22 04 20>\n     *\n     * TODO: Try and get @peculiar (GitHub) to add a schema for \"1.2.840.113635.100.8.2\" when we\n     * find out where it's defined (doesn't seem to be publicly documented at the moment...)\n     */\n    const extNonce = new Uint8Array(extCertNonce.extnValue.buffer).slice(6);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(nonce, extNonce)) {\n        throw new Error(`credCert nonce was not expected value (Apple)`);\n    }\n    /**\n     * Verify credential public key matches the Subject Public Key of credCert\n     */\n    const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    const credCertSubjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(credPubKeyPKCS, credCertSubjectPublicKey)) {\n        throw new Error('Credential public key does not equal credCert public key (Apple)');\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXVEO0FBQzRCO0FBQ0Y7QUFDaEM7QUFDc0I7QUFDWjtBQUNwRDtBQUNQLFlBQVksNEVBQTRFO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDRGQUF1QixTQUFTLHNGQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwrQ0FBUyxlQUFlLGlEQUFXO0FBQzlELFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFvQjtBQUM1Qyx3QkFBd0IsMERBQU07QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUVBQXNCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0ZBQWlCO0FBQzVDO0FBQ0EsU0FBUyx5RUFBc0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZS5qcz9mNWYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgQ2VydGlmaWNhdGUgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHRvSGFzaCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdG9IYXNoLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUF0dGVzdGF0aW9uQXBwbGUob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgYXV0aERhdGEsIGNsaWVudERhdGFIYXNoLCBjcmVkZW50aWFsUHVibGljS2V5LCByb290Q2VydGlmaWNhdGVzLCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgaWYgKCF4NWMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBjZXJ0aWZpY2F0ZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEFwcGxlKScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZnkgY2VydGlmaWNhdGUgcGF0aFxuICAgICAqL1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKHg1Yy5tYXAoY29udmVydENlcnRCdWZmZXJUb1BFTSksIHJvb3RDZXJ0aWZpY2F0ZXMpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChBcHBsZSlgKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcGFyZSBub25jZSBpbiBjZXJ0aWZpY2F0ZSBleHRlbnNpb24gdG8gY29tcHV0ZWQgbm9uY2VcbiAgICAgKi9cbiAgICBjb25zdCBwYXJzZWRDcmVkQ2VydCA9IEFzblBhcnNlci5wYXJzZSh4NWNbMF0sIENlcnRpZmljYXRlKTtcbiAgICBjb25zdCB7IGV4dGVuc2lvbnMsIHN1YmplY3RQdWJsaWNLZXlJbmZvIH0gPSBwYXJzZWRDcmVkQ2VydC50YnNDZXJ0aWZpY2F0ZTtcbiAgICBpZiAoIWV4dGVuc2lvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcmVkQ2VydCBtaXNzaW5nIGV4dGVuc2lvbnMgKEFwcGxlKScpO1xuICAgIH1cbiAgICBjb25zdCBleHRDZXJ0Tm9uY2UgPSBleHRlbnNpb25zLmZpbmQoKGV4dCkgPT4gZXh0LmV4dG5JRCA9PT0gJzEuMi44NDAuMTEzNjM1LjEwMC44LjInKTtcbiAgICBpZiAoIWV4dENlcnROb25jZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyZWRDZXJ0IG1pc3NpbmcgXCIxLjIuODQwLjExMzYzNS4xMDAuOC4yXCIgZXh0ZW5zaW9uIChBcHBsZSknKTtcbiAgICB9XG4gICAgY29uc3Qgbm9uY2VUb0hhc2ggPSBpc29VaW50OEFycmF5LmNvbmNhdChbYXV0aERhdGEsIGNsaWVudERhdGFIYXNoXSk7XG4gICAgY29uc3Qgbm9uY2UgPSBhd2FpdCB0b0hhc2gobm9uY2VUb0hhc2gpO1xuICAgIC8qKlxuICAgICAqIElnbm9yZSB0aGUgZmlyc3Qgc2l4IEFTTi4xIHN0cnVjdHVyZSBieXRlcyB0aGF0IGRlZmluZSB0aGUgbm9uY2UgYXMgYW4gT0NURVQgU1RSSU5HLiBTaG91bGRcbiAgICAgKiB0cmltIG9mZiA8QnVmZmVyIDMwIDI0IGExIDIyIDA0IDIwPlxuICAgICAqXG4gICAgICogVE9ETzogVHJ5IGFuZCBnZXQgQHBlY3VsaWFyIChHaXRIdWIpIHRvIGFkZCBhIHNjaGVtYSBmb3IgXCIxLjIuODQwLjExMzYzNS4xMDAuOC4yXCIgd2hlbiB3ZVxuICAgICAqIGZpbmQgb3V0IHdoZXJlIGl0J3MgZGVmaW5lZCAoZG9lc24ndCBzZWVtIHRvIGJlIHB1YmxpY2x5IGRvY3VtZW50ZWQgYXQgdGhlIG1vbWVudC4uLilcbiAgICAgKi9cbiAgICBjb25zdCBleHROb25jZSA9IG5ldyBVaW50OEFycmF5KGV4dENlcnROb25jZS5leHRuVmFsdWUuYnVmZmVyKS5zbGljZSg2KTtcbiAgICBpZiAoIWlzb1VpbnQ4QXJyYXkuYXJlRXF1YWwobm9uY2UsIGV4dE5vbmNlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNyZWRDZXJ0IG5vbmNlIHdhcyBub3QgZXhwZWN0ZWQgdmFsdWUgKEFwcGxlKWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZnkgY3JlZGVudGlhbCBwdWJsaWMga2V5IG1hdGNoZXMgdGhlIFN1YmplY3QgUHVibGljIEtleSBvZiBjcmVkQ2VydFxuICAgICAqL1xuICAgIGNvbnN0IGNyZWRQdWJLZXlQS0NTID0gY29udmVydENPU0V0b1BLQ1MoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgY29uc3QgY3JlZENlcnRTdWJqZWN0UHVibGljS2V5ID0gbmV3IFVpbnQ4QXJyYXkoc3ViamVjdFB1YmxpY0tleUluZm8uc3ViamVjdFB1YmxpY0tleSk7XG4gICAgaWYgKCFpc29VaW50OEFycmF5LmFyZUVxdWFsKGNyZWRQdWJLZXlQS0NTLCBjcmVkQ2VydFN1YmplY3RQdWJsaWNLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ3JlZGVudGlhbCBwdWJsaWMga2V5IGRvZXMgbm90IGVxdWFsIGNyZWRDZXJ0IHB1YmxpYyBrZXkgKEFwcGxlKScpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationFIDOU2F: () => (/* binding */ verifyAttestationFIDOU2F)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'fido-u2f'\n */\nasync function verifyAttestationFIDOU2F(options) {\n    const { attStmt, clientDataHash, rpIdHash, credentialID, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const reservedByte = Uint8Array.from([0x00]);\n    const publicKey = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__.convertCOSEtoPKCS)(credentialPublicKey);\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.concat([\n        reservedByte,\n        rpIdHash,\n        clientDataHash,\n        credentialID,\n        publicKey,\n    ]);\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (FIDOU2F)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (FIDOU2F)');\n    }\n    // FIDO spec says that aaguid _must_ equal 0x00 here to be legit\n    const aaguidToHex = Number.parseInt(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.toHex(aaguid), 16);\n    if (aaguidToHex !== 0x00) {\n        throw new Error(`AAGUID \"${aaguidToHex}\" was not expected value`);\n    }\n    try {\n        // Try validating the certificate path using the root certificates set via SettingsService\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (FIDOU2F)`);\n    }\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEALG.ES256,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25GSURPVTJGLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBdUU7QUFDVTtBQUNFO0FBQ2hCO0FBQ1I7QUFDWDtBQUNoRDtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksa0dBQWtHO0FBQzlHO0FBQ0Esc0JBQXNCLGdGQUFpQjtBQUN2QywwQkFBMEIsdUVBQW9CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxzRUFBbUI7QUFDM0Q7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQztBQUNBO0FBQ0E7QUFDQSxjQUFjLDRGQUF1QixTQUFTLHNGQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBLFdBQVcsNEVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHFEQUFPO0FBQzlCLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9yZWdpc3RyYXRpb24vdmVyaWZpY2F0aW9ucy92ZXJpZnlBdHRlc3RhdGlvbkZJRE9VMkYuanM/MmJmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0Q09TRXRvUEtDUyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENPU0V0b1BLQ1MuanMnO1xuaW1wb3J0IHsgY29udmVydENlcnRCdWZmZXJUb1BFTSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi4vLi4vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IENPU0VBTEcgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2Nvc2UuanMnO1xuLyoqXG4gKiBWZXJpZnkgYW4gYXR0ZXN0YXRpb24gcmVzcG9uc2Ugd2l0aCBmbXQgJ2ZpZG8tdTJmJ1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXR0ZXN0YXRpb25GSURPVTJGKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGF0dFN0bXQsIGNsaWVudERhdGFIYXNoLCBycElkSGFzaCwgY3JlZGVudGlhbElELCBjcmVkZW50aWFsUHVibGljS2V5LCBhYWd1aWQsIHJvb3RDZXJ0aWZpY2F0ZXMsIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHJlc2VydmVkQnl0ZSA9IFVpbnQ4QXJyYXkuZnJvbShbMHgwMF0pO1xuICAgIGNvbnN0IHB1YmxpY0tleSA9IGNvbnZlcnRDT1NFdG9QS0NTKGNyZWRlbnRpYWxQdWJsaWNLZXkpO1xuICAgIGNvbnN0IHNpZ25hdHVyZUJhc2UgPSBpc29VaW50OEFycmF5LmNvbmNhdChbXG4gICAgICAgIHJlc2VydmVkQnl0ZSxcbiAgICAgICAgcnBJZEhhc2gsXG4gICAgICAgIGNsaWVudERhdGFIYXNoLFxuICAgICAgICBjcmVkZW50aWFsSUQsXG4gICAgICAgIHB1YmxpY0tleSxcbiAgICBdKTtcbiAgICBjb25zdCBzaWcgPSBhdHRTdG10LmdldCgnc2lnJyk7XG4gICAgY29uc3QgeDVjID0gYXR0U3RtdC5nZXQoJ3g1YycpO1xuICAgIGlmICgheDVjKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXR0ZXN0YXRpb24gY2VydGlmaWNhdGUgcHJvdmlkZWQgaW4gYXR0ZXN0YXRpb24gc3RhdGVtZW50IChGSURPVTJGKScpO1xuICAgIH1cbiAgICBpZiAoIXNpZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGF0dGVzdGF0aW9uIHNpZ25hdHVyZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEZJRE9VMkYpJyk7XG4gICAgfVxuICAgIC8vIEZJRE8gc3BlYyBzYXlzIHRoYXQgYWFndWlkIF9tdXN0XyBlcXVhbCAweDAwIGhlcmUgdG8gYmUgbGVnaXRcbiAgICBjb25zdCBhYWd1aWRUb0hleCA9IE51bWJlci5wYXJzZUludChpc29VaW50OEFycmF5LnRvSGV4KGFhZ3VpZCksIDE2KTtcbiAgICBpZiAoYWFndWlkVG9IZXggIT09IDB4MDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBQUdVSUQgXCIke2FhZ3VpZFRvSGV4fVwiIHdhcyBub3QgZXhwZWN0ZWQgdmFsdWVgKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gVHJ5IHZhbGlkYXRpbmcgdGhlIGNlcnRpZmljYXRlIHBhdGggdXNpbmcgdGhlIHJvb3QgY2VydGlmaWNhdGVzIHNldCB2aWEgU2V0dGluZ3NTZXJ2aWNlXG4gICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKHg1Yy5tYXAoY29udmVydENlcnRCdWZmZXJUb1BFTSksIHJvb3RDZXJ0aWZpY2F0ZXMpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChGSURPVTJGKWApO1xuICAgIH1cbiAgICByZXR1cm4gdmVyaWZ5U2lnbmF0dXJlKHtcbiAgICAgICAgc2lnbmF0dXJlOiBzaWcsXG4gICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgIHg1MDlDZXJ0aWZpY2F0ZTogeDVjWzBdLFxuICAgICAgICBoYXNoQWxnb3JpdGhtOiBDT1NFQUxHLkVTMjU2LFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationPacked: () => (/* binding */ verifyAttestationPacked)\n/* harmony export */ });\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'packed'\n */\nasync function verifyAttestationPacked(options) {\n    const { attStmt, clientDataHash, authData, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    const alg = attStmt.get('alg');\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (Packed)');\n    }\n    if (!alg) {\n        throw new Error('Attestation statement did not contain alg (Packed)');\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Packed)`);\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    let verified = false;\n    if (x5c) {\n        const { subject, basicConstraintsCA, version, notBefore, notAfter } = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__.getCertificateInfo)(x5c[0]);\n        const { OU, CN, O, C } = subject;\n        if (OU !== 'Authenticator Attestation') {\n            throw new Error('Certificate OU was not \"Authenticator Attestation\" (Packed|Full)');\n        }\n        if (!CN) {\n            throw new Error('Certificate CN was empty (Packed|Full)');\n        }\n        if (!O) {\n            throw new Error('Certificate O was empty (Packed|Full)');\n        }\n        if (!C || C.length !== 2) {\n            throw new Error('Certificate C was not two-character ISO 3166 code (Packed|Full)');\n        }\n        if (basicConstraintsCA) {\n            throw new Error('Certificate basic constraints CA was not `false` (Packed|Full)');\n        }\n        if (version !== 2) {\n            throw new Error('Certificate version was not `3` (ASN.1 value of 2) (Packed|Full)');\n        }\n        let now = new Date();\n        if (notBefore > now) {\n            throw new Error(`Certificate not good before \"${notBefore.toString()}\" (Packed|Full)`);\n        }\n        now = new Date();\n        if (notAfter < now) {\n            throw new Error(`Certificate not good after \"${notAfter.toString()}\" (Packed|Full)`);\n        }\n        // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n        // that it’s value is set to the same AAGUID as in authData.\n        // If available, validate attestation alg and x5c with info in the metadata statement\n        const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n        if (statement) {\n            // The presence of x5c means this is a full attestation. Check to see if attestationTypes\n            // includes packed attestations.\n            if (statement.attestationTypes.indexOf('basic_full') < 0) {\n                throw new Error('Metadata does not indicate support for full attestations (Packed|Full)');\n            }\n            try {\n                await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                    statement,\n                    credentialPublicKey,\n                    x5c,\n                    attestationStatementAlg: alg,\n                });\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        else {\n            try {\n                // Try validating the certificate path using the root certificates set via SettingsService\n                await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            x509Certificate: x5c[0],\n        });\n    }\n    else {\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            credentialPublicKey,\n            hashAlgorithm: alg,\n        });\n    }\n    return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQytCO0FBQ0U7QUFDVjtBQUNOO0FBQ1I7QUFDUztBQUM0QjtBQUNoRztBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksb0ZBQW9GO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkRBQVM7QUFDbEIsdUVBQXVFLEtBQUs7QUFDNUU7QUFDQSwwQkFBMEIsdUVBQW9CO0FBQzlDO0FBQ0E7QUFDQSxnQkFBZ0IsNERBQTRELEVBQUUsa0ZBQWtCO0FBQ2hHLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQscUJBQXFCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxvQkFBb0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MseUVBQWU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUdBQTZCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNEZBQXVCLFNBQVMsc0ZBQXNCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQSx5QkFBeUIsNEVBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUIsNEVBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3ZlcmlmeUF0dGVzdGF0aW9uUGFja2VkLmpzP2RlNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNDT1NFQWxnIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb3NlLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0gfSBmcm9tICcuLi8uLi9oZWxwZXJzL2NvbnZlcnRDZXJ0QnVmZmVyVG9QRU0uanMnO1xuaW1wb3J0IHsgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGggfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoLmpzJztcbmltcG9ydCB7IGdldENlcnRpZmljYXRlSW5mbyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvZ2V0Q2VydGlmaWNhdGVJbmZvLmpzJztcbmltcG9ydCB7IHZlcmlmeVNpZ25hdHVyZSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmVyaWZ5U2lnbmF0dXJlLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tZXRhZGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEgfSBmcm9tICcuLi8uLi9tZXRhZGF0YS92ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdHRlc3RhdGlvbiByZXNwb25zZSB3aXRoIGZtdCAncGFja2VkJ1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgY2xpZW50RGF0YUhhc2gsIGF1dGhEYXRhLCBjcmVkZW50aWFsUHVibGljS2V5LCBhYWd1aWQsIHJvb3RDZXJ0aWZpY2F0ZXMsIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHNpZyA9IGF0dFN0bXQuZ2V0KCdzaWcnKTtcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgY29uc3QgYWxnID0gYXR0U3RtdC5nZXQoJ2FsZycpO1xuICAgIGlmICghc2lnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXR0ZXN0YXRpb24gc2lnbmF0dXJlIHByb3ZpZGVkIGluIGF0dGVzdGF0aW9uIHN0YXRlbWVudCAoUGFja2VkKScpO1xuICAgIH1cbiAgICBpZiAoIWFsZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F0dGVzdGF0aW9uIHN0YXRlbWVudCBkaWQgbm90IGNvbnRhaW4gYWxnIChQYWNrZWQpJyk7XG4gICAgfVxuICAgIGlmICghaXNDT1NFQWxnKGFsZykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBdHRlc3RhdGlvbiBzdGF0ZW1lbnQgY29udGFpbmVkIGludmFsaWQgYWxnICR7YWxnfSAoUGFja2VkKWApO1xuICAgIH1cbiAgICBjb25zdCBzaWduYXR1cmVCYXNlID0gaXNvVWludDhBcnJheS5jb25jYXQoW2F1dGhEYXRhLCBjbGllbnREYXRhSGFzaF0pO1xuICAgIGxldCB2ZXJpZmllZCA9IGZhbHNlO1xuICAgIGlmICh4NWMpIHtcbiAgICAgICAgY29uc3QgeyBzdWJqZWN0LCBiYXNpY0NvbnN0cmFpbnRzQ0EsIHZlcnNpb24sIG5vdEJlZm9yZSwgbm90QWZ0ZXIgfSA9IGdldENlcnRpZmljYXRlSW5mbyh4NWNbMF0pO1xuICAgICAgICBjb25zdCB7IE9VLCBDTiwgTywgQyB9ID0gc3ViamVjdDtcbiAgICAgICAgaWYgKE9VICE9PSAnQXV0aGVudGljYXRvciBBdHRlc3RhdGlvbicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgT1Ugd2FzIG5vdCBcIkF1dGhlbnRpY2F0b3IgQXR0ZXN0YXRpb25cIiAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFDTikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBDTiB3YXMgZW1wdHkgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghTykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBPIHdhcyBlbXB0eSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFDIHx8IEMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIEMgd2FzIG5vdCB0d28tY2hhcmFjdGVyIElTTyAzMTY2IGNvZGUgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChiYXNpY0NvbnN0cmFpbnRzQ0EpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgYmFzaWMgY29uc3RyYWludHMgQ0Egd2FzIG5vdCBgZmFsc2VgIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmVyc2lvbiAhPT0gMikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSB2ZXJzaW9uIHdhcyBub3QgYDNgIChBU04uMSB2YWx1ZSBvZiAyKSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGlmIChub3RCZWZvcmUgPiBub3cpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2VydGlmaWNhdGUgbm90IGdvb2QgYmVmb3JlIFwiJHtub3RCZWZvcmUudG9TdHJpbmcoKX1cIiAoUGFja2VkfEZ1bGwpYCk7XG4gICAgICAgIH1cbiAgICAgICAgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgaWYgKG5vdEFmdGVyIDwgbm93KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENlcnRpZmljYXRlIG5vdCBnb29kIGFmdGVyIFwiJHtub3RBZnRlci50b1N0cmluZygpfVwiIChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUT0RPOiBJZiBjZXJ0aWZpY2F0ZSBjb250YWlucyBpZC1maWRvLWdlbi1jZS1hYWd1aWQoMS4zLjYuMS40LjEuNDU3MjQuMS4xLjQpIGV4dGVuc2lvbiwgY2hlY2tcbiAgICAgICAgLy8gdGhhdCBpdOKAmXMgdmFsdWUgaXMgc2V0IHRvIHRoZSBzYW1lIEFBR1VJRCBhcyBpbiBhdXRoRGF0YS5cbiAgICAgICAgLy8gSWYgYXZhaWxhYmxlLCB2YWxpZGF0ZSBhdHRlc3RhdGlvbiBhbGcgYW5kIHg1YyB3aXRoIGluZm8gaW4gdGhlIG1ldGFkYXRhIHN0YXRlbWVudFxuICAgICAgICBjb25zdCBzdGF0ZW1lbnQgPSBhd2FpdCBNZXRhZGF0YVNlcnZpY2UuZ2V0U3RhdGVtZW50KGFhZ3VpZCk7XG4gICAgICAgIGlmIChzdGF0ZW1lbnQpIHtcbiAgICAgICAgICAgIC8vIFRoZSBwcmVzZW5jZSBvZiB4NWMgbWVhbnMgdGhpcyBpcyBhIGZ1bGwgYXR0ZXN0YXRpb24uIENoZWNrIHRvIHNlZSBpZiBhdHRlc3RhdGlvblR5cGVzXG4gICAgICAgICAgICAvLyBpbmNsdWRlcyBwYWNrZWQgYXR0ZXN0YXRpb25zLlxuICAgICAgICAgICAgaWYgKHN0YXRlbWVudC5hdHRlc3RhdGlvblR5cGVzLmluZGV4T2YoJ2Jhc2ljX2Z1bGwnKSA8IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01ldGFkYXRhIGRvZXMgbm90IGluZGljYXRlIHN1cHBvcnQgZm9yIGZ1bGwgYXR0ZXN0YXRpb25zIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEoe1xuICAgICAgICAgICAgICAgICAgICBzdGF0ZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxQdWJsaWNLZXksXG4gICAgICAgICAgICAgICAgICAgIHg1YyxcbiAgICAgICAgICAgICAgICAgICAgYXR0ZXN0YXRpb25TdGF0ZW1lbnRBbGc6IGFsZyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgLy8gVHJ5IHZhbGlkYXRpbmcgdGhlIGNlcnRpZmljYXRlIHBhdGggdXNpbmcgdGhlIHJvb3QgY2VydGlmaWNhdGVzIHNldCB2aWEgU2V0dGluZ3NTZXJ2aWNlXG4gICAgICAgICAgICAgICAgYXdhaXQgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgoeDVjLm1hcChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKSwgcm9vdENlcnRpZmljYXRlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7X2Vyci5tZXNzYWdlfSAoUGFja2VkfEZ1bGwpYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmVyaWZpZWQgPSBhd2FpdCB2ZXJpZnlTaWduYXR1cmUoe1xuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWcsXG4gICAgICAgICAgICBkYXRhOiBzaWduYXR1cmVCYXNlLFxuICAgICAgICAgICAgeDUwOUNlcnRpZmljYXRlOiB4NWNbMF0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdmVyaWZpZWQgPSBhd2FpdCB2ZXJpZnlTaWduYXR1cmUoe1xuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWcsXG4gICAgICAgICAgICBkYXRhOiBzaWduYXR1cmVCYXNlLFxuICAgICAgICAgICAgY3JlZGVudGlhbFB1YmxpY0tleSxcbiAgICAgICAgICAgIGhhc2hBbGdvcml0aG06IGFsZyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB2ZXJpZmllZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRegistrationResponse: () => (/* binding */ verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./verifications/verifyAttestationFIDOU2F.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\");\n/* harmony import */ var _verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./verifications/verifyAttestationPacked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidSafetyNet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\");\n/* harmony import */ var _verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./verifications/tpm/verifyAttestationTPM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\");\n/* harmony import */ var _verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./verifications/verifyAttestationApple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the registration process\n *\n * **Options:**\n *\n * @param response - Response returned by **@simplewebauthn/browser**'s `startAuthentication()`\n * @param expectedChallenge - The base64url-encoded `options.challenge` returned by `generateRegistrationOptions()`\n * @param expectedOrigin - Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID - RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType **(Optional)** - The response type expected ('webauthn.create')\n * @param requireUserVerification **(Optional)** - Enforce user verification by the authenticator (via PIN, fingerprint, etc...) Defaults to `true`\n * @param supportedAlgorithmIDs **(Optional)** - Array of numeric COSE algorithm identifiers supported for attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms. Defaults to all supported algorithm IDs\n */\nasync function verifyRegistrationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, requireUserVerification = true, supportedAlgorithmIDs = _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__.supportedCOSEAlgorithmIdentifiers, } = options;\n    const { id, rawId, type: credentialType, response: attestationResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__.decodeClientDataJSON)(attestationResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an registration\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected registration response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected registration response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.create') {\n        throw new Error(`Unexpected registration response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected registration response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected one of: ${expectedOrigin.join(', ')}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error(`Unexpected value for TokenBinding \"${tokenBinding}\"`);\n        }\n        if (['present', 'supported', 'not-supported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding.status value of \"${tokenBinding.status}\"`);\n        }\n    }\n    const attestationObject = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.attestationObject);\n    const decodedAttestationObject = (0,_helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__.decodeAttestationObject)(attestationObject);\n    const fmt = decodedAttestationObject.get('fmt');\n    const authData = decodedAttestationObject.get('authData');\n    const attStmt = decodedAttestationObject.get('attStmt');\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__.parseAuthenticatorData)(authData);\n    const { aaguid, rpIdHash, flags, credentialID, counter, credentialPublicKey, extensionsData, } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let matchedRPID;\n    if (expectedRPID) {\n        let expectedRPIDs = [];\n        if (typeof expectedRPID === 'string') {\n            expectedRPIDs = [expectedRPID];\n        }\n        else {\n            expectedRPIDs = expectedRPID;\n        }\n        matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    }\n    // Make sure someone was physically present\n    if (!flags.up) {\n        throw new Error('User not present during registration');\n    }\n    // Enforce user verification if specified\n    if (requireUserVerification && !flags.uv) {\n        throw new Error('User verification required, but user could not be verified');\n    }\n    if (!credentialID) {\n        throw new Error('No credential ID was provided by authenticator');\n    }\n    if (!credentialPublicKey) {\n        throw new Error('No public key was provided by authenticator');\n    }\n    if (!aaguid) {\n        throw new Error('No AAGUID was present during registration');\n    }\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__.decodeCredentialPublicKey)(credentialPublicKey);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEKEYS.alg);\n    if (typeof alg !== 'number') {\n        throw new Error('Credential public key was missing numeric alg');\n    }\n    // Make sure the key algorithm is one we specified within the registration options\n    if (!supportedAlgorithmIDs.includes(alg)) {\n        const supported = supportedAlgorithmIDs.join(', ');\n        throw new Error(`Unexpected public key alg \"${alg}\", expected one of \"${supported}\"`);\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.clientDataJSON));\n    const rootCertificates = _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__.SettingsService.getRootCertificates({\n        identifier: fmt,\n    });\n    // Prepare arguments to pass to the relevant verification method\n    const verifierOpts = {\n        aaguid,\n        attStmt,\n        authData,\n        clientDataHash,\n        credentialID,\n        credentialPublicKey,\n        rootCertificates,\n        rpIdHash,\n    };\n    /**\n     * Verification can only be performed when attestation = 'direct'\n     */\n    let verified = false;\n    if (fmt === 'fido-u2f') {\n        verified = await (0,_verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__.verifyAttestationFIDOU2F)(verifierOpts);\n    }\n    else if (fmt === 'packed') {\n        verified = await (0,_verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__.verifyAttestationPacked)(verifierOpts);\n    }\n    else if (fmt === 'android-safetynet') {\n        verified = await (0,_verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__.verifyAttestationAndroidSafetyNet)(verifierOpts);\n    }\n    else if (fmt === 'android-key') {\n        verified = await (0,_verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__.verifyAttestationAndroidKey)(verifierOpts);\n    }\n    else if (fmt === 'tpm') {\n        verified = await (0,_verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__.verifyAttestationTPM)(verifierOpts);\n    }\n    else if (fmt === 'apple') {\n        verified = await (0,_verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__.verifyAttestationApple)(verifierOpts);\n    }\n    else if (fmt === 'none') {\n        if (attStmt.size > 0) {\n            throw new Error('None attestation had unexpected attestation statement');\n        }\n        // This is the weaker of the attestations, so there's nothing else to really check\n        verified = true;\n    }\n    else {\n        throw new Error(`Unsupported Attestation Format: ${fmt}`);\n    }\n    const toReturn = {\n        verified,\n    };\n    if (toReturn.verified) {\n        const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__.parseBackupFlags)(flags);\n        toReturn.registrationInfo = {\n            fmt,\n            counter,\n            aaguid: (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__.convertAAGUIDToString)(aaguid),\n            credentialID: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.fromBuffer(credentialID),\n            credentialPublicKey,\n            credentialType,\n            attestationObject,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n            authenticatorExtensionResults: extensionsData,\n        };\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Google_Hardware_Attestation_Root_1: () => (/* binding */ Google_Hardware_Attestation_Root_1),\n/* harmony export */   Google_Hardware_Attestation_Root_2: () => (/* binding */ Google_Hardware_Attestation_Root_2)\n/* harmony export */ });\n/**\n * Google Hardware Attestation Root 1\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (first entry)\n *\n * Valid until 2026-05-24 @ 09:28 PST\n *\n * SHA256 Fingerprint\n * C1:98:4A:3E:F4:5C:1E:2A:91:85:51:DE:10:60:3C:86:F7:05:1B:22:49:C4:89:1C:AE:32:30:EA:BD:0C:97:D5\n */\nconst Google_Hardware_Attestation_Root_1 = `-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy\nODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD\nVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk\nLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD\nggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB\nPb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m\nqC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY\nDBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm\nQUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u\nJU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD\nCdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy\nZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD\nqwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic\nMDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1\nwDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 2\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (second entry)\n *\n * Valid until 2034-11-18 @ 12:37 PST\n *\n * SHA256 Fingerprint\n * 1E:F1:A0:4B:8B:A5:8A:B9:45:89:AC:49:8C:89:82:A7:83:F2:4E:A7:30:7E:01:59:A0:C3:A7:3B:37:7D:87:CC\n */\nconst Google_Hardware_Attestation_Root_2 = `-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJANUP8luj8tazMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTkxMTIyMjAzNzU4WhcNMzQxMTE4MjAz\nNzU4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBOMaBc8oumXb2voc7XCWnu\nXKhBBK3e2KMGz39t7lA3XXRe2ZLLAkLM5y3J7tURkf5a1SutfdOyXAmeE6SRo83U\nh6WszodmMkxK5GM4JGrnt4pBisu5igXEydaW7qq2CdC6DOGjG+mEkN8/TA6p3cno\nL/sPyz6evdjLlSeJ8rFBH6xWyIZCbrcpYEJzXaUOEaxxXxgYz5/cTiVKN2M1G2ok\nQBUIYSY6bjEL4aUN5cfo7ogP3UvliEo3Eo0YgwuzR2v0KR6C1cZqZJSTnghIC/vA\nD32KdNQ+c3N+vl2OTsUVMC1GiWkngNx1OO1+kXW+YTnnTUOtOIswUP/Vqd5SYgAI\nmMAfY8U9/iIgkQj6T2W6FsScy94IN9fFhE1UtzmLoBIuUFsVXJMTz+Jucth+IqoW\nFua9v1R93/k98p41pjtFX+H8DslVgfP097vju4KDlqN64xV1grw3ZLl4CiOe/A91\noeLm2UHOq6wn3esB4r2EIQKb6jTVGu5sYCcdWpXr0AUVqcABPdgL+H7qJguBw09o\njm6xNIrw2OocrDKsudk/okr/AwqEyPKw9WnMlQgLIKw1rODG2NvU9oR3GVGdMkUB\nZutL8VuFkERQGt6vQ2OCw0sV47VMkuYbacK/xyZFiRcrPJPb41zgbQj9XAEyLKCH\nex0SdDrx+tWUDqG8At2JHA==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViYXV0aG4tYXBwLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL2RlZmF1bHRSb290Q2VydHMvYW5kcm9pZC1rZXkuanM/ZGZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdvb2dsZSBIYXJkd2FyZSBBdHRlc3RhdGlvbiBSb290IDFcbiAqXG4gKiBEb3dubG9hZGVkIGZyb20gaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcvYXJ0aWNsZXMvc2VjdXJpdHkta2V5LWF0dGVzdGF0aW9uI3Jvb3RfY2VydGlmaWNhdGVcbiAqIChmaXJzdCBlbnRyeSlcbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDI2LTA1LTI0IEAgMDk6MjggUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiBDMTo5ODo0QTozRTpGNDo1QzoxRToyQTo5MTo4NTo1MTpERToxMDo2MDozQzo4NjpGNzowNToxQjoyMjo0OTpDNDo4OToxQzpBRTozMjozMDpFQTpCRDowQzo5NzpENVxuICovXG5leHBvcnQgY29uc3QgR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSUZZRENDQTBpZ0F3SUJBZ0lKQU9qNkdXTVUwdm9ZTUEwR0NTcUdTSWIzRFFFQkN3VUFNQnN4R1RBWEJnTlZcbkJBVVRFR1k1TWpBd09XVTROVE5pTm1Jd05EVXdIaGNOTVRZd05USTJNVFl5T0RVeVdoY05Nall3TlRJME1UWXlcbk9EVXlXakFiTVJrd0Z3WURWUVFGRXhCbU9USXdNRGxsT0RVellqWmlNRFExTUlJQ0lqQU5CZ2txaGtpRzl3MEJcbkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXI3YkhnaXV4cHdIc0s3UXVpOHhVRm1Pcjc1Z3ZNc2QvZFRFRERKZFNcblN4dGY2QW43eHlxcFJSOTBQTDJhYnhNMWRFcWxYbmYydHF3MU5lNFh3bDVqbFJmZG5KTG1OMHBUeS80bGo0LzdcbnR2MFNrM2lpS2t5cG5FVXRSNldmTWdIMFFaZktITTErZGkreTlURlJ0djZ5Ly8wcmIrVCtXOGE5bnNOTC9nZ2pcbm5hcjg2NDYxcU8wck9zMmNYanAza09HMUZFSjVNVm1GbUJHdG5yS3BhNzNYcFh5VHFSeEIvTTBuMW4vVzluR3FcbkM0RlNZYTA0VDZONVJJWkdCTjJ6Mk1UNUlLR2JGbGJDOFVyVzBEeFc3QVlJbVFRY0h0R2wvbTAwUUxWV3V0SFFcbm9WSlluRlBsWFRjSFl2QVNMdStSaGhzYkRteE1nSkowbWNEcHZzQzRQanZCK1R4eXdFbGdTNzB2RTBYbUxEK09cbkp0dnNCc2xIWnZQQktDT2RUME1TK3RnU09JZmdhK3oxWjFnNytEVmFnZjdxdXZtYWc4amZQaW95S3Z4bksvRWdcbnNUVVZpMmdoenE4d20yN3VkL21JTTdBWTJxRU9SUjhHbzNUVkI0SHpXUWdwWnJ0M2k1TUlsQ2FZNTA0THpTUmlcbmlnSEN6QVBsSHdzK1cwckI1TitlcjUvMnBKS25mQlNEaUNpRkFWdENMT1o3Z0xpTW0wamhPMkI2dFVYSEkvK01cblJQankwMmk1OWxJTk1SUmV2NTZHS3RjZDlxTy8wa1VKV2RaVGRBMlhvUzgyaXhQdlp0WFFwVXB1TDEyYWIrOUVcbmFESzhaNFJISllZZkNUM1E1dk5BWGFpV1ErOFBUV20yUWdCUi9ia3dTV2MrTnBVRmdOUE45UHZRaThXRWc1VW1cbkFHTUNBd0VBQWFPQnBqQ0JvekFkQmdOVkhRNEVGZ1FVTm1IaEFIeUlCUWxSaTBSc1IvOGFUTW5xVHhJd0h3WURcblZSMGpCQmd3Rm9BVU5tSGhBSHlJQlFsUmkwUnNSLzhhVE1ucVR4SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9cbkJnTlZIUThCQWY4RUJBTUNBWVl3UUFZRFZSMGZCRGt3TnpBMW9ET2dNWVl2YUhSMGNITTZMeTloYm1SeWIybGtcbkxtZHZiMmRzWldGd2FYTXVZMjl0TDJGMGRHVnpkR0YwYVc5dUwyTnliQzh3RFFZSktvWklodmNOQVFFTEJRQURcbmdnSUJBQ0RJdzQxTDNLbFhHMGFNaVMvL2NxckcrRVNoSFVHbzhITnN3MzBXMWtKdGpuNlVCd1JNNmpubWl3ZkJcblBiOFZBOTFjaGIydnNzQXRYMnpiVHZxQko5K0xCUEdDZHcvRTUzUmJmODZxaHhLYWlBSE9qcHZBeTVZM20wMG1cbnFDMHcvWnd2anUxdHdiNHZoTGFKNU5rVUpZc1VTN3JtSktISEJuRVRMaThHRnFpRXNxVFdwRy82aWJZQ3Y3cllcbkRCSkRjUjlXNjJCVzlqZklvQlFjeFVDVUpvdU1QSDI1bExOY0RjMXNzcXZDMnY3aVVnSTlMZW9NMXNOb3ZxUG1cblFVaUc5ckhsaTF2WHh6Q3lhTVRqd2Z0a0pMa2Y2NzI0REZodUt1ZzJqSVRWMFFrWHZhSldGNG5VYUhPVE5BNHVcbkpVOVdEdlpMSTFqODNBKy94bkFKVXVjSXYvekdKMUFNSDJib0hxRjhDWTE2THBzWWdCdDZ0S3h4V0gwMFhjeURcbkNkVzJLbEJDZXFiUVBjc0ZtV3lXdWd4ZGNla2hZc0FXeW9TZjgxOE5Vc1pkQldCYVIvT3VrWHJOTGZrUTc5SXlcblpvaFpidmFiTy9YK01WVDNycmlBb0tjOG9FMlV3czZERis2MFBWNy9XSVBqTnZYeVNkcXNwSW1TTjc4bWZseERcbnF3THFSQllrQTNJNzVxcHBMR0c5cnA3VUNkUmp4TWw4WkRCbGQrN3l2SFZndDFjVnpKeDl4bnlHQ0MyM1VhaWNcbk1EU1hZckI0STRXSFhQR2p4aFp1Q3VQQkxUZE9MVThZUnZNWWRFdlllYldITXB2d0dDRjZiQXgzSkJwSWVPUTFcbndEQjV5MFVTaWNWM1lnWUdtaStOWmZoQTRVUlNoNzdZZDZ1dUpPSkVOUmFOVlR6a1xuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbi8qKlxuICogR29vZ2xlIEhhcmR3YXJlIEF0dGVzdGF0aW9uIFJvb3QgMlxuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9hcnRpY2xlcy9zZWN1cml0eS1rZXktYXR0ZXN0YXRpb24jcm9vdF9jZXJ0aWZpY2F0ZVxuICogKHNlY29uZCBlbnRyeSlcbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDM0LTExLTE4IEAgMTI6MzcgUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiAxRTpGMTpBMDo0Qjo4QjpBNTo4QTpCOTo0NTo4OTpBQzo0OTo4Qzo4OTo4MjpBNzo4MzpGMjo0RTpBNzozMDo3RTowMTo1OTpBMDpDMzpBNzozQjozNzo3RDo4NzpDQ1xuICovXG5leHBvcnQgY29uc3QgR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMiA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSUZIRENDQXdTZ0F3SUJBZ0lKQU5VUDhsdWo4dGF6TUEwR0NTcUdTSWIzRFFFQkN3VUFNQnN4R1RBWEJnTlZcbkJBVVRFR1k1TWpBd09XVTROVE5pTm1Jd05EVXdIaGNOTVRreE1USXlNakF6TnpVNFdoY05NelF4TVRFNE1qQXpcbk56VTRXakFiTVJrd0Z3WURWUVFGRXhCbU9USXdNRGxsT0RVellqWmlNRFExTUlJQ0lqQU5CZ2txaGtpRzl3MEJcbkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXI3YkhnaXV4cHdIc0s3UXVpOHhVRm1Pcjc1Z3ZNc2QvZFRFRERKZFNcblN4dGY2QW43eHlxcFJSOTBQTDJhYnhNMWRFcWxYbmYydHF3MU5lNFh3bDVqbFJmZG5KTG1OMHBUeS80bGo0LzdcbnR2MFNrM2lpS2t5cG5FVXRSNldmTWdIMFFaZktITTErZGkreTlURlJ0djZ5Ly8wcmIrVCtXOGE5bnNOTC9nZ2pcbm5hcjg2NDYxcU8wck9zMmNYanAza09HMUZFSjVNVm1GbUJHdG5yS3BhNzNYcFh5VHFSeEIvTTBuMW4vVzluR3FcbkM0RlNZYTA0VDZONVJJWkdCTjJ6Mk1UNUlLR2JGbGJDOFVyVzBEeFc3QVlJbVFRY0h0R2wvbTAwUUxWV3V0SFFcbm9WSlluRlBsWFRjSFl2QVNMdStSaGhzYkRteE1nSkowbWNEcHZzQzRQanZCK1R4eXdFbGdTNzB2RTBYbUxEK09cbkp0dnNCc2xIWnZQQktDT2RUME1TK3RnU09JZmdhK3oxWjFnNytEVmFnZjdxdXZtYWc4amZQaW95S3Z4bksvRWdcbnNUVVZpMmdoenE4d20yN3VkL21JTTdBWTJxRU9SUjhHbzNUVkI0SHpXUWdwWnJ0M2k1TUlsQ2FZNTA0THpTUmlcbmlnSEN6QVBsSHdzK1cwckI1TitlcjUvMnBKS25mQlNEaUNpRkFWdENMT1o3Z0xpTW0wamhPMkI2dFVYSEkvK01cblJQankwMmk1OWxJTk1SUmV2NTZHS3RjZDlxTy8wa1VKV2RaVGRBMlhvUzgyaXhQdlp0WFFwVXB1TDEyYWIrOUVcbmFESzhaNFJISllZZkNUM1E1dk5BWGFpV1ErOFBUV20yUWdCUi9ia3dTV2MrTnBVRmdOUE45UHZRaThXRWc1VW1cbkFHTUNBd0VBQWFOak1HRXdIUVlEVlIwT0JCWUVGRFpoNFFCOGlBVUpVWXRFYkVmL0dreko2azhTTUI4R0ExVWRcbkl3UVlNQmFBRkRaaDRRQjhpQVVKVVl0RWJFZi9Ha3pKNms4U01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RnWURcblZSMFBBUUgvQkFRREFnSUVNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUJPTWFCYzhvdW1YYjJ2b2M3WENXbnVcblhLaEJCSzNlMktNR3ozOXQ3bEEzWFhSZTJaTExBa0xNNXkzSjd0VVJrZjVhMVN1dGZkT3lYQW1lRTZTUm84M1Vcbmg2V3N6b2RtTWt4SzVHTTRKR3JudDRwQmlzdTVpZ1hFeWRhVzdxcTJDZEM2RE9HakcrbUVrTjgvVEE2cDNjbm9cbkwvc1B5ejZldmRqTGxTZUo4ckZCSDZ4V3lJWkNicmNwWUVKelhhVU9FYXh4WHhnWXo1L2NUaVZLTjJNMUcyb2tcblFCVUlZU1k2YmpFTDRhVU41Y2ZvN29nUDNVdmxpRW8zRW8wWWd3dXpSMnYwS1I2QzFjWnFaSlNUbmdoSUMvdkFcbkQzMktkTlErYzNOK3ZsMk9Uc1VWTUMxR2lXa25nTngxT08xK2tYVytZVG5uVFVPdE9Jc3dVUC9WcWQ1U1lnQUlcbm1NQWZZOFU5L2lJZ2tRajZUMlc2RnNTY3k5NElOOWZGaEUxVXR6bUxvQkl1VUZzVlhKTVR6K0p1Y3RoK0lxb1dcbkZ1YTl2MVI5My9rOThwNDFwanRGWCtIOERzbFZnZlAwOTd2anU0S0RscU42NHhWMWdydzNaTGw0Q2lPZS9BOTFcbm9lTG0yVUhPcTZ3bjNlc0I0cjJFSVFLYjZqVFZHdTVzWUNjZFdwWHIwQVVWcWNBQlBkZ0wrSDdxSmd1QncwOW9cbmptNnhOSXJ3Mk9vY3JES3N1ZGsvb2tyL0F3cUV5UEt3OVduTWxRZ0xJS3cxck9ERzJOdlU5b1IzR1ZHZE1rVUJcblp1dEw4VnVGa0VSUUd0NnZRMk9DdzBzVjQ3Vk1rdVliYWNLL3h5WkZpUmNyUEpQYjQxemdiUWo5WEFFeUxLQ0hcbmV4MFNkRHJ4K3RXVURxRzhBdDJKSEE9PVxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA: () => (/* binding */ GlobalSign_Root_CA)\n/* harmony export */ });\n/**\n * GlobalSign Root CA\n *\n * Downloaded from https://pki.goog/roots.pem\n *\n * Valid until 2028-01-28 @ 04:00 PST\n *\n * SHA256 Fingerprint\n * EB:D4:10:40:E4:BB:3E:C7:42:C9:E3:81:D3:1E:F2:A4:1A:48:B6:68:5C:96:E7:CE:F3:C1:DF:6C:D4:33:1C:99\n */\nconst GlobalSign_Root_CA = `-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9zZXJ2aWNlcy9kZWZhdWx0Um9vdENlcnRzL2FuZHJvaWQtc2FmZXR5bmV0LmpzPzU0MjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHbG9iYWxTaWduIFJvb3QgQ0FcbiAqXG4gKiBEb3dubG9hZGVkIGZyb20gaHR0cHM6Ly9wa2kuZ29vZy9yb290cy5wZW1cbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDI4LTAxLTI4IEAgMDQ6MDAgUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiBFQjpENDoxMDo0MDpFNDpCQjozRTpDNzo0MjpDOTpFMzo4MTpEMzoxRTpGMjpBNDoxQTo0ODpCNjo2ODo1Qzo5NjpFNzpDRTpGMzpDMTpERjo2QzpENDozMzoxQzo5OVxuICovXG5leHBvcnQgY29uc3QgR2xvYmFsU2lnbl9Sb290X0NBID0gYC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxuTUlJRGRUQ0NBbDJnQXdJQkFnSUxCQUFBQUFBQkZVdGF3NVF3RFFZSktvWklodmNOQVFFRkJRQXdWekVMTUFrR1xuQTFVRUJoTUNRa1V4R1RBWEJnTlZCQW9URUVkc2IySmhiRk5wWjI0Z2JuWXRjMkV4RURBT0JnTlZCQXNUQjFKdlxuYjNRZ1EwRXhHekFaQmdOVkJBTVRFa2RzYjJKaGJGTnBaMjRnVW05dmRDQkRRVEFlRncwNU9EQTVNREV4TWpBd1xuTURCYUZ3MHlPREF4TWpneE1qQXdNREJhTUZjeEN6QUpCZ05WQkFZVEFrSkZNUmt3RndZRFZRUUtFeEJIYkc5aVxuWVd4VGFXZHVJRzUyTFhOaE1SQXdEZ1lEVlFRTEV3ZFNiMjkwSUVOQk1Sc3dHUVlEVlFRREV4SkhiRzlpWVd4VFxuYVdkdUlGSnZiM1FnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURhRHVhWlxuamM2ajQwK0tmdnZ4aTRNbGErcElIL0Vxc0xtVkVRUzk4R1BSNG1kbXp4emR6eHRJSys2TmlZNmFyeW1BWmF2cFxueHkwU3k2c2NUSEFIb1QwS01NMFZqVS80M2RTTVVCVWM3MUR1eEM3My9PbFM4cEY5NEczVk5UQ09Ya056OGtIcFxuMVdyanNvazZWams0YndZOGlHbGJLazNGcDFTNGJJbk1tL2s4eXVYOWlmVVNQSko0bHRiY2RHNlRSR0hSamNkR1xuc25VT2h1Z1ppdFZ0Yk5WNEZwV2k2Y2dLT092eUpCTlBjMVNURTRVNkc3d2VOTFdMQll5NWQ0dXgyeDhna2FzSlxuVTI2UXpuczNkTGx3UjVFaVVXTVdlYTZ4cmtFbUNNZ1pLOUZHcWtqV1pDclhnelQvTENyQmJCbERTZ2VGNTlOOFxuOWlGbzcrcnlVcDkvazVEUEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lCQmpBUEJnTlZIUk1CQWY4RVxuQlRBREFRSC9NQjBHQTFVZERnUVdCQlJnZTJZYVJRMlh5b2xRTDMwRXpUU28vL3o5U3pBTkJna3Foa2lHOXcwQlxuQVFVRkFBT0NBUUVBMW5QbmZFOTIwSTIvN0xxaXZqVEZLREsxZlB4c25Dd3J2UW1lVTc5clhxb1JTTGJsQ0tPelxueWoxaFRkTkdDYk0rdzZEalkxVWI4cnJ2clRuaFE3azRvK1l2aWlZNzc2QlFWdm5HQ3YwNHpjUUxjRkdVbDVnRVxuMzhOZmxOVVZ5UlJCbk1SZGRXUVZEZjlWTU95R2ovOE43eXk1WTBiMnF2emZ2R245TGhKSVpKcmdsZkNtN3ltUFxuQWJFVnRRd2RwZjVwTEdra2VCNnpweHh4WXU3S3lKZXNGMTJLd3ZoSGhtNHF4Rll4bGRCbmlZVXIrV3ltWFVhZFxuREtxQzVKbFIzWEMzMjFZOVllUnE0VnpXOXY0OTNrSE1CNjVqVXI5VFUvUXI2Y2Y5dHZlQ1g0WFNRUmpiZ2JNRVxuSE1VZnBJQnZGU0RKM2d5SUNoM1dabFhpL0VqSktTWnA0QT09XG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXG5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apple_WebAuthn_Root_CA: () => (/* binding */ Apple_WebAuthn_Root_CA)\n/* harmony export */ });\n/**\n * Apple WebAuthn Root CA\n *\n * Downloaded from https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem\n *\n * Valid until 2045-03-14 @ 17:00 PST\n *\n * SHA256 Fingerprint\n * 09:15:DD:5C:07:A2:8D:B5:49:D1:F6:77:BB:5A:75:D4:BF:BE:95:61:A7:73:42:43:27:76:2E:9E:02:F9:BB:29\n */\nconst Apple_WebAuthn_Root_CA = `-----BEGIN CERTIFICATE-----\nMIICEjCCAZmgAwIBAgIQaB0BbHo84wIlpQGUKEdXcTAKBggqhkjOPQQDAzBLMR8w\nHQYDVQQDDBZBcHBsZSBXZWJBdXRobiBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\nbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIwMDMxODE4MjEzMloXDTQ1MDMx\nNTAwMDAwMFowSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEG\nA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABCJCQ2pTVhzjl4Wo6IhHtMSAzO2cv+H9DQKev3//fG59G11k\nxu9eI0/7o6V5uShBpe1u6l6mS19S1FEh6yGljnZAJ+2GNP1mi/YK2kSXIuTHjxA/\npcoRf7XkOtO4o1qlcaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJtdk\n2cV4wlpn0afeaxLQG2PxxtcwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2cA\nMGQCMFrZ+9DsJ1PW9hfNdBywZDsWDbWFp28it1d/5w2RPkRX3Bbn/UbDTNLx7Jr3\njAGGiQIwHFj+dJZYUJR786osByBelJYsVZd2GbHQu209b5RCmGQ21gpSAk9QZW4B\n1bWeT0vT\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hcHBsZS5qcz9mZWVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXBwbGUgV2ViQXV0aG4gUm9vdCBDQVxuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL3d3dy5hcHBsZS5jb20vY2VydGlmaWNhdGVhdXRob3JpdHkvQXBwbGVfV2ViQXV0aG5fUm9vdF9DQS5wZW1cbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDQ1LTAzLTE0IEAgMTc6MDAgUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiAwOToxNTpERDo1QzowNzpBMjo4RDpCNTo0OTpEMTpGNjo3NzpCQjo1QTo3NTpENDpCRjpCRTo5NTo2MTpBNzo3Mzo0Mjo0MzoyNzo3NjoyRTo5RTowMjpGOTpCQjoyOVxuICovXG5leHBvcnQgY29uc3QgQXBwbGVfV2ViQXV0aG5fUm9vdF9DQSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSUNFakNDQVptZ0F3SUJBZ0lRYUIwQmJIbzg0d0lscFFHVUtFZFhjVEFLQmdncWhrak9QUVFEQXpCTE1SOHdcbkhRWURWUVFEREJaQmNIQnNaU0JYWldKQmRYUm9iaUJTYjI5MElFTkJNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpcbmJtTXVNUk13RVFZRFZRUUlEQXBEWVd4cFptOXlibWxoTUI0WERUSXdNRE14T0RFNE1qRXpNbG9YRFRRMU1ETXhcbk5UQXdNREF3TUZvd1N6RWZNQjBHQTFVRUF3d1dRWEJ3YkdVZ1YyVmlRWFYwYUc0Z1VtOXZkQ0JEUVRFVE1CRUdcbkExVUVDZ3dLUVhCd2JHVWdTVzVqTGpFVE1CRUdBMVVFQ0F3S1EyRnNhV1p2Y201cFlUQjJNQkFHQnlxR1NNNDlcbkFnRUdCU3VCQkFBaUEySUFCQ0pDUTJwVFZoempsNFdvNkloSHRNU0F6TzJjditIOURRS2V2My8vZkc1OUcxMWtcbnh1OWVJMC83bzZWNXVTaEJwZTF1Nmw2bVMxOVMxRkVoNnlHbGpuWkFKKzJHTlAxbWkvWUsya1NYSXVUSGp4QS9cbnBjb1JmN1hrT3RPNG8xcWxjYU5DTUVBd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUp0ZGtcbjJjVjR3bHBuMGFmZWF4TFFHMlB4eHRjd0RnWURWUjBQQVFIL0JBUURBZ0VHTUFvR0NDcUdTTTQ5QkFNREEyY0Fcbk1HUUNNRnJaKzlEc0oxUFc5aGZOZEJ5d1pEc1dEYldGcDI4aXQxZC81dzJSUGtSWDNCYm4vVWJEVE5MeDdKcjNcbmpBR0dpUUl3SEZqK2RKWllVSlI3ODZvc0J5QmVsSllzVlpkMkdiSFF1MjA5YjVSQ21HUTIxZ3BTQWs5UVpXNEJcbjFiV2VUMHZUXG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXG5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA_R3: () => (/* binding */ GlobalSign_Root_CA_R3)\n/* harmony export */ });\n/**\n * GlobalSign Root CA - R3\n *\n * Downloaded from https://valid.r3.roots.globalsign.com/\n *\n * Valid until 2029-03-18 @ 00:00 PST\n *\n * SHA256 Fingerprint\n * CB:B5:22:D7:B7:F1:27:AD:6A:01:13:86:5B:DF:1C:D4:10:2E:7D:07:59:AF:63:5A:7C:F4:72:0D:C9:63:C5:3B\n */\nconst GlobalSign_Root_CA_R3 = `-----BEGIN CERTIFICATE-----\n MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\n A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\n Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\n MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\n A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\n RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\n gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\n KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\n QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\n XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\n DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\n LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\n RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\n jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n 6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\n mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\n Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\n WD9f\n -----END CERTIFICATE-----\n `;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhdXRobi1hcHAvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanM/ZTc1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdsb2JhbFNpZ24gUm9vdCBDQSAtIFIzXG4gKlxuICogRG93bmxvYWRlZCBmcm9tIGh0dHBzOi8vdmFsaWQucjMucm9vdHMuZ2xvYmFsc2lnbi5jb20vXG4gKlxuICogVmFsaWQgdW50aWwgMjAyOS0wMy0xOCBAIDAwOjAwIFBTVFxuICpcbiAqIFNIQTI1NiBGaW5nZXJwcmludFxuICogQ0I6QjU6MjI6RDc6Qjc6RjE6Mjc6QUQ6NkE6MDE6MTM6ODY6NUI6REY6MUM6RDQ6MTA6MkU6N0Q6MDc6NTk6QUY6NjM6NUE6N0M6RjQ6NzI6MEQ6Qzk6NjM6QzU6M0JcbiAqL1xuZXhwb3J0IGNvbnN0IEdsb2JhbFNpZ25fUm9vdF9DQV9SMyA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbiBNSUlEWHpDQ0FrZWdBd0lCQWdJTEJBQUFBQUFCSVZoVENLSXdEUVlKS29aSWh2Y05BUUVMQlFBd1RERWdNQjRHXG4gQTFVRUN4TVhSMnh2WW1Gc1UybG5iaUJTYjI5MElFTkJJQzBnVWpNeEV6QVJCZ05WQkFvVENrZHNiMkpoYkZOcFxuIFoyNHhFekFSQmdOVkJBTVRDa2RzYjJKaGJGTnBaMjR3SGhjTk1Ea3dNekU0TVRBd01EQXdXaGNOTWprd016RTRcbiBNVEF3TURBd1dqQk1NU0F3SGdZRFZRUUxFeGRIYkc5aVlXeFRhV2R1SUZKdmIzUWdRMEVnTFNCU016RVRNQkVHXG4gQTFVRUNoTUtSMnh2WW1Gc1UybG5iakVUTUJFR0ExVUVBeE1LUjJ4dlltRnNVMmxuYmpDQ0FTSXdEUVlKS29aSVxuIGh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXdsZHBCNUJuZ2lGdlhBZzdhRXlpaWUvUVYyRWNXdGlITDhcbiBSZ0pEeDdLS25RUmZKTXN1UytGZ2drYmhVcXNNZ1Vkd2JOMWswZXYxTEtNUGdqME1LNjZYMTdZVWhoQjV1enNUXG4gZ0hlTUNPRkowbXBpTHg5ZStwWm8zNGtubFRpZkJ0Yyt5Y3NtV1ExejNyREk2U1lPZ3hYRzcxdUwwZ1JneWttbVxuIEtQWnBPL2JMeUNpUjVaMktZVmMzckhRVTNIVGdPdTV5THk2Yys5Qzd2L1U5QU9FR00raUNLNjVUcGpvV2M0emRcbiBRUTRnT3NDMHA2SHBzaytRTGpKZzZWZkx1UVNTYUdqbE9DWmdkYktmZC8rUkZPK3VJRW44clVBVlNORUNNV0VaXG4gWHJpWDc2MTN0MlNhZXI5ZndSUHZtMkw3RFd6Z1ZHa1dxUVBhYnVtRGszRjJ4bW1GZ2hjQ0F3RUFBYU5DTUVBd1xuIERnWURWUjBQQVFIL0JBUURBZ0VHTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkkvd1MzK29cbiBMa1VrcmsxUSttT2FpOTdpM1J1OE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQkxRTnZBVUtyK3lBenY5NVpVXG4gUlVtN2xnQUpRYXl6RTRhR0tBY3p5bXZtZExtNkFDMnVwQXJUOWZIeEQ0cS9jMmRLZzhkRWUzamdyMjVzYndNcFxuIGpqTTVSY09PNUxsWGJLcjhFcGJzVThZdDVDUnN1WlJqKzl4VGFHZFdQb080enpVaHc4bG8vczdhd2xPcXpKQ0tcbiA2ZkJkUm95VjNYcFlLQm92SGQ3TkFEZEJqKzFFYmRkVEtKZCs4MmNFSGhYWGlwYTAwOTVNSjZSTUczTnpkdlFYXG4gbWNJZmVnN2pMUWl0Q2h3cy96eXJWUTRQa1g0MjY4TlhTYjdoTGkxOFlJdkRRVkVUSTUzTzl6SnJsQUdvbWVjc1xuIE14ODZPeVhTaGtET095eUdlTWxoTHhTNjd0dFZiOStFN2dVSlRiMG8ySExPMDJKUVpSN3JrcGVETWRtenRjcEhcbiBXRDlmXG4gLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuIGA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/metadataService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMetadataService: () => (/* binding */ BaseMetadataService),\n/* harmony export */   MetadataService: () => (/* binding */ MetadataService)\n/* harmony export */ });\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _settingsService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/logging.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\");\n/* harmony import */ var _helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n/* harmony import */ var _helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n/* harmony import */ var _metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../metadata/parseJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\");\n/* harmony import */ var _metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../metadata/verifyJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\");\n\n\n\n\n\n\n\n\n\nconst defaultURLMDS = 'https://mds.fidoalliance.org/'; // v3\nvar SERVICE_STATE;\n(function (SERVICE_STATE) {\n    SERVICE_STATE[SERVICE_STATE[\"DISABLED\"] = 0] = \"DISABLED\";\n    SERVICE_STATE[SERVICE_STATE[\"REFRESHING\"] = 1] = \"REFRESHING\";\n    SERVICE_STATE[SERVICE_STATE[\"READY\"] = 2] = \"READY\";\n})(SERVICE_STATE || (SERVICE_STATE = {}));\nconst log = (0,_helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__.getLogger)('MetadataService');\n/**\n * A basic service for coordinating interactions with the FIDO Metadata Service. This includes BLOB\n * download and parsing, and on-demand requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */\nclass BaseMetadataService {\n    constructor() {\n        Object.defineProperty(this, \"mdsCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"statementCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SERVICE_STATE.DISABLED\n        });\n        Object.defineProperty(this, \"verificationMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'strict'\n        });\n    }\n    /**\n     * Prepare the service to handle remote MDS servers and/or cache local metadata statements.\n     *\n     * **Options:**\n     *\n     * @param opts.mdsServers An array of URLs to FIDO Alliance Metadata Service\n     * (version 3.0)-compatible servers. Defaults to the official FIDO MDS server\n     * @param opts.statements An array of local metadata statements\n     * @param opts.verificationMode How MetadataService will handle unregistered AAGUIDs. Defaults to\n     * `\"strict\"` which throws errors during registration response verification when an\n     * unregistered AAGUID is encountered. Set to `\"permissive\"` to allow registration by\n     * authenticators with unregistered AAGUIDs\n     */\n    async initialize(opts = {}) {\n        const { mdsServers = [defaultURLMDS], statements, verificationMode } = opts;\n        this.setState(SERVICE_STATE.REFRESHING);\n        // If metadata statements are provided, load them into the cache first\n        if (statements?.length) {\n            let statementsAdded = 0;\n            statements.forEach((statement) => {\n                // Only cache statements that are for FIDO2-compatible authenticators\n                if (statement.aaguid) {\n                    this.statementCache[statement.aaguid] = {\n                        entry: {\n                            metadataStatement: statement,\n                            statusReports: [],\n                            timeOfLastStatusChange: '1970-01-01',\n                        },\n                        url: '',\n                    };\n                    statementsAdded += 1;\n                }\n            });\n            log(`Cached ${statementsAdded} local statements`);\n        }\n        // If MDS servers are provided, then process them and add their statements to the cache\n        if (mdsServers?.length) {\n            // Get a current count so we know how many new statements we've added from MDS servers\n            const currentCacheCount = Object.keys(this.statementCache).length;\n            let numServers = mdsServers.length;\n            for (const url of mdsServers) {\n                try {\n                    await this.downloadBlob({\n                        url,\n                        no: 0,\n                        nextUpdate: new Date(0),\n                    });\n                }\n                catch (err) {\n                    // Notify of the error and move on\n                    log(`Could not download BLOB from ${url}:`, err);\n                    numServers -= 1;\n                }\n            }\n            // Calculate the difference to get the total number of new statements we successfully added\n            const newCacheCount = Object.keys(this.statementCache).length;\n            const cacheDiff = newCacheCount - currentCacheCount;\n            log(`Cached ${cacheDiff} statements from ${numServers} metadata server(s)`);\n        }\n        if (verificationMode) {\n            this.verificationMode = verificationMode;\n        }\n        this.setState(SERVICE_STATE.READY);\n    }\n    /**\n     * Get a metadata statement for a given AAGUID.\n     *\n     * This method will coordinate updating the cache as per the `nextUpdate` property in the initial\n     * BLOB download.\n     */\n    async getStatement(aaguid) {\n        if (this.state === SERVICE_STATE.DISABLED) {\n            return;\n        }\n        if (!aaguid) {\n            return;\n        }\n        if (aaguid instanceof Uint8Array) {\n            aaguid = (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__.convertAAGUIDToString)(aaguid);\n        }\n        // If a cache refresh is in progress then pause this until the service is ready\n        await this.pauseUntilReady();\n        // Try to grab a cached statement\n        const cachedStatement = this.statementCache[aaguid];\n        if (!cachedStatement) {\n            if (this.verificationMode === 'strict') {\n                // FIDO conformance requires RP's to only support registered AAGUID's\n                throw new Error(`No metadata statement found for aaguid \"${aaguid}\"`);\n            }\n            // Allow registration verification to continue without using metadata\n            return;\n        }\n        // If the statement points to an MDS API, check the MDS' nextUpdate to see if we need to refresh\n        if (cachedStatement.url) {\n            const mds = this.mdsCache[cachedStatement.url];\n            const now = new Date();\n            if (now > mds.nextUpdate) {\n                try {\n                    this.setState(SERVICE_STATE.REFRESHING);\n                    await this.downloadBlob(mds);\n                }\n                finally {\n                    this.setState(SERVICE_STATE.READY);\n                }\n            }\n        }\n        const { entry } = cachedStatement;\n        // Check to see if the this aaguid has a status report with a \"compromised\" status\n        for (const report of entry.statusReports) {\n            const { status } = report;\n            if (status === 'USER_VERIFICATION_BYPASS' ||\n                status === 'ATTESTATION_KEY_COMPROMISE' ||\n                status === 'USER_KEY_REMOTE_COMPROMISE' ||\n                status === 'USER_KEY_PHYSICAL_COMPROMISE') {\n                throw new Error(`Detected compromised aaguid \"${aaguid}\"`);\n            }\n        }\n        return entry.metadataStatement;\n    }\n    /**\n     * Download and process the latest BLOB from MDS\n     */\n    async downloadBlob(mds) {\n        const { url, no } = mds;\n        // Get latest \"BLOB\" (FIDO's terminology, not mine)\n        const resp = await (0,_helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__.fetch)(url);\n        const data = await resp.text();\n        // Parse the JWT\n        const parsedJWT = (0,_metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__.parseJWT)(data);\n        const header = parsedJWT[0];\n        const payload = parsedJWT[1];\n        if (payload.no <= no) {\n            // From FIDO MDS docs: \"also ignore the file if its number (no) is less or equal to the\n            // number of the last BLOB cached locally.\"\n            throw new Error(`Latest BLOB no. \"${payload.no}\" is not greater than previous ${no}`);\n        }\n        const headerCertsPEM = header.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM);\n        try {\n            // Validate the certificate chain\n            const rootCerts = _settingsService_js__WEBPACK_IMPORTED_MODULE_3__.SettingsService.getRootCertificates({\n                identifier: 'mds',\n            });\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__.validateCertificatePath)(headerCertsPEM, rootCerts);\n        }\n        catch (error) {\n            const _error = error;\n            // From FIDO MDS docs: \"ignore the file if the chain cannot be verified or if one of the\n            // chain certificates is revoked\"\n            throw new Error(`BLOB certificate path could not be validated: ${_error.message}`);\n        }\n        // Verify the BLOB JWT signature\n        const leafCert = headerCertsPEM[0];\n        const verified = await (0,_metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__.verifyJWT)(data, (0,_helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(leafCert));\n        if (!verified) {\n            // From FIDO MDS docs: \"The FIDO Server SHOULD ignore the file if the signature is invalid.\"\n            throw new Error('BLOB signature could not be verified');\n        }\n        // Cache statements for FIDO2 devices\n        for (const entry of payload.entries) {\n            // Only cache entries with an `aaguid`\n            if (entry.aaguid) {\n                this.statementCache[entry.aaguid] = { entry, url };\n            }\n        }\n        // Remember info about the server so we can refresh later\n        const [year, month, day] = payload.nextUpdate.split('-');\n        this.mdsCache[url] = {\n            ...mds,\n            // Store the payload `no` to make sure we're getting the next BLOB in the sequence\n            no: payload.no,\n            // Convert the nextUpdate property into a Date so we can determine when to re-download\n            nextUpdate: new Date(parseInt(year, 10), \n            // Months need to be zero-indexed\n            parseInt(month, 10) - 1, parseInt(day, 10)),\n        };\n    }\n    /**\n     * A helper method to pause execution until the service is ready\n     */\n    pauseUntilReady() {\n        if (this.state === SERVICE_STATE.READY) {\n            return new Promise((resolve) => {\n                resolve();\n            });\n        }\n        // State isn't ready, so set up polling\n        const readyPromise = new Promise((resolve, reject) => {\n            const totalTimeoutMS = 70000;\n            const intervalMS = 100;\n            let iterations = totalTimeoutMS / intervalMS;\n            // Check service state every `intervalMS` milliseconds\n            const intervalID = globalThis.setInterval(() => {\n                if (iterations < 1) {\n                    clearInterval(intervalID);\n                    reject(`State did not become ready in ${totalTimeoutMS / 1000} seconds`);\n                }\n                else if (this.state === SERVICE_STATE.READY) {\n                    clearInterval(intervalID);\n                    resolve();\n                }\n                iterations -= 1;\n            }, intervalMS);\n        });\n        return readyPromise;\n    }\n    /**\n     * Report service status on change\n     */\n    setState(newState) {\n        this.state = newState;\n        if (newState === SERVICE_STATE.DISABLED) {\n            log('MetadataService is DISABLED');\n        }\n        else if (newState === SERVICE_STATE.REFRESHING) {\n            log('MetadataService is REFRESHING');\n        }\n        else if (newState === SERVICE_STATE.READY) {\n            log('MetadataService is READY');\n        }\n    }\n}\n// Export a service singleton\nconst MetadataService = new BaseMetadataService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/settingsService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsService: () => (/* binding */ SettingsService)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultRootCerts/android-safetynet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\");\n/* harmony import */ var _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultRootCerts/android-key.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\");\n/* harmony import */ var _defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultRootCerts/apple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\");\n/* harmony import */ var _defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultRootCerts/mds.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\");\n\n\n\n\n\nclass BaseSettingsService {\n    constructor() {\n        // Certificates are stored as PEM-formatted strings\n        Object.defineProperty(this, \"pemCertificates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pemCertificates = new Map();\n    }\n    /**\n     * Set potential root certificates for attestation formats that use them. Root certs will be tried\n     * one-by-one when validating a certificate path.\n     *\n     * Certificates can be specified as a raw `Buffer`, or as a PEM-formatted string. If a\n     * `Buffer` is passed in it will be converted to PEM format.\n     */\n    setRootCertificates(opts) {\n        const { identifier, certificates } = opts;\n        const newCertificates = [];\n        for (const cert of certificates) {\n            if (cert instanceof Uint8Array) {\n                newCertificates.push((0,_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM)(cert));\n            }\n            else {\n                newCertificates.push(cert);\n            }\n        }\n        this.pemCertificates.set(identifier, newCertificates);\n    }\n    /**\n     * Get any registered root certificates for the specified attestation format\n     */\n    getRootCertificates(opts) {\n        const { identifier } = opts;\n        return this.pemCertificates.get(identifier) ?? [];\n    }\n}\nconst SettingsService = new BaseSettingsService();\n// Initialize default certificates\nSettingsService.setRootCertificates({\n    identifier: 'android-key',\n    certificates: [\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_1,\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_2,\n    ],\n});\nSettingsService.setRootCertificates({\n    identifier: 'android-safetynet',\n    certificates: [_defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__.GlobalSign_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'apple',\n    certificates: [_defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__.Apple_WebAuthn_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'mds',\n    certificates: [_defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__.GlobalSign_Root_CA_R3],\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvc2V0dGluZ3NTZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4RTtBQUNEO0FBQytDO0FBQ3ZEO0FBQ0g7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwyQkFBMkI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDBGQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0dBQWtDO0FBQzFDLFFBQVEsZ0dBQWtDO0FBQzFDO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxtQkFBbUIsc0ZBQWtCO0FBQ3JDLENBQUM7QUFDRDtBQUNBO0FBQ0EsbUJBQW1CLDhFQUFzQjtBQUN6QyxDQUFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQiwyRUFBcUI7QUFDeEMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYmF1dGhuLWFwcC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9zZXJ2aWNlcy9zZXR0aW5nc1NlcnZpY2UuanM/ZGNjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IEdsb2JhbFNpZ25fUm9vdF9DQSB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcyc7XG5pbXBvcnQgeyBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xLCBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8yLCB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcyc7XG5pbXBvcnQgeyBBcHBsZV9XZWJBdXRobl9Sb290X0NBIH0gZnJvbSAnLi9kZWZhdWx0Um9vdENlcnRzL2FwcGxlLmpzJztcbmltcG9ydCB7IEdsb2JhbFNpZ25fUm9vdF9DQV9SMyB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanMnO1xuY2xhc3MgQmFzZVNldHRpbmdzU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIENlcnRpZmljYXRlcyBhcmUgc3RvcmVkIGFzIFBFTS1mb3JtYXR0ZWQgc3RyaW5nc1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwZW1DZXJ0aWZpY2F0ZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wZW1DZXJ0aWZpY2F0ZXMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldCBwb3RlbnRpYWwgcm9vdCBjZXJ0aWZpY2F0ZXMgZm9yIGF0dGVzdGF0aW9uIGZvcm1hdHMgdGhhdCB1c2UgdGhlbS4gUm9vdCBjZXJ0cyB3aWxsIGJlIHRyaWVkXG4gICAgICogb25lLWJ5LW9uZSB3aGVuIHZhbGlkYXRpbmcgYSBjZXJ0aWZpY2F0ZSBwYXRoLlxuICAgICAqXG4gICAgICogQ2VydGlmaWNhdGVzIGNhbiBiZSBzcGVjaWZpZWQgYXMgYSByYXcgYEJ1ZmZlcmAsIG9yIGFzIGEgUEVNLWZvcm1hdHRlZCBzdHJpbmcuIElmIGFcbiAgICAgKiBgQnVmZmVyYCBpcyBwYXNzZWQgaW4gaXQgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gUEVNIGZvcm1hdC5cbiAgICAgKi9cbiAgICBzZXRSb290Q2VydGlmaWNhdGVzKG9wdHMpIHtcbiAgICAgICAgY29uc3QgeyBpZGVudGlmaWVyLCBjZXJ0aWZpY2F0ZXMgfSA9IG9wdHM7XG4gICAgICAgIGNvbnN0IG5ld0NlcnRpZmljYXRlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGNlcnQgb2YgY2VydGlmaWNhdGVzKSB7XG4gICAgICAgICAgICBpZiAoY2VydCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgICAgICBuZXdDZXJ0aWZpY2F0ZXMucHVzaChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKGNlcnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0NlcnRpZmljYXRlcy5wdXNoKGNlcnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucGVtQ2VydGlmaWNhdGVzLnNldChpZGVudGlmaWVyLCBuZXdDZXJ0aWZpY2F0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYW55IHJlZ2lzdGVyZWQgcm9vdCBjZXJ0aWZpY2F0ZXMgZm9yIHRoZSBzcGVjaWZpZWQgYXR0ZXN0YXRpb24gZm9ybWF0XG4gICAgICovXG4gICAgZ2V0Um9vdENlcnRpZmljYXRlcyhvcHRzKSB7XG4gICAgICAgIGNvbnN0IHsgaWRlbnRpZmllciB9ID0gb3B0cztcbiAgICAgICAgcmV0dXJuIHRoaXMucGVtQ2VydGlmaWNhdGVzLmdldChpZGVudGlmaWVyKSA/PyBbXTtcbiAgICB9XG59XG5leHBvcnQgY29uc3QgU2V0dGluZ3NTZXJ2aWNlID0gbmV3IEJhc2VTZXR0aW5nc1NlcnZpY2UoKTtcbi8vIEluaXRpYWxpemUgZGVmYXVsdCBjZXJ0aWZpY2F0ZXNcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYW5kcm9pZC1rZXknLFxuICAgIGNlcnRpZmljYXRlczogW1xuICAgICAgICBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xLFxuICAgICAgICBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8yLFxuICAgIF0sXG59KTtcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYW5kcm9pZC1zYWZldHluZXQnLFxuICAgIGNlcnRpZmljYXRlczogW0dsb2JhbFNpZ25fUm9vdF9DQV0sXG59KTtcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYXBwbGUnLFxuICAgIGNlcnRpZmljYXRlczogW0FwcGxlX1dlYkF1dGhuX1Jvb3RfQ0FdLFxufSk7XG5TZXR0aW5nc1NlcnZpY2Uuc2V0Um9vdENlcnRpZmljYXRlcyh7XG4gICAgaWRlbnRpZmllcjogJ21kcycsXG4gICAgY2VydGlmaWNhdGVzOiBbR2xvYmFsU2lnbl9Sb290X0NBX1IzXSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\n");

/***/ })

};
;